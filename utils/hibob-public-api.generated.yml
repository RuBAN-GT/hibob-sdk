openapi: 3.0.1
info:
  title: Bob Hiring API
  description: Use Public API to access Bob Hiring in Bob
  version: 1.0.0
servers:
  - url: https://api.hibob.com/v1
    description: Production
  - url: https://api.sandbox.hibob.com/v1
    description: Sandbox
x-readme:
  metrics-enabled: false
paths:
  /hiring/job-ads/{id}:
    get:
      tags:
        - Hiring
      summary: Get the details of a single job ad
      description: >-
        Returns the details of the job ad that was promoted on the Bob careers page.  <br /><br /> To learn more about
        the Hiring API and how to integrate with your career page, see <a
        href="https://apidocs.hibob.com/docs/how-to-use-hiring-api-careers-page" target="\_blank">How to integrate with
        your careers page</a>
      parameters:
        - name: id
          in: path
          description: >-
            The job ad ID you want to retrieve. <br><br> To test with a specific job ad ID, locate the ID in the 'Job
            Detail Link' on Bob's career page, this ID is the last part of the URL. Alternatively, retrieve the job ads
            list using the 'POST' endpoint and extract the ID from the job ads list in the response.<br>
          schema:
            type: string
          required: true
        - name: preferredLanguage
          in: query
          description: >-
            The job ads will be returned in the language you provide in the preferred language (if available).
            Otherwise, the language specified in the job ad will be used.   list of all possible values is available via
            the Metadata API under Get all company lists (endpoint GET
            https://api.hibob.com/v1/company/named-lists/languages).
          schema:
            type: string
      responses:
        '200':
          description: The detailed structure of the job ad details being returned in the response body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  /jobAd/id:
                    type: object
                    properties:
                      value:
                        type: string
                        format: uuid
                    description: >-
                      This is the backend-id of the job ad. <br><br> <b>Note</b>: Use this job ID slug within the URL of
                      the job ad page on your career page in this format "https://yourdomain.com/{job-ad-id}".<br> This
                      will ensure the 'Job Detail Link' from Bob directs users to the correct job ad page on your
                      website.
                  /jobAd/applyUrl:
                    type: object
                    properties:
                      value:
                        type: string
                    description: >-
                      This URL links to the application form that allows new candidates to apply for the job. It is
                      essential to use this link as your application form, to ensure that candidate details are
                      automatically submitted to Bob.
                  /jobAd/title:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The title of the job ad as defined on the job description used to promote the job opening.
                  /jobAd/departmentId:
                    type: object
                    properties:
                      value:
                        type: string
                    description: |-
                      The ID of the department defined on the job opening that the job ad was created from. <br>
                       To obtain the available departments, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `department` in the listname path parameter.
                  /jobAd/department:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The name of the department defined on the job opening that the job ad was created from.
                  /jobAd/employmentTypeId:
                    type: object
                    properties:
                      value:
                        type: string
                    description: |-
                      The ID of the employment type defined on the job opening that the job ad was created from.
                       To obtain the available employment types, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `payrollEmploymentType` in the listname path parameter.
                    format: string
                  /jobAd/employmentType:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The name of the employment type defined on the job opening that the job ad was created from.
                  /jobAd/siteId:
                    type: object
                    properties:
                      value:
                        type: integer
                        format: long
                    description: |-
                      The ID of the site defined on the job opening that the job ad was created from.
                       To obtain the available sites, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `site` in the listname path parameter.
                  /jobAd/site:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The name of the site defined on the job opening that the job ad was created from.
                  /jobAd/country:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The county name of the site defined on the job opening that the job ad was created from.
                  /jobAd/languageCode:
                    type: object
                    properties:
                      value:
                        type: string
                    description: |-
                      The language code of the selected language on job description used to promote the job opening.
                       To obtain the available languages, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `languages` in the listname path parameter.
                  /jobAd/description:
                    type: object
                    properties:
                      value:
                        type: string
                    description: >-
                      The job description that was used to promote the job opening to the careers page. Note that the
                      description may include HTML code to support text formatting. Ensure it is parsed accordingly.
                  /jobAd/requirements:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The requirements as defined on the job description used to promote the job opening.
                  /jobAd/responsibilities:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The responsibilities as defined on the job description used to promote the job opening.
                  /jobAd/benefits:
                    type: object
                    properties:
                      value:
                        type: string
                    description: The benefits as defined on the job description used to promote the job opening.
                x-readme-ref-name: JobAd
        '400':
          description: The request contains incorrect parameters or syntax errors. Please review the request body.
          content: {}
        '404':
          description: The requested entry was not found. Ensure the filter criteria in the request body are correct.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /hiring/job-ads/search:
    post:
      tags:
        - Hiring
      summary: Get all active job ads from your Career page
      description: >-
        Returns an array of active job ads as promoted on the Bob career page.  <br /><br /> To learn more about the
        Hiring API and how to integrate with your career page, see <a
        href="https://apidocs.hibob.com/docs/how-to-use-hiring-api-careers-page" target="\_blank">How to integrate with
        your careers page</a>
      parameters:
        - name: preferredLanguage
          in: query
          description: >-
            The job ads will be returned in the language you provide in the preferred language (if available).
            Otherwise, the language specified in the job ad will be used. 
             To obtain the available language codes, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `worldLanguages` in the listname path parameter.
          schema:
            type: string
      requestBody:
        description: >-
          **Use the 'fields' parameter** in the request body to specify which fields to fetch. For a detailed list of
          available fields, refer to the schema in the '200 response' section.<br /><br /> **Use the 'filters'
          parameter** to filter the results. To retrieve all active job ads send an empty array in the 'filters'
          parameter in the request body, or specify filters in the request body to narrow the results.
        content:
          application/json:
            schema:
              required:
                - fields
                - filters
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    Array with the ids of the fields you want to fetch for each job ad. You must specify at least one
                    field to fetch. You can find the complete list of available fields in the 200 response body
                    description. <p>Example of fetching only the Job ID:</p> <p> "fields": ["/jobAd/id"]</p> <p>Example
                    of fetching more fields:</p> <p> "fields": [<br>
                          "/jobAd/id",<br>
                          "/jobAd/title",<br> 
                          "/jobAd/applyUrl",<br>
                          "/jobAd/description", <br>
                          "/jobAd/languageCode"<br>
                          ]</p>
                  items:
                    type: string
                filters:
                  type: array
                  description: >-
                    Array of filters to narrow down the search results. To fetch all active job ads, use an empty array
                    (use Postman to try this as this platform does not support and empty array).<br> Example of fetching
                    all Job ads (empty array): <p>  "filters": []</p> Example of filtering by department: <p> 
                    "filters": [<br>
                        {<br>
                          "fieldId": "/jobAd/departmentId", <br>
                          "operator": "equals", <br>
                          "values": ["Accounting"] <br>
                        }
                      ]</p>
                      <br><br>Note: To filter results by department, employment type, or site, use the respective IDs, not descriptions. Retrieve these IDs from the Metadata endpoints, detailed under the '200 response' section.
                  items:
                    required:
                      - fieldId
                      - operator
                      - values
                    properties:
                      fieldId:
                        type: string
                        description: >-
                          The field id to filter by.<br> Supported
                          fields:<br>“/jobAd/id”,<br>"/jobAd/title",<br>"/jobAd/departmentId",<br>"/jobAd/employmentTypeId",<br>"/jobAd/siteId",<br>"/jobAd/languageCode".<br>an
                          invalid id will return 400 HTTP error.
                      operator:
                        type: string
                        description: >-
                          Supported operators:<br />“equals”,<br />"notEqual".<br />Any other operator will get a
                          response of 400 HTTP error.
                      values:
                        type: array
                        description: List of values to compare.<br />An empty list willreturn 400 HTTP error.
                        items:
                          type: string
                    x-readme-ref-name: JobAdFilterInstruction
                  nullable: true
                  example: []
                  default: []
              example:
                fields:
                  - /jobAd/id
                filters:
                  - fieldId: /jobAd/departmentId
                    operator: equals
                    values:
                      - Accounting
              default:
                fields:
                  - /jobAd/id
                filters:
                  - fieldId: /jobAd/departmentId
                    operator: equals
                    values:
                      - Accounting
              x-readme-ref-name: JobAdRequest
        required: true
      responses:
        '200':
          description: An array of job ads and their details.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    /jobAd/id:
                      type: object
                      properties:
                        value:
                          type: string
                          format: uuid
                      description: >-
                        This is the backend-id of the job ad. <br><br> <b>Note</b>: Use this job ID slug within the URL
                        of the job ad page on your career page in this format "https://yourdomain.com/{job-ad-id}".<br>
                        This will ensure the 'Job Detail Link' from Bob directs users to the correct job ad page on your
                        website.
                    /jobAd/applyUrl:
                      type: object
                      properties:
                        value:
                          type: string
                      description: >-
                        This URL links to the application form that allows new candidates to apply for the job. It is
                        essential to use this link as your application form, to ensure that candidate details are
                        automatically submitted to Bob.
                    /jobAd/title:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The title of the job ad as defined on the job description used to promote the job opening.
                    /jobAd/departmentId:
                      type: object
                      properties:
                        value:
                          type: string
                      description: |-
                        The ID of the department defined on the job opening that the job ad was created from. <br>
                         To obtain the available departments, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `department` in the listname path parameter.
                    /jobAd/department:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The name of the department defined on the job opening that the job ad was created from.
                    /jobAd/employmentTypeId:
                      type: object
                      properties:
                        value:
                          type: string
                      description: |-
                        The ID of the employment type defined on the job opening that the job ad was created from.
                         To obtain the available employment types, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `payrollEmploymentType` in the listname path parameter.
                      format: string
                    /jobAd/employmentType:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The name of the employment type defined on the job opening that the job ad was created from.
                    /jobAd/siteId:
                      type: object
                      properties:
                        value:
                          type: integer
                          format: long
                      description: |-
                        The ID of the site defined on the job opening that the job ad was created from.
                         To obtain the available sites, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `site` in the listname path parameter.
                    /jobAd/site:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The name of the site defined on the job opening that the job ad was created from.
                    /jobAd/country:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The county name of the site defined on the job opening that the job ad was created from.
                    /jobAd/languageCode:
                      type: object
                      properties:
                        value:
                          type: string
                      description: |-
                        The language code of the selected language on job description used to promote the job opening.
                         To obtain the available languages, call the <a href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists Metadata API</a> with `languages` in the listname path parameter.
                    /jobAd/description:
                      type: object
                      properties:
                        value:
                          type: string
                      description: >-
                        The job description that was used to promote the job opening to the careers page. Note that the
                        description may include HTML code to support text formatting. Ensure it is parsed accordingly.
                    /jobAd/requirements:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The requirements as defined on the job description used to promote the job opening.
                    /jobAd/responsibilities:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The responsibilities as defined on the job description used to promote the job opening.
                    /jobAd/benefits:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The benefits as defined on the job description used to promote the job opening.
                  x-readme-ref-name: JobAd
                x-readme-ref-name: JobAds
        '400':
          description: The request contains incorrect parameters or syntax errors. Please review the request body.
          content: {}
        '404':
          description: The requested entry was not found. Ensure the filter criteria in the request body are correct.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/confidential/{docId}:
    delete:
      tags:
        - Documents
      summary: Delete a Document from a Confidential Folder
      description: >-
        Use this endpoint to delete a specific document from a confidential folder of a specific employee in Bob.
        <br><br>Make sure you set the right permissions to the Service User in order to remove the file. See more
        details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
        - name: docId
          in: path
          description: >-
            The ID of the document you want to delete. You can obtain the employee's documents using the <a
            href="https://apidocs.hibob.com/reference/get_docs-people-id">Download list of documents of an employee</a>
            endpoint.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete success.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/folders/{folderId}/{docId}:
    delete:
      tags:
        - Documents
      summary: Delete a Document from a Custom Folder
      description: >-
        Use this endpoint to delete a specific document from a custom folder of a specific employee in Bob. <br><br>Make
        sure you set the right permissions to the Service User in order to remove the file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
        - name: docId
          in: path
          description: >-
            The ID of the document you want to delete. You can obtain the employee's documents using the <a
            href="https://apidocs.hibob.com/reference/get_docs-people-id">Download list of documents of an employee</a>
            endpoint.
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          description: >-
            The ID of the custom folder the document is stored in. You can obtain the custom folder ID using the <a
            href="https://apidocs.hibob.com/reference/get_docs-people-id">Download list of documents of an employee</a>
            endpoint.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete success.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/shared/{docId}:
    delete:
      tags:
        - Documents
      summary: Delete a Document from a Shared Folder
      description: >-
        Use this endpoint to delete a specific document from a shared folder of a specific employee in Bob. <br><br>Make
        sure you set the right permissions to the Service User in order to remove the file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
        - name: docId
          in: path
          description: >-
            The ID of the document you want to delete. You can obtain the employee's documents using the <a
            href="https://apidocs.hibob.com/reference/get_docs-people-id">Download list of documents of an employee</a>
            endpoint.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete success.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/folders/metadata:
    get:
      tags:
        - Documents
      summary: Get list of folders with metadata
      description: >-
        Use this endpoint to get the a list of available folders and their metadata, including the folder ID. Use the ID
        when uploading a file to a specific folder.
      responses:
        '200':
          description: List of folders was returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: object
                      properties:
                        value:
                          type: string
                          format: uuid
                      description: This is the ID of the folder. Use this ID when loading a file to the folder.
                    name:
                      type: object
                      properties:
                        value:
                          type: string
                      description: The name of the folder as appears in Bob.
                    folderType:
                      type: object
                      properties:
                        value:
                          type: string
                      description: >-
                        The type of the folder. Predefined folder types can be either 'confidential' or 'shared' and if
                        it's a folder defined by the user the type is 'custom'.
                  x-readme-ref-name: FolderMetadata
                x-readme-ref-name: FoldersMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: document
  /docs/people/{id}:
    get:
      tags:
        - Documents
      summary: Download list of documents of an employee
      description: Returns a list of documents and download links.<br />
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of the documents' names and download links.
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        documentName:
                          type: string
                          description: The name of the document.
                        downloadLink:
                          type: string
                          description: The name of the document.
                      x-readme-ref-name: EmployeeDocumentWithDownloadLink
                x-readme-ref-name: EmployeeDocumentResponse
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/confidential/upload:
    post:
      tags:
        - Documents
      summary: Upload File to a Confidential Folder
      description: >-
        Use this endpoint to upload a file directly into a confidential folder of a specific employee in Bob.
        <br><br>Make sure you set the right permissions to the Service User in order to upload the file. See more
        details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: string
                  description: The content of the file to upload.
                  format: binary
        required: true
      responses:
        '200':
          description: Uploaded document ID.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/confidential:
    post:
      tags:
        - Documents
      summary: Upload file from a URL to a Confidential Folder
      description: >-
        Use this endpoint to upload a file from a specified URL directly into a confidential folder of a specific
        employee in Bob. <br><br>Make sure you set the right permissions to the Service User in order to upload the
        file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the document to upload.
        content:
          application/json:
            schema:
              type: object
              properties:
                documentName:
                  type: string
                  description: The name of the Document.
                documentUrl:
                  type: string
                  description: The URL pointing to the document to upload.
                tags:
                  type: array
                  description: A array of tags that you want to attach to the document in Bob.
                  items:
                    type: string
              x-readme-ref-name: AddDocument
        required: true
      responses:
        '200':
          description: Uploaded document details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: >-
                      The ID (docId) of the document that was created. Use this when you need to pass the docID to other
                      endpoints.
                  employeeId:
                    type: string
                    description: The employee ID that the document was uploaded for.
                  uploadedById:
                    type: string
                    description: The ID of the service user that performed the upload
                  name:
                    type: string
                    description: The name of the document.
                  creationDate:
                    type: string
                    description: The timestamp for the upload.
                  status:
                    type: string
                    description: The status of the document.
                  tags:
                    type: array
                    description: >-
                      Document tags in Bob are custom labels that you can assign to your documents to organize and
                      filter them according to your own criteria.
                    items:
                      type: string
                  folderId:
                    type: number
                    description: The backend-id of the folder the document was uploaded to.
                  mimeType:
                    type: string
                    description: The file type
                  fileId:
                    type: number
                    description: The backend-id of the updloaded file.
                  documentName:
                    type: string
                    description: The name of the document.
                  owner:
                    type: object
                    description: The employee who is the owner of the document.
                    properties:
                      id:
                        type: string
                  actionRequestDate:
                    type: string
                  actionCompleteDate:
                    type: string
                x-readme-ref-name: docUploadResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: document
  /docs/people/{id}/custom/{folderId}:
    post:
      tags:
        - Documents
      summary: Upload File from a URL to a Custom Folder
      description: >-
        Use this endpoint to upload a file from a specified URL directly into a specific custom folder of a specific
        employee in Bob. <br><br>Make sure you set the right permissions to the Service User in order to upload the
        file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          description: >-
            The ID of the custom folder. You can obtain the custom folder ID using the <a
            href="https://apidocs.hibob.com/reference/get_docs-folders-metadata">get folders metadata</a> endpoint.
          required: true
          schema:
            type: string
      requestBody:
        description: Document to upload.
        content:
          application/json:
            schema:
              type: object
              properties:
                documentName:
                  type: string
                  description: The name of the Document.
                documentUrl:
                  type: string
                  description: The URL pointing to the document to upload.
                tags:
                  type: array
                  description: A array of tags that you want to attach to the document in Bob.
                  items:
                    type: string
              x-readme-ref-name: AddDocument
        required: true
      responses:
        '200':
          description: Uploaded document details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: >-
                      The ID (docId) of the document that was created. Use this when you need to pass the docID to other
                      endpoints.
                  employeeId:
                    type: string
                    description: The employee ID that the document was uploaded for.
                  uploadedById:
                    type: string
                    description: The ID of the service user that performed the upload
                  name:
                    type: string
                    description: The name of the document.
                  creationDate:
                    type: string
                    description: The timestamp for the upload.
                  status:
                    type: string
                    description: The status of the document.
                  tags:
                    type: array
                    description: >-
                      Document tags in Bob are custom labels that you can assign to your documents to organize and
                      filter them according to your own criteria.
                    items:
                      type: string
                  folderId:
                    type: number
                    description: The backend-id of the folder the document was uploaded to.
                  mimeType:
                    type: string
                    description: The file type
                  fileId:
                    type: number
                    description: The backend-id of the updloaded file.
                  documentName:
                    type: string
                    description: The name of the document.
                  owner:
                    type: object
                    description: The employee who is the owner of the document.
                    properties:
                      id:
                        type: string
                  actionRequestDate:
                    type: string
                  actionCompleteDate:
                    type: string
                x-readme-ref-name: docUploadResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: document
  /docs/people/{id}/folders/{folderId}/upload:
    post:
      tags:
        - Documents
      summary: Upload File to a Custom Folder
      description: >-
        Use this endpoint to upload a file directly into a custom folder of a specific employee in Bob. <br><br>Make
        sure you set the right permissions to the Service User in order to upload the file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          description: >-
            The ID of the custom folder. You can obtain the custom folder ID using the  <a
            href="https://apidocs.hibob.com/reference/get_docs-folders-metadata">get folders metadata</a> endpoint.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: string
                  description: The content of the file to upload.
                  format: binary
        required: true
      responses:
        '200':
          description: Uploaded document ID.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/shared/upload:
    post:
      tags:
        - Documents
      summary: Upload file to a Shared Folder
      description: >-
        Use this endpoint to upload a file directly into a shared folder of a specific employee in Bob. <br><br>Make
        sure you set the right permissions to the Service User in order to upload the file. See more details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  type: string
                  description: The content of the file to upload.
                  format: binary
        required: true
      responses:
        '200':
          description: Uploaded document ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: >-
                      The ID (docId) of the document that was created. Use this when you need to pass the docID to other
                      endpoints.
                x-readme-ref-name: docID
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /docs/people/{id}/shared:
    post:
      tags:
        - Documents
      summary: Upload file from a URL to a Shared Folder
      description: >-
        Use this endpoint to upload a file from a specified URL directly into a shared folder of a specific employee in
        Bob. <br><br>Make sure you set the right permissions to the Service User in order to upload the file. See more
        details in <a
        href="https://help.hibob.com/hc/en-us/articles/4409792096273-Create-a-document-folder#h_01HDNE82T44QA6632JB9ZGPZ6G">How
        to set up permissions for People's Docs </a>.
      parameters:
        - name: id
          in: path
          description: The ID of the Employee. You can obtain the employee ID from the employee data.
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the document to upload.
        content:
          application/json:
            schema:
              type: object
              properties:
                documentName:
                  type: string
                  description: The name of the Document.
                documentUrl:
                  type: string
                  description: The URL pointing to the document to upload.
                tags:
                  type: array
                  description: A array of tags that you want to attach to the document in Bob.
                  items:
                    type: string
              x-readme-ref-name: AddDocument
        required: true
      responses:
        '200':
          description: Uploaded document details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: >-
                      The ID (docId) of the document that was created. Use this when you need to pass the docID to other
                      endpoints.
                  employeeId:
                    type: string
                    description: The employee ID that the document was uploaded for.
                  uploadedById:
                    type: string
                    description: The ID of the service user that performed the upload
                  name:
                    type: string
                    description: The name of the document.
                  creationDate:
                    type: string
                    description: The timestamp for the upload.
                  status:
                    type: string
                    description: The status of the document.
                  tags:
                    type: array
                    description: >-
                      Document tags in Bob are custom labels that you can assign to your documents to organize and
                      filter them according to your own criteria.
                    items:
                      type: string
                  folderId:
                    type: number
                    description: The backend-id of the folder the document was uploaded to.
                  mimeType:
                    type: string
                    description: The file type
                  fileId:
                    type: number
                    description: The backend-id of the updloaded file.
                  documentName:
                    type: string
                    description: The name of the document.
                  owner:
                    type: object
                    description: The employee who is the owner of the document.
                    properties:
                      id:
                        type: string
                  actionRequestDate:
                    type: string
                  actionCompleteDate:
                    type: string
                x-readme-ref-name: docUploadResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: document
  /people/custom-tables/{employee_id}/{custom_table_id}/{entry_id}:
    delete:
      tags:
        - Custom Tables
      summary: Delete custom table entry
      parameters:
        - name: employee_id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: custom_table_id
          in: path
          description: The ID of custom table.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The ID of custom table entry.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entry deleted successfully
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Custom Tables
      summary: Update custom table entry
      parameters:
        - name: employee_id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: custom_table_id
          in: path
          description: The ID of custom table.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The ID of custom table entry.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RAW_BODY:
                  type: string
              example:
                column_1663598152485: 5185395
                column_1663598024920: '2022-09-30'
                column_1663598120787: '2871255975417872769'
                column_1663598145154: 371223
                column_1663597977169: text text
                column_1663597992534: text area text area text area
                column_1663598108167:
                  value: 240
                  currency: USD
                column_1663598062584: '252614471'
                column_1663598090762:
                  - '252614475'
                  - '252614476'
        required: false
      responses:
        '200':
          description: Entry updated successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/custom-tables/{employee_id}/{custom_table_id}:
    get:
      tags:
        - Custom Tables
      summary: Read all entries of the given custom table
      parameters:
        - name: employee_id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: custom_table_id
          in: path
          description: The ID of custom table.
          required: true
          schema:
            type: string
        - name: includeHumanReadable
          in: query
          description: Whether to include the additional "humanReadable" JSON node in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: The ID of the row
                      description: >-
                        The row data depends on what is defined in the table's schema, use HiBob Custom Table Metadata
                        API to get list of defined columns. The only property that's always present is ID.
                      example:
                        values:
                          - column_1663598152485: 5185395
                            column_1663598024920: '2022-09-30'
                            column_1663598120787: '2871255975417872769'
                            column_1663598037763: 123456
                            column_1663598145154: 371223
                            column_1663597977169: text text
                            column_1663597992534: text area text area text area
                            column_1663598108167:
                              value: 240
                              currency: USD
                            id: 1021262
                            column_1663598062584: '252614471'
                            column_1663598090762:
                              - '252614475'
                              - '252614476'
                            humanReadable:
                              column_1663597992534: text area text area text area
                              column_1663598090762: B,A
                              column_1663598108167: $240.00
                              column_1663598145154: B \ 3
                              column_1663598062584: C
                              column_1663598152485: '5185395'
                              column_1663597977169: text text
                              column_1663598037763: '123456'
                              column_1663598024920: 30/09/2022
                              column_1663598120787: Austin Legge
                      x-readme-ref-name: CustomTableEntry
                x-readme-ref-name: CustomTableEntriesList
      security:
        - Basic: []
    post:
      tags:
        - Custom Tables
      summary: Create new custom table entry
      description: >-
        Provide an array of columns and their values. <br> Values can be any of the <a
        href="https://apidocs.hibob.com/docs/fields-metadata#field-types">supported field types</a>. <br><br> **Note**:
        You can use **Examples > Request Example** option for a basic example, however, we recommend that you copy the
        endpoint to Postman and test more complicated structures using the JSON editor.
      parameters:
        - name: employee_id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: custom_table_id
          in: path
          description: The ID of custom table.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Array of column IDs and their values
              properties:
                values:
                  type: array
                  items:
                    type: object
                    additionalProperties:
                      anyOf:
                        - type: number
                        - type: string
            example:
              values:
                - column_1663598152485: 5185395
                  column_1663598024920: '2022-09-30'
                  column_1663597992534: text area text area text area
                  column_1663598062584: '252614471'
        required: true
      responses:
        '200':
          description: Entry created successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: values
  /people/custom-tables/metadata/{custom_table_id}:
    get:
      tags:
        - Custom Tables
      summary: Read metadata for specific custom table
      parameters:
        - name: custom_table_id
          in: path
          description: The ID of custom table.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of custom table
                  category:
                    type: string
                    description: The ID of the category to which the custom table belongs
                  name:
                    type: string
                    description: The name of custom table
                  description:
                    type: string
                    description: The description of custom table
                  columns:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the column
                        name:
                          type: string
                          description: The name of the column
                        description:
                          type: string
                          description: The description of the column
                        mandatory:
                          type: boolean
                          description: >-
                            Flag which means that column must be present during creation and its value can't be null
                            during update
                        type:
                          type: string
                          description: >-
                            The type of the column. Supported column types: text, text-area, number, date, list,
                            multi-list, hierarchy-list, currency, employee-reference, document.
                        typeData:
                          type: object
                          properties:
                            listId:
                              type: string
                              description: The ID of the list in the /v1/company/named-lists endpoint.
                      x-readme-ref-name: CustomTableColumn
                x-readme-ref-name: CustomTableMetadata
      security:
        - Basic: []
  /people/custom-tables/metadata:
    get:
      tags:
        - Custom Tables
      summary: Read metadata of custom tables defined
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  tables:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The identifier of custom table
                        category:
                          type: string
                          description: The ID of the category to which the custom table belongs
                        name:
                          type: string
                          description: The name of custom table
                        description:
                          type: string
                          description: The description of custom table
                        columns:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: The ID of the column
                              name:
                                type: string
                                description: The name of the column
                              description:
                                type: string
                                description: The description of the column
                              mandatory:
                                type: boolean
                                description: >-
                                  Flag which means that column must be present during creation and its value can't be
                                  null during update
                              type:
                                type: string
                                description: >-
                                  The type of the column. Supported column types: text, text-area, number, date, list,
                                  multi-list, hierarchy-list, currency, employee-reference, document.
                              typeData:
                                type: object
                                properties:
                                  listId:
                                    type: string
                                    description: The ID of the list in the /v1/company/named-lists endpoint.
                            x-readme-ref-name: CustomTableColumn
                      x-readme-ref-name: CustomTableMetadata
                x-readme-ref-name: CustomTableMetadataList
      security:
        - Basic: []
  /people/{id}/bank-accounts/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes a bank account entry from a given employee's bank accounts table.
      parameters:
        - name: id
          in: path
          description: >-
            The ID of the employee for whom you want to delete the bank account entry. The employee ID is returned in
            the 'id' field when retrieving an employee's data. <br /> For **testing purposes** you can obtain the
            Employee ID from the URL in the user interface.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: >-
            The ID of the entry in the bank accounts table which you want to delete. To obtain the bank account entry
            use the GET /people/{id}/bank-accounts endpoint.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully
          content: {}
        '404':
          description: Requested entry not found. Nothing was changed
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Employee Tables
      summary: Update a bank account entry in the employee's bank accounts table.
      description: >-
        This endpoint updates an entry in the employee’s Bank accounts table.<br> The unique identifier for the bank
        account entry is the entry id. To obtain the employee's bank account entries use the GET
        /people/{employee-id}/bank-accounts endpoint.<br> <p>**Notes**: <br /> 1. **Out-of-the-box columns**: These
        columns will be completely overwritten with the data provided in your payload. Any columns not included in the
        payload will be cleared (set to empty values). 2. **Custom columns**: These columns will remain unchanged unless
        explicitly included in the payload. </p>
      parameters:
        - name: id
          in: path
          description: >-
            The ID of the employee for whom you want to update the bank account entry. The employee ID is returned in
            the 'id' field when retrieving an employee's data. <br /> For **testing purposes** you can obtain the
            Employee ID from the URL in the user interface.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: >-
            The ID of the entry in the bank accounts table which you are updating. To obtain the bank account entry use
            the GET /people/{id}/bank-accounts endpoint.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bankAccountType:
                  type: string
                  enum:
                    - Checking
                    - Savings
                  description: >-
                    The list of bank accounts type comes with the above out-of-the-box values. To obtain additional
                    user-defined values, you should fetch the list values call the <a
                    href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists
                    Metadata API</a> with `bankaccounttype` in the listname path parameter.
                routingNumber:
                  type: string
                  description: The routing number indicates what bank this account is held in. Relevant for US and Canada.
                accountNickname:
                  type: string
                  description: The nickname in Bob to easily identify and personalize this account in Online Banking.
                accountNumber:
                  type: string
                  description: The account number is the unique identifier at this bank.
                bankName:
                  type: string
                  description: The name of the specific financial institution.
                branchAddress:
                  type: string
                  description: The bank's address.
                bicOrSwift:
                  type: string
                  description: The SWIFT Address assigned to the bank in order to send automated international transfers.
                iban:
                  type: string
                  description: The international bank account number (IBAN) for international transfers.
                allocation:
                  type: string
                  enum:
                    - percent
                    - amount
                    - remaining
                  description: >-
                    The salary portion allocated for this account. It can be defined as a percentage of the salary,  as
                    a fixed amount, or to allocate all of the remaining funds. The list of possible values cannot be
                    modified.  The values that correspond to this field should be provided in the 'amount' field.
                amount:
                  type: number
                  description: >-
                    Use this field to provide the values that correspond to the ‘allocation’ field. If allocation is
                    'percent' this value represents the percentage of the salary portion to allocate. If allocation is
                    'amount' this value represents the fixed amount of the salary portion to allocate. If allocation is
                    'remaining' then the amount field should remain empty. This indicates that all of the remaining
                    funds will be allocated to this account.
                useForBonus:
                  type: boolean
                  description: An indication whether this bank account is used for bonuses.
              x-readme-ref-name: BankAccountsEntry
        required: true
      responses:
        '200':
          description: Entry updated successfully.
          content: {}
        '404':
          description: Requested entry not found. Nothing was changed
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /people/{id}/employment/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes an employment entry from a given employee's employment history.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The entry ID to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully.
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Employee Tables
      summary: Update an employment entry from a given employee's employment history.
      description: >-
        This endpoint updates an entry in the employee’s employment history table.<br> <p>Note that the entire
        employnebt entry will be overwritten with the data provided in your payload. Any columns not included in the
        payload will be cleared (set to empty values).</p>
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The entry ID to update.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: TableEntry
                - type: object
                  properties:
                    personalWorkingPatternType:
                      type: string
                      description: >-
                        indicates whether the working pattern personal (adjusted). Can be null (no personal defined),
                        "custom", "library" or "flexible".
                    actualWorkingPattern:
                      description: >-
                        The active working pattern for this entry. It will hold the pattern that is selected, no matter
                        which type it is.
                      allOf:
                        - oneOf:
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: hourly
                                days:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                hoursPerDay:
                                  type: number
                                  example: 9
                                workingPatternId:
                                  type: number
                                  example: 0
                              x-readme-ref-name: WorkingPatternHourly
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: fortnightly
                                firstWeek:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                secondWeek:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                hoursPerDay:
                                  type: number
                                  example: 9
                                workingPatternId:
                                  type: number
                                  example: 0
                              x-readme-ref-name: WorkingPatternBiWeekly
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: flexible
                                weeklyWorkPercentage:
                                  type: number
                                  example: 80
                              x-readme-ref-name: WorkingPatternFlexible
                          x-readme-ref-name: WorkingPatternEntry
                    standardWorkingPattern:
                      description: >-
                        The working pattern that was selected from the library as standard. If null this means the
                        standard is using the site default.
                      type: object
                      example: null
                    standardWorkingPatternId:
                      description: The working pattern ID that was selected from the library as standard.
                      type: number
                      example: null
                    workingPattern:
                      description: The personalized (adjusted) working pattern.
                      type: object
                      example: null
                    siteWorkingPattern:
                      description: The site's default working pattern (always a weekly pattern).
                      allOf:
                        - type: object
                          properties:
                            workingPatternType:
                              type: string
                              example: hourly
                            days:
                              type: object
                              properties:
                                sunday:
                                  type: number
                                  example: 0
                                monday:
                                  type: number
                                  example: 9
                                tuesday:
                                  type: number
                                  example: 9
                                wednesday:
                                  type: number
                                  example: 9
                                thursday:
                                  type: number
                                  example: 9
                                friday:
                                  type: number
                                  example: 9
                                saturday:
                                  type: number
                                  example: 0
                            hoursPerDay:
                              type: number
                              example: 9
                            workingPatternId:
                              type: number
                              example: 0
                          x-readme-ref-name: WorkingPatternHourly
                    hoursInDayNotWorked:
                      type: number
                      description: Based on the actual working pattern
                    weeklyHours:
                      type: number
                      description: Based on the actual working pattern
                    fte:
                      description: the FTE percentage for this entry as calculated based on the working pattern
                      type: number
                    calendarName:
                      type: string
                      description: The selected Holiday calendar
                    calendarId:
                      type: integer
                      description: The selected Holiday calendar
                    contract:
                      type: string
                      description: Contract, can be Full-Time, Part-Time, Shifts
                    type:
                      type: string
                      description: >-
                        Type as appears in the Employment Type list. Can be Permanent, Temporary, Apprentice, Contractor
                        or any custom value.
                    salaryPayType:
                      type: string
                      description: Salary pay type, can be Salaries or Hourly.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                    endEffectiveDate:
                      type: string
                      description: For entries that are not active - this it the date this entry became not effective.
                      format: date
                    activeEffectiveDate:
                      type: string
                      description: The effective date of the active working pattern.
                      format: date
                    isCurrent:
                      type: boolean
                      description: Is 'true' when this is the effective entry which is currently active.
                      format: boolean
                    canBeDeleted:
                      type: boolean
                    modificationDate:
                      type: string
                      description: The date this entry was modified.
                      format: date
                    CreationDate:
                      type: string
                      description: The date this entry was created.
                      format: date
                    flsaCode:
                      type: string
                      description: FLSA code, can be Exempt or Non-Exempt.
                    change:
                      type: object
                      description: Details of the last change and the ID of the user who updated this entry
                      properties:
                        reason:
                          type: string
                        changedBy:
                          type: string
                        changedById:
                          type: string
              required:
                - effectiveDate
              x-readme-ref-name: EmploymentEntry
        required: true
      responses:
        '200':
          description: Entry updated successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /people/{id}/equities/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes an equity grant for an employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The Entry ID to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully.
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Employee Tables
      summary: Updates an equity grant for an employee
      description: >-
        This endpoint updates an entry in the employee’s equity table.<br> <p>Note that the entire equities entry will
        be overwritten with the data provided in your payload. Any columns not included in the payload will be cleared
        (set to empty values).</p>
      parameters:
        - name: id
          in: path
          description: Employee ID
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The entry ID to update.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: TableEntry
                - type: object
                  properties:
                    quantity:
                      type: number
                      description: The number of equities granted.
                      format: double
                    equityType:
                      type: string
                      description: The type of the grant.
                    vestingCommencementDate:
                      type: string
                      description: Vesting commencement date.
                      format: date
                    consentNumber:
                      type: string
                      description: Consent number.
                    grantDate:
                      type: string
                      description: Date the equity was granted.
                      format: date
                    optionExpiration:
                      type: string
                      description: Date the options expire.
                      format: date
                    exercisePrice:
                      required:
                        - currency
                        - value
                      type: object
                      properties:
                        value:
                          type: number
                          format: double
                        currency:
                          type: string
                          description: Three-letter currency code.
                      x-readme-ref-name: CurrencyValue
                    vestingTerm:
                      type: string
                      description: Terms for exercising this grant.
                    grantType:
                      type: string
                      description: 'Grant type. One of: Initial Grant, Merit Grant'
                    vestingSchedule:
                      type: number
                      description: The vesting schedule ID assigned to this grant.
                      format: long
                    grantNumber:
                      type: number
                      description: The Grant number for employee.
                      format: double
                    grantStatus:
                      type: string
                      description: 'Grant status. one of: Granted, Pending Approval'
              required:
                - quantity
                - equityType
              x-readme-ref-name: EquityEntry
        required: true
      responses:
        '200':
          description: Entry updated successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /people/{id}/salaries/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes a salary entry from the employee's list.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The entry ID to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully.
          content: {}
      security:
        - Basic: []
  /people/{id}/training/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes any training records for an employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The Entry ID to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully.
          content: {}
      security:
        - Basic: []
  /people/{id}/variable/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes a variable payment record for an employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The Entry ID to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully.
          content: {}
      security:
        - Basic: []
  /people/{id}/work/{entry_id}:
    delete:
      tags:
        - Employee Tables
      summary: Deletes a work entry from a given employee's work history.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The entry ID to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Entry deleted successfully
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Employee Tables
      summary: Update a work entry in the employee's work history table.
      description: >-
        This endpoint updates an entry in the employee’s work history table.<br> The unique identifier for the work
        entry is the site and effective date.<br> <p>Note that the entire work entry will be overwritten with the data
        provided in your payload. Any columns not included in the payload will be cleared (set to empty values).</p>
        <b>Patch Update Flag</b>:<br> As a best practice, we recommend reading the entire work entry data, updating the
        necessary fields, and then writing back the entire entry.  However, for legacy purposes, we provide the flag:
        patchUpdate=true, which functions similarly to a PATCH request. <br> When using this flag, please note:<br> 1.
        Only the fields included in the payload will be updated; all others will remain unchanged.<br> 2. The identifier
        for the work entry should be entry_id, not the site/effective date.<br> 3. Note that using the patchUpdate
        approach is not recommended and should be reserved for legacy implementations only.
      parameters:
        - name: id
          in: path
          description: >-
            The ID of the employee you are updating. This can be the Employee ID from the URL in the user interface or
            the id field returned when retrieving an employee's data.
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: >-
            The ID of the entry in the work table which you are updating. To obtain the work entry use the GET
            /people/{id}/work endpoint.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the work entry.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: WorkTableEntry
                - type: object
                  properties:
                    title:
                      type: string
                      description: >-
                        The job title of the employee for this work entry. This field should contain the ID of the job
                        title entry from the job title list.
                    department:
                      type: string
                      description: >-
                        The department the employee belonged to for this work entry. This field should contain the ID of
                        the department entry in department list.
                    site:
                      type: string
                      description: >-
                        The site of the employee. This is a mandatory field for a work entry (you must pass either the
                        site or the siteId).
                    siteId:
                      type: integer
                      description: >-
                        The id of the site of the employee. This is a mandatory field for a work entry (you must pass
                        either the site or the siteId).
                    reportsTo:
                      required:
                        - id
                      type: object
                      properties:
                        id:
                          type: string
                          description: The manager's employee ID (the email of the manager or a custom field containing the ID).
                        firstName:
                          type: string
                          description: The manager's first name.
                        surname:
                          type: string
                          description: The manager's surname.
                        email:
                          type: string
                          description: The manager's email address.
                        displayName:
                          type: string
                          description: The manager's display name.
                      description: The manager's details.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective. This is a mandatory field for a work entry.
                      format: date
                    customColumns:
                      type: object
                      properties: {}
                - type: object
              x-readme-ref-name: WorkEntry
        required: true
      responses:
        '200':
          description: Entry updated successfully.
          content: {}
        '404':
          description: Requested entry not found. Nothing was changed
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /bulk/people/employment:
    get:
      tags:
        - Employee Tables
      summary: List employment history for a list of employees.
      description: >-
        <p>Returns a list of historical employment entries from the employment table for all employees or a specific
        list of employees.</p> <p>Each employment entry includes the working pattern assigned to this employee. To learn
        more about working patterns, see <a href="https://apidocs.hibob.com/docs/how-to-work-with-working-patterns"
        target="_blank">How to work with Working patterns</a>.</p> <p><b>Required permissions</b></p> <p>In order to
        access the employment history of each requested employee, the service user making the call must have the
        following permissions: </p> <p><li>For the employment table: <b>People's Data > Employment > View all other
        employees' Employment section histories</b>.</li> <li>For the employees: <b>People's Data > Access data for</b>:
        Make sure the employees are in the list. Employees that are not listed and were specifically requested will be
        listed under `errors` in the response. </li></p> <p><b>Pagination</b> </p> <p>This endpoint uses cursor-based
        pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a>.</p>
      parameters:
        - name: limit
          in: query
          description: Specifies the number of table entries to include on each page of the results.
          required: false
          schema:
            type: number
            default: 50
            minimum: 1
            maximum: 200
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Make sure to URL encode this value before you
            send it as a query parameter. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
            target=”_blank”>Pagination in Bob's API</a>.
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          description: >-
            Comma separated list of employee ids. Maximum employees per request: 200. If this parameter is not passed,
            the API will return history records for all the employees for which the service user has the permission for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Employment table entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                        values:
                          type: array
                          items:
                            anyOf:
                              - type: object
                                properties:
                                  values:
                                    type: array
                                    items:
                                      allOf:
                                        - required:
                                            - effectiveDate
                                          type: object
                                          properties:
                                            id:
                                              type: integer
                                              description: ID.
                                            reason:
                                              type: string
                                              description: The reason for this change.
                                            effectiveDate:
                                              type: string
                                              description: The date this entry becomes effective.
                                              format: date
                                          x-readme-ref-name: TableEntry
                                        - type: object
                                          properties:
                                            personalWorkingPatternType:
                                              type: string
                                              description: >-
                                                indicates whether the working pattern personal (adjusted). Can be null
                                                (no personal defined), "custom", "library" or "flexible".
                                            actualWorkingPattern:
                                              description: >-
                                                The active working pattern for this entry. It will hold the pattern that
                                                is selected, no matter which type it is.
                                              allOf:
                                                - oneOf:
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: hourly
                                                        days:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        hoursPerDay:
                                                          type: number
                                                          example: 9
                                                        workingPatternId:
                                                          type: number
                                                          example: 0
                                                      x-readme-ref-name: WorkingPatternHourly
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: fortnightly
                                                        firstWeek:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        secondWeek:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        hoursPerDay:
                                                          type: number
                                                          example: 9
                                                        workingPatternId:
                                                          type: number
                                                          example: 0
                                                      x-readme-ref-name: WorkingPatternBiWeekly
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: flexible
                                                        weeklyWorkPercentage:
                                                          type: number
                                                          example: 80
                                                      x-readme-ref-name: WorkingPatternFlexible
                                                  x-readme-ref-name: WorkingPatternEntry
                                            standardWorkingPattern:
                                              description: >-
                                                The working pattern that was selected from the library as standard. If
                                                null this means the standard is using the site default.
                                              type: object
                                              example: null
                                            standardWorkingPatternId:
                                              description: The working pattern ID that was selected from the library as standard.
                                              type: number
                                              example: null
                                            workingPattern:
                                              description: The personalized (adjusted) working pattern.
                                              type: object
                                              example: null
                                            siteWorkingPattern:
                                              description: The site's default working pattern (always a weekly pattern).
                                              allOf:
                                                - type: object
                                                  properties:
                                                    workingPatternType:
                                                      type: string
                                                      example: hourly
                                                    days:
                                                      type: object
                                                      properties:
                                                        sunday:
                                                          type: number
                                                          example: 0
                                                        monday:
                                                          type: number
                                                          example: 9
                                                        tuesday:
                                                          type: number
                                                          example: 9
                                                        wednesday:
                                                          type: number
                                                          example: 9
                                                        thursday:
                                                          type: number
                                                          example: 9
                                                        friday:
                                                          type: number
                                                          example: 9
                                                        saturday:
                                                          type: number
                                                          example: 0
                                                    hoursPerDay:
                                                      type: number
                                                      example: 9
                                                    workingPatternId:
                                                      type: number
                                                      example: 0
                                                  x-readme-ref-name: WorkingPatternHourly
                                            hoursInDayNotWorked:
                                              type: number
                                              description: Based on the actual working pattern
                                            weeklyHours:
                                              type: number
                                              description: Based on the actual working pattern
                                            fte:
                                              description: >-
                                                the FTE percentage for this entry as calculated based on the working
                                                pattern
                                              type: number
                                            calendarName:
                                              type: string
                                              description: The selected Holiday calendar
                                            calendarId:
                                              type: integer
                                              description: The selected Holiday calendar
                                            contract:
                                              type: string
                                              description: Contract, can be Full-Time, Part-Time, Shifts
                                            type:
                                              type: string
                                              description: >-
                                                Type as appears in the Employment Type list. Can be Permanent,
                                                Temporary, Apprentice, Contractor or any custom value.
                                            salaryPayType:
                                              type: string
                                              description: Salary pay type, can be Salaries or Hourly.
                                            effectiveDate:
                                              type: string
                                              description: The date this entry becomes effective.
                                              format: date
                                            endEffectiveDate:
                                              type: string
                                              description: >-
                                                For entries that are not active - this it the date this entry became not
                                                effective.
                                              format: date
                                            activeEffectiveDate:
                                              type: string
                                              description: The effective date of the active working pattern.
                                              format: date
                                            isCurrent:
                                              type: boolean
                                              description: Is 'true' when this is the effective entry which is currently active.
                                              format: boolean
                                            canBeDeleted:
                                              type: boolean
                                            modificationDate:
                                              type: string
                                              description: The date this entry was modified.
                                              format: date
                                            CreationDate:
                                              type: string
                                              description: The date this entry was created.
                                              format: date
                                            flsaCode:
                                              type: string
                                              description: FLSA code, can be Exempt or Non-Exempt.
                                            change:
                                              type: object
                                              description: Details of the last change and the ID of the user who updated this entry
                                              properties:
                                                reason:
                                                  type: string
                                                changedBy:
                                                  type: string
                                                changedById:
                                                  type: string
                                      required:
                                        - effectiveDate
                                      x-readme-ref-name: EmploymentEntry
                                x-readme-ref-name: EmploymentEntries
                  response_metadata:
                    type: object
                    properties:
                      cursor:
                        type: string
                        description: Contains a string value if there is a 'next' page of data. `null` if there is no more data.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: object
                          properties:
                            error:
                              type: string
                              example: MISSING_PERMISSION
                            message:
                              type: string
                              example: 'You don''t have permission to access data for employees with ids: 2578509511618723822'
                x-readme-ref-name: BulkEmploymentTableResponse
        '400':
          description: Bad request.
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
      security:
        - Basic: []
  /bulk/people/lifecycle:
    get:
      tags:
        - Employee Tables
      summary: List the lifecycle history for a list of employees.
      description: >-
        Returns a list of historical lifecycle entries from the lifecycle table for all employees or a specific list of
        employees.<br /> <br /> **<b>Required permissions</b>** <br />    In order to access the lifecycle history of
        each requested employee, the service user making the call must have the following permissions: <br /> **For the
        work table**: People's Data > Lifecycle > View all other employees' Lifecycle section histories. <br /> **For
        the employees**: People's Data > Access data for > Make sure the employees are in the list. Employees that are
        not listed and were specifically requested will be listed under `errors` in the response. <br />


        **<b>Pagination</b>** <br /> This endpoint uses cursor-based pagination to handle large number of table entries.
        To learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
        API</a>
      parameters:
        - name: limit
          in: query
          description: Specifies the number of table entries to include on each page of the results.
          required: false
          schema:
            type: number
            default: 50
            minimum: 1
            maximum: 200
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Make sure to URL encode this value before you
            send it as a query parameter. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
            target=”_blank”>Pagination in Bob's API</a>.
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          description: >-
            Comma separated list of employee ids. Maximum employees per request: 200. If this parameter is not passed,
            the API will return history records for all the employees for which the service user has the permission for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lifecycle table entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                        values:
                          type: array
                          items:
                            type: string
                            anyOf:
                              - type: object
                                properties:
                                  values:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the lifecycle entry.
                                        effectiveDate:
                                          type: string
                                          description: The date this entry becomes effective.
                                          format: date
                                        status:
                                          type: string
                                          description: >-
                                            Can be any of the <a
                                            href="https://help.hibob.com/hc/en-us/articles/4409776355857#h_01H95TQ2DCZ25SPT6R7CYCC0ZW"
                                            trget="_blank">employee lifecycle status in Bob</a> (such as "Hired",
                                            "Employed", "Terminated", "Garden leave", "Leave","Parental leave").
                                        employeeStatus:
                                          type: string
                                          description: >-
                                            This is the employee's **access status**, which is automatically determined
                                            when updating the status. It can be "Active", or "Inactive"
                                        workChangeType:
                                          type: string
                                          description: >-
                                            The type of the change that was performed for this work entry. This will
                                            contain the ID of the value from the Change Type list.
                                        change:
                                          type: object
                                          description: Details of the last change and the ID of the user who updated this entry
                                          properties:
                                            reason:
                                              type: string
                                            changedBy:
                                              type: string
                                            changedById:
                                              type: string
                                        creationDate:
                                          type: string
                                          description: The date this entry was created.
                                          format: date
                                        reasonType:
                                          type: string
                                          description: The ID of the 'lifecycleReasonType' list entry
                                        isCurrent:
                                          type: boolean
                                          description: Is 'true' when this is the effective entry which is currently active.
                                          format: boolean
                                        modificationDate:
                                          type: string
                                          description: The date this entry was modified.
                                          format: date
                                        leaveReason:
                                          type: string
                                          description: Can be any of
                                        endEffectiveDate:
                                          type: string
                                          description: >-
                                            For entries that are not active - this it the date this entry became not
                                            effective.
                                        canBeDeleted:
                                          type: boolean
                                          description: internal flag
                                        customColumns:
                                          type: object
                                          properties: {}
                                          description: If the table has custom columns, they will appear here.
                                      x-readme-ref-name: LifeCycleEntry
                                x-readme-ref-name: LifeCycleEntries
                  response_metadata:
                    type: object
                    properties:
                      cursor:
                        type: string
                        description: Contains a string value if there is a 'next' page of data. `null` if there is no more data.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: object
                          properties:
                            error:
                              type: string
                              example: MISSING_PERMISSION
                            message:
                              type: string
                              example: 'You don''t have permission to access data for employees with ids: 2578509511618723822'
                x-readme-ref-name: BulkLifecycleTableResponse
        '400':
          description: Bad request.
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
      security:
        - Basic: []
  /bulk/people/salaries:
    get:
      tags:
        - Employee Tables
      summary: List payroll history (salaries) for a list of employees.
      description: >-
        Returns a list of historical salary entries from the payroll table for all employees or a specific list of
        employees.<br /> <br /> **<b>Required permissions</b>** <br />    In order to access the payroll history of each
        requested employee, the service user making the call must have the following permissions: <br /> **For the
        salary table**: People's Data > Payroll > View all other employees' Payroll section histories. <br /> **For the
        employees**: People's Data > Access data for > Make sure the employees are in the list. Employees that are not
        listed and were specifically requested will be listed under `errors` in the response. <br />


        **<b>Pagination</b>** <br /> This endpoint uses cursor-based pagination to handle large number of table entries.
        To learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
        API</a>
      parameters:
        - name: limit
          in: query
          description: Specifies the number of table entries to include on each page of the results.
          required: false
          schema:
            type: number
            default: 50
            minimum: 1
            maximum: 200
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Make sure to URL encode this value before you
            send it as a query parameter. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
            target=”_blank”>Pagination in Bob's API</a>.
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          description: >-
            Comma separated list of employee ids. Maximum employees per request: 200. If this parameter is not passed,
            the API will return history records for all the employees for which the service user has the permission for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Payroll (salaries) table entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                        values:
                          type: array
                          items:
                            anyOf:
                              - type: object
                                properties:
                                  values:
                                    type: array
                                    items:
                                      allOf:
                                        - type: object
                                          properties:
                                            canBeDeleted:
                                              type: boolean
                                              description: internal flag
                                            workChangeType:
                                              type: string
                                              description: >-
                                                The type of the change that was performed for this work entry. This will
                                                contain the ID of the value from the Change Type list.
                                            change:
                                              type: object
                                              description: Details of the last change and the ID of the user who updated this entry
                                              properties:
                                                reason:
                                                  type: string
                                                changedBy:
                                                  type: string
                                                changedById:
                                                  type: string
                                            payFrequency:
                                              type: string
                                              description: >-
                                                Represents the frequency the salary is paid. This can be one of:
                                                Monthly, Semi Monthly, Weekly, or Bi-Weekly.
                                            creationDate:
                                              type: string
                                              description: The date this entry was created.
                                              format: date
                                            isCurrent:
                                              type: boolean
                                              description: Is 'true' when this is the effective entry which is currently active.
                                              format: boolean
                                            modificationDate:
                                              type: string
                                              description: The date this entry was modified.
                                              format: date
                                            id:
                                              type: integer
                                              description: The id of the entry.
                                            endEffectiveDate:
                                              type: string
                                              description: >-
                                                For entries that are not active - this it the date this entry became not
                                                effective.
                                              format: date
                                            activeEffectiveDate:
                                              type: string
                                              description: The active effective date for this entry.
                                              format: date
                                            customColumns:
                                              type: object
                                              properties: {}
                                              description: If the table has custom columns, they will appear here.
                                            base:
                                              required:
                                                - currency
                                                - value
                                              type: object
                                              properties:
                                                value:
                                                  type: number
                                                  format: double
                                                currency:
                                                  type: string
                                                  description: Three-letter currency code.
                                              x-readme-ref-name: CurrencyValue
                                            payPeriod:
                                              type: string
                                              description: >-
                                                Represents the period for this salary entry. This can be one of: Annual,
                                                Hourly, Daily, Weekly, Monthly.
                                            effectiveDate:
                                              type: string
                                              description: >-
                                                The date this entry becomes effective. This is a mandatory field for a
                                                work entry.
                                              format: date
                                      required:
                                        - base
                                        - payPeriod
                                      x-readme-ref-name: SalaryEntry
                                x-readme-ref-name: SalaryEntries
                  response_metadata:
                    type: object
                    properties:
                      cursor:
                        type: string
                        description: Contains a string value if there is a 'next' page of data. `null` if there is no more data.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: object
                          properties:
                            error:
                              type: string
                              example: MISSING_PERMISSION
                            message:
                              type: string
                              example: 'You don''t have permission to access data for employees with ids: 2578509511618723822'
                x-readme-ref-name: BulkSalariesTableResponse
        '400':
          description: Bad request.
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
      security:
        - Basic: []
  /bulk/people/work:
    get:
      tags:
        - Employee Tables
      summary: List work history for a list of employees
      description: >-
        Returns a list of historical work entries from the work table for all employees or a specific list of
        employees.<br /> <br /> **<b>Required permissions</b>** <br />    In order to access the work history of each
        requested employee, the service user making the call must have the following permissions: <br /> **For the work
        table**: People's Data > Work > View all other employees' Work section histories. <br /> **For the employees**:
        People's Data > Access data for > Make sure the employees are in the list. Employees that are not listed and
        were specifically requested will be listed under `errors` in the response. <br /> <br />

        **<b>Pagination</b>** <br /> This endpoint uses cursor-based pagination to handle large number of table entries.
        To learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
        API</a>
      parameters:
        - name: limit
          in: query
          description: Specifies the number of table entries to include on each page of the results.
          required: false
          schema:
            type: number
            default: 50
            minimum: 1
            maximum: 200
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Make sure to URL encode this value before you
            send it as a query parameter. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
            target=”_blank”>Pagination in Bob's API</a>.
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          description: >-
            Comma separated list of employee ids. Maximum employees per request: 200. If this parameter is not passed,
            the API will return table entries for all the employees for which the service user has the permission for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Work table entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                        values:
                          type: array
                          items:
                            anyOf:
                              - type: object
                                properties:
                                  values:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        canBeDeleted:
                                          type: boolean
                                          description: internal flag
                                        workChangeType:
                                          type: string
                                          description: >-
                                            The type of the change that was performed for this work entry. This will
                                            contain the ID of the value from the Change Type list.
                                        change:
                                          type: object
                                          description: Details of the last change and the ID of the user who updated this entry
                                          properties:
                                            reason:
                                              type: string
                                            changedBy:
                                              type: string
                                            changedById:
                                              type: string
                                        reportsTo:
                                          required:
                                            - id
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                              description: >-
                                                The manager's employee ID (the email of the manager or a custom field
                                                containing the ID).
                                            firstName:
                                              type: string
                                              description: The manager's first name.
                                            surname:
                                              type: string
                                              description: The manager's surname.
                                            email:
                                              type: string
                                              description: The manager's email address.
                                            displayName:
                                              type: string
                                              description: The manager's display name.
                                        creationDate:
                                          type: string
                                          description: The date this entry was created effective.
                                          format: date
                                        title:
                                          type: string
                                          description: >-
                                            The job title of the employee for this work entry. This field  containe the
                                            ID of the job title entry from the job title list.
                                        customColumns:
                                          type: object
                                          properties: {}
                                        isCurrent:
                                          type: boolean
                                          description: An indication whether this is the current active entry.
                                        modificationDate:
                                          type: string
                                          description: The date this entry was created effective.
                                          format: date
                                        site:
                                          type: string
                                          description: The site of the employee.
                                        siteId:
                                          type: integer
                                          description: The id of the site of the employee.
                                        id:
                                          type: integer
                                          description: The id of the entry.
                                        endEffectiveDate:
                                          type: string
                                          description: >-
                                            For entries that are not active - this it the date this entry became not
                                            effective.
                                          format: date
                                        activeEffectiveDate:
                                          type: string
                                          description: The active effective date for this entry.
                                          format: date
                                        department:
                                          type: string
                                          description: >-
                                            The department the employee belonged to for this work entry. This field
                                            should contain the ID of the department entry in department list.
                                        effectiveDate:
                                          type: string
                                          description: >-
                                            The date this entry becomes effective. This is a mandatory field for a work
                                            entry.
                                          format: date
                                      x-readme-ref-name: WorkEntryForGet
                                x-readme-ref-name: WorkEntries
                  response_metadata:
                    type: object
                    properties:
                      cursor:
                        type: string
                        description: Contains a string value if there is a 'next' page of data. `null` if there is no more data.
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: object
                          properties:
                            error:
                              type: string
                              example: MISSING_PERMISSION
                            message:
                              type: string
                              example: 'You don''t have permission to access data for employees with ids: 2578509511618723822'
                x-readme-ref-name: BulkWorkTableResponse
        '400':
          description: Bad request.
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
      security:
        - Basic: []
  /payroll/history:
    get:
      tags:
        - Employee Tables
      summary: Read payroll tables history.
      description: >-
        <strong>Note</strong>: This endpoint is maintained for legacy purposes but is planned for deprecation in the
        future. We recommend using alternative employee table endpoints where possible.
      parameters:
        - name: department
          in: query
          description: filter payroll for specific department.
          schema:
            type: string
        - name: showInactive
          in: query
          description: Whether to include inactive employees in the response.
          schema:
            type: boolean
            format: boolean
      responses:
        '200':
          description: Payroll data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      allOf:
                        - title: Human readable only (humanReadable="REPLACE")
                          type: object
                          properties:
                            fullName:
                              type: string
                              description: The full name of the Employee (first name + surname).
                            displayName:
                              type: string
                              description: Employee's display name. This defaults to first name & last name but can be customized.
                            creationDateTime:
                              type: string
                              description: The full timestamp of creation of the Employee.
                            work:
                              anyOf:
                                - type: object
                                  properties:
                                    shortStartDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    startDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    manager:
                                      type: string
                                      description: The full name of the employee's manager.
                                    tenureDuration:
                                      type: string
                                      description: The tenure duration of the employee.
                                    durationOfEmployment:
                                      type: string
                                      description: The tenure duration of the employee.
                                    reportsToIdInCompany:
                                      type: string
                                      description: The ID in company of the manager.
                                    employeeIdInCompany:
                                      type: string
                                      description: The ID of the manager.
                                    reportsTo:
                                      type: string
                                      description: The full name of the person the employee reports to.
                                    tenureDurationYears:
                                      type: string
                                      description: The tenture duration in years.
                                    department:
                                      type: string
                                      description: The department this employee belong to.
                                    siteID:
                                      type: string
                                      description: The ID of the site the employee belongs to.
                                    tenureYears:
                                      type: string
                                      description: The tenture in years.
                                    isManager:
                                      type: string
                                      description: Is the employee a manager (Yes/No).
                                    title:
                                      type: string
                                      description: The employee's title.
                                    site:
                                      type: string
                                      description: The employee's site.
                                    originalStartDate:
                                      type: string
                                      description: The original date the employee started to work
                                    activeEffectiveDate:
                                      type: string
                                      description: The active effective date the employee started to work
                                    secondLevelManager:
                                      type: string
                                      description: The full name of the manager in the second level
                                    daysOfPreviousService:
                                      type: string
                                      description: The number of days in previous service
                                    yearsOfService:
                                      type: string
                                      description: The number of years in service
                                  x-readme-ref-name: WorkPartReadable
                            avatarUrl:
                              type: string
                              description: The URL of the source of the avatar image.
                            secondName:
                              type: string
                              description: Employee's surname.
                            about:
                              anyOf:
                                - type: object
                                  properties:
                                    foodPreferences:
                                      type: string
                                      description: Employee's food preferences.
                                    superpowers:
                                      type: string
                                      description: Employee's super powers.
                                    hobbies:
                                      type: string
                                      description: A list of the employee's hobbies.
                                    about:
                                      type: string
                                      description: Employee's about sentence.
                                    avatar:
                                      type: string
                                      description: Image URL of the employee's avatar.
                                  x-readme-ref-name: AboutPartReadable
                            companyId:
                              type: string
                              description: The ID of the employee's company.
                            email:
                              type: string
                              description: Employee's email address.
                              format: email
                            surname:
                              type: string
                              description: Employee's surname.
                            coverImageUrl:
                              type: string
                              description: The URL of the cover image.
                            id:
                              type: string
                              description: A unique identifier representing a specific employee.
                            firstName:
                              type: string
                              description: Employee's first name.
                          x-readme-ref-name: EmployeeResponseReadable
                        - type: object
                          properties:
                            payroll:
                              type: object
                              properties:
                                employmentType:
                                  allOf:
                                    - allOf:
                                        - required:
                                            - effectiveDate
                                          type: object
                                          properties:
                                            id:
                                              type: integer
                                              description: ID.
                                            reason:
                                              type: string
                                              description: The reason for this change.
                                            effectiveDate:
                                              type: string
                                              description: The date this entry becomes effective.
                                              format: date
                                          x-readme-ref-name: TableEntry
                                        - type: object
                                          properties:
                                            personalWorkingPatternType:
                                              type: string
                                              description: >-
                                                indicates whether the working pattern personal (adjusted). Can be null
                                                (no personal defined), "custom", "library" or "flexible".
                                            actualWorkingPattern:
                                              description: >-
                                                The active working pattern for this entry. It will hold the pattern that
                                                is selected, no matter which type it is.
                                              allOf:
                                                - oneOf:
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: hourly
                                                        days:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        hoursPerDay:
                                                          type: number
                                                          example: 9
                                                        workingPatternId:
                                                          type: number
                                                          example: 0
                                                      x-readme-ref-name: WorkingPatternHourly
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: fortnightly
                                                        firstWeek:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        secondWeek:
                                                          type: object
                                                          properties:
                                                            sunday:
                                                              type: number
                                                              example: 0
                                                            monday:
                                                              type: number
                                                              example: 9
                                                            tuesday:
                                                              type: number
                                                              example: 9
                                                            wednesday:
                                                              type: number
                                                              example: 9
                                                            thursday:
                                                              type: number
                                                              example: 9
                                                            friday:
                                                              type: number
                                                              example: 9
                                                            saturday:
                                                              type: number
                                                              example: 0
                                                        hoursPerDay:
                                                          type: number
                                                          example: 9
                                                        workingPatternId:
                                                          type: number
                                                          example: 0
                                                      x-readme-ref-name: WorkingPatternBiWeekly
                                                    - type: object
                                                      properties:
                                                        workingPatternType:
                                                          type: string
                                                          example: flexible
                                                        weeklyWorkPercentage:
                                                          type: number
                                                          example: 80
                                                      x-readme-ref-name: WorkingPatternFlexible
                                                  x-readme-ref-name: WorkingPatternEntry
                                            standardWorkingPattern:
                                              description: >-
                                                The working pattern that was selected from the library as standard. If
                                                null this means the standard is using the site default.
                                              type: object
                                              example: null
                                            standardWorkingPatternId:
                                              description: The working pattern ID that was selected from the library as standard.
                                              type: number
                                              example: null
                                            workingPattern:
                                              description: The personalized (adjusted) working pattern.
                                              type: object
                                              example: null
                                            siteWorkingPattern:
                                              description: The site's default working pattern (always a weekly pattern).
                                              allOf:
                                                - type: object
                                                  properties:
                                                    workingPatternType:
                                                      type: string
                                                      example: hourly
                                                    days:
                                                      type: object
                                                      properties:
                                                        sunday:
                                                          type: number
                                                          example: 0
                                                        monday:
                                                          type: number
                                                          example: 9
                                                        tuesday:
                                                          type: number
                                                          example: 9
                                                        wednesday:
                                                          type: number
                                                          example: 9
                                                        thursday:
                                                          type: number
                                                          example: 9
                                                        friday:
                                                          type: number
                                                          example: 9
                                                        saturday:
                                                          type: number
                                                          example: 0
                                                    hoursPerDay:
                                                      type: number
                                                      example: 9
                                                    workingPatternId:
                                                      type: number
                                                      example: 0
                                                  x-readme-ref-name: WorkingPatternHourly
                                            hoursInDayNotWorked:
                                              type: number
                                              description: Based on the actual working pattern
                                            weeklyHours:
                                              type: number
                                              description: Based on the actual working pattern
                                            fte:
                                              description: >-
                                                the FTE percentage for this entry as calculated based on the working
                                                pattern
                                              type: number
                                            calendarName:
                                              type: string
                                              description: The selected Holiday calendar
                                            calendarId:
                                              type: integer
                                              description: The selected Holiday calendar
                                            contract:
                                              type: string
                                              description: Contract, can be Full-Time, Part-Time, Shifts
                                            type:
                                              type: string
                                              description: >-
                                                Type as appears in the Employment Type list. Can be Permanent,
                                                Temporary, Apprentice, Contractor or any custom value.
                                            salaryPayType:
                                              type: string
                                              description: Salary pay type, can be Salaries or Hourly.
                                            effectiveDate:
                                              type: string
                                              description: The date this entry becomes effective.
                                              format: date
                                            endEffectiveDate:
                                              type: string
                                              description: >-
                                                For entries that are not active - this it the date this entry became not
                                                effective.
                                              format: date
                                            activeEffectiveDate:
                                              type: string
                                              description: The effective date of the active working pattern.
                                              format: date
                                            isCurrent:
                                              type: boolean
                                              description: Is 'true' when this is the effective entry which is currently active.
                                              format: boolean
                                            canBeDeleted:
                                              type: boolean
                                            modificationDate:
                                              type: string
                                              description: The date this entry was modified.
                                              format: date
                                            CreationDate:
                                              type: string
                                              description: The date this entry was created.
                                              format: date
                                            flsaCode:
                                              type: string
                                              description: FLSA code, can be Exempt or Non-Exempt.
                                            change:
                                              type: object
                                              description: Details of the last change and the ID of the user who updated this entry
                                              properties:
                                                reason:
                                                  type: string
                                                changedBy:
                                                  type: string
                                                changedById:
                                                  type: string
                                      required:
                                        - effectiveDate
                                      x-readme-ref-name: EmploymentEntry
                        - type: object
                          properties:
                            about:
                              type: object
                              properties:
                                foodPreferences:
                                  type: object
                                  description: Employee's food preferences.
                                  items:
                                    type: string
                                socialData:
                                  type: object
                                  description: Employee's social data.
                                  properties:
                                    linkedin:
                                      type: string
                                    twitter:
                                      type: string
                                    facebook:
                                      type: string
                                superpowers:
                                  type: array
                                  description: Employee's super powers.
                                  items:
                                    type: string
                                hobbies:
                                  type: array
                                  description: A list of the employee's hobbies.
                                  items:
                                    type: string
                                about:
                                  type: string
                                  description: Employee's about sentence.
                                avatar:
                                  type: string
                                  description: Image URL of the employee's avatar.
                              x-readme-ref-name: AboutPartMachineFormat
                x-readme-ref-name: EmployeesPayrollData
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /people/{id}/bank-accounts:
    get:
      tags:
        - Employee Tables
      summary: List employee's bank accounts
      description: >-
        <p>Returns a list of the bank accounts table entries for a given employee.</p> <p><b>Note:</b> The Bank Account
        details are listed under the 'Financial' category in Bob's UI. They include basic bank account details, and may
        include also a list of bank accounts (if using more than a single bank account). This endpoint will fetch only
        the <b>list of bank accounts</b>. </p> <p>To fetch the basic bank account details (not the table), use the <a
        href="https://apidocs.hibob.com/reference/people" target="_blank">employee's search endpoint</a> instead, and
        specify the fields you want to fetch (e.g. 'financial.bankName'). To learn more, see how to work with <a
        href="https://apidocs.hibob.com/docs/fields-metadata" target="_blank">Fields, Custom fields and Lists</a>.</p>
        See the '200' response for the body response.
      parameters:
        - name: id
          in: path
          description: >-
            The ID of the employee for whom you want to fetch the bank account entries. The employee ID is returned in
            the 'id' field when retrieving an employee's data. <br /> For **testing purposes** you can obtain the
            Employee ID from the URL in the user interface.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of bank account entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            bankAccountType:
                              type: string
                              enum:
                                - Checking
                                - Savings
                              description: >-
                                The list of bank accounts type comes with the above out-of-the-box values. To obtain
                                additional user-defined values, you should fetch the list values call the <a
                                href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all
                                company lists Metadata API</a> with `bankaccounttype` in the listname path parameter.
                            routingNumber:
                              type: string
                              description: >-
                                The routing number indicates what bank this account is held in. Relevant for US and
                                Canada.
                            accountNickname:
                              type: string
                              description: The nickname in Bob to easily identify and personalize this account in Online Banking.
                            accountNumber:
                              type: string
                              description: The account number is the unique identifier at this bank.
                            bankName:
                              type: string
                              description: The name of the specific financial institution.
                            branchAddress:
                              type: string
                              description: The bank's address.
                            bicOrSwift:
                              type: string
                              description: >-
                                The SWIFT Address assigned to the bank in order to send automated international
                                transfers.
                            iban:
                              type: string
                              description: The international bank account number (IBAN) for international transfers.
                            allocation:
                              type: string
                              enum:
                                - percent
                                - amount
                                - remaining
                              description: >-
                                The salary portion allocated for this account. It can be defined as a percentage of the
                                salary,  as a fixed amount, or to allocate all of the remaining funds. The list of
                                possible values cannot be modified.  The values that correspond to this field should be
                                provided in the 'amount' field.
                            amount:
                              type: number
                              description: >-
                                Use this field to provide the values that correspond to the ‘allocation’ field. If
                                allocation is 'percent' this value represents the percentage of the salary portion to
                                allocate. If allocation is 'amount' this value represents the fixed amount of the salary
                                portion to allocate. If allocation is 'remaining' then the amount field should remain
                                empty. This indicates that all of the remaining funds will be allocated to this account.
                            useForBonus:
                              type: boolean
                              description: An indication whether this bank account is used for bonuses.
                          x-readme-ref-name: BankAccountsEntry
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: The unique identifier for the bank account entry.
                            changedBy:
                              type: string
                              description: The employee ID of the person who last modified this entry.
                      x-readme-ref-name: BankAccountsEntryForGet
                x-readme-ref-name: BankAccountsEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Create a new bank account entry for a given employee.
      parameters:
        - name: id
          in: path
          description: >-
            The ID of the employee for whom you want to add the bank account entry. The employee ID is returned in the
            'id' field when retrieving an employee's data. <br /> For **testing purposes** you can obtain the Employee
            ID from the URL in the user interface.
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the bank account to add.
        content:
          application/json:
            schema:
              type: object
              properties:
                bankAccountType:
                  type: string
                  enum:
                    - Checking
                    - Savings
                  description: >-
                    The list of bank accounts type comes with the above out-of-the-box values. To obtain additional
                    user-defined values, you should fetch the list values call the <a
                    href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company lists
                    Metadata API</a> with `bankaccounttype` in the listname path parameter.
                routingNumber:
                  type: string
                  description: The routing number indicates what bank this account is held in. Relevant for US and Canada.
                accountNickname:
                  type: string
                  description: The nickname in Bob to easily identify and personalize this account in Online Banking.
                accountNumber:
                  type: string
                  description: The account number is the unique identifier at this bank.
                bankName:
                  type: string
                  description: The name of the specific financial institution.
                branchAddress:
                  type: string
                  description: The bank's address.
                bicOrSwift:
                  type: string
                  description: The SWIFT Address assigned to the bank in order to send automated international transfers.
                iban:
                  type: string
                  description: The international bank account number (IBAN) for international transfers.
                allocation:
                  type: string
                  enum:
                    - percent
                    - amount
                    - remaining
                  description: >-
                    The salary portion allocated for this account. It can be defined as a percentage of the salary,  as
                    a fixed amount, or to allocate all of the remaining funds. The list of possible values cannot be
                    modified.  The values that correspond to this field should be provided in the 'amount' field.
                amount:
                  type: number
                  description: >-
                    Use this field to provide the values that correspond to the ‘allocation’ field. If allocation is
                    'percent' this value represents the percentage of the salary portion to allocate. If allocation is
                    'amount' this value represents the fixed amount of the salary portion to allocate. If allocation is
                    'remaining' then the amount field should remain empty. This indicates that all of the remaining
                    funds will be allocated to this account.
                useForBonus:
                  type: boolean
                  description: An indication whether this bank account is used for bonuses.
              x-readme-ref-name: BankAccountsEntry
        required: true
      responses:
        '200':
          description: Entry created successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/employment:
    get:
      tags:
        - Employee Tables
      summary: List employee's employment history.
      description: >-
        <p>Returns a list of employment history entries for a given employee.</p> <p>Each employment entry includes the
        working pattern assigned to this employee. To learn more about working patterns, see <a
        href="https://apidocs.hibob.com/docs/how-to-work-with-working-patterns" target="_blank">How to work with Working
        patterns</a>.</p> <p><b>Required permissions</b> </p>    <p>In order to access the employment history of each
        requested employee, the service user making the call must have the following permissions: <b>People's Data >
        Employment > View all other employees' Employment section histories</b>. </p>
      parameters:
        - name: id
          in: path
          description: employee id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of employment history entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      allOf:
                        - required:
                            - effectiveDate
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID.
                            reason:
                              type: string
                              description: The reason for this change.
                            effectiveDate:
                              type: string
                              description: The date this entry becomes effective.
                              format: date
                          x-readme-ref-name: TableEntry
                        - type: object
                          properties:
                            personalWorkingPatternType:
                              type: string
                              description: >-
                                indicates whether the working pattern personal (adjusted). Can be null (no personal
                                defined), "custom", "library" or "flexible".
                            actualWorkingPattern:
                              description: >-
                                The active working pattern for this entry. It will hold the pattern that is selected, no
                                matter which type it is.
                              allOf:
                                - oneOf:
                                    - type: object
                                      properties:
                                        workingPatternType:
                                          type: string
                                          example: hourly
                                        days:
                                          type: object
                                          properties:
                                            sunday:
                                              type: number
                                              example: 0
                                            monday:
                                              type: number
                                              example: 9
                                            tuesday:
                                              type: number
                                              example: 9
                                            wednesday:
                                              type: number
                                              example: 9
                                            thursday:
                                              type: number
                                              example: 9
                                            friday:
                                              type: number
                                              example: 9
                                            saturday:
                                              type: number
                                              example: 0
                                        hoursPerDay:
                                          type: number
                                          example: 9
                                        workingPatternId:
                                          type: number
                                          example: 0
                                      x-readme-ref-name: WorkingPatternHourly
                                    - type: object
                                      properties:
                                        workingPatternType:
                                          type: string
                                          example: fortnightly
                                        firstWeek:
                                          type: object
                                          properties:
                                            sunday:
                                              type: number
                                              example: 0
                                            monday:
                                              type: number
                                              example: 9
                                            tuesday:
                                              type: number
                                              example: 9
                                            wednesday:
                                              type: number
                                              example: 9
                                            thursday:
                                              type: number
                                              example: 9
                                            friday:
                                              type: number
                                              example: 9
                                            saturday:
                                              type: number
                                              example: 0
                                        secondWeek:
                                          type: object
                                          properties:
                                            sunday:
                                              type: number
                                              example: 0
                                            monday:
                                              type: number
                                              example: 9
                                            tuesday:
                                              type: number
                                              example: 9
                                            wednesday:
                                              type: number
                                              example: 9
                                            thursday:
                                              type: number
                                              example: 9
                                            friday:
                                              type: number
                                              example: 9
                                            saturday:
                                              type: number
                                              example: 0
                                        hoursPerDay:
                                          type: number
                                          example: 9
                                        workingPatternId:
                                          type: number
                                          example: 0
                                      x-readme-ref-name: WorkingPatternBiWeekly
                                    - type: object
                                      properties:
                                        workingPatternType:
                                          type: string
                                          example: flexible
                                        weeklyWorkPercentage:
                                          type: number
                                          example: 80
                                      x-readme-ref-name: WorkingPatternFlexible
                                  x-readme-ref-name: WorkingPatternEntry
                            standardWorkingPattern:
                              description: >-
                                The working pattern that was selected from the library as standard. If null this means
                                the standard is using the site default.
                              type: object
                              example: null
                            standardWorkingPatternId:
                              description: The working pattern ID that was selected from the library as standard.
                              type: number
                              example: null
                            workingPattern:
                              description: The personalized (adjusted) working pattern.
                              type: object
                              example: null
                            siteWorkingPattern:
                              description: The site's default working pattern (always a weekly pattern).
                              allOf:
                                - type: object
                                  properties:
                                    workingPatternType:
                                      type: string
                                      example: hourly
                                    days:
                                      type: object
                                      properties:
                                        sunday:
                                          type: number
                                          example: 0
                                        monday:
                                          type: number
                                          example: 9
                                        tuesday:
                                          type: number
                                          example: 9
                                        wednesday:
                                          type: number
                                          example: 9
                                        thursday:
                                          type: number
                                          example: 9
                                        friday:
                                          type: number
                                          example: 9
                                        saturday:
                                          type: number
                                          example: 0
                                    hoursPerDay:
                                      type: number
                                      example: 9
                                    workingPatternId:
                                      type: number
                                      example: 0
                                  x-readme-ref-name: WorkingPatternHourly
                            hoursInDayNotWorked:
                              type: number
                              description: Based on the actual working pattern
                            weeklyHours:
                              type: number
                              description: Based on the actual working pattern
                            fte:
                              description: the FTE percentage for this entry as calculated based on the working pattern
                              type: number
                            calendarName:
                              type: string
                              description: The selected Holiday calendar
                            calendarId:
                              type: integer
                              description: The selected Holiday calendar
                            contract:
                              type: string
                              description: Contract, can be Full-Time, Part-Time, Shifts
                            type:
                              type: string
                              description: >-
                                Type as appears in the Employment Type list. Can be Permanent, Temporary, Apprentice,
                                Contractor or any custom value.
                            salaryPayType:
                              type: string
                              description: Salary pay type, can be Salaries or Hourly.
                            effectiveDate:
                              type: string
                              description: The date this entry becomes effective.
                              format: date
                            endEffectiveDate:
                              type: string
                              description: For entries that are not active - this it the date this entry became not effective.
                              format: date
                            activeEffectiveDate:
                              type: string
                              description: The effective date of the active working pattern.
                              format: date
                            isCurrent:
                              type: boolean
                              description: Is 'true' when this is the effective entry which is currently active.
                              format: boolean
                            canBeDeleted:
                              type: boolean
                            modificationDate:
                              type: string
                              description: The date this entry was modified.
                              format: date
                            CreationDate:
                              type: string
                              description: The date this entry was created.
                              format: date
                            flsaCode:
                              type: string
                              description: FLSA code, can be Exempt or Non-Exempt.
                            change:
                              type: object
                              description: Details of the last change and the ID of the user who updated this entry
                              properties:
                                reason:
                                  type: string
                                changedBy:
                                  type: string
                                changedById:
                                  type: string
                      required:
                        - effectiveDate
                      x-readme-ref-name: EmploymentEntry
                x-readme-ref-name: EmploymentEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Creates a new employment entry for a given employee.
      parameters:
        - name: id
          in: path
          description: employee id
          required: true
          schema:
            type: string
      requestBody:
        description: Employment entry to add. This must not conflict with another entry on the same effective date.
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: TableEntry
                - type: object
                  properties:
                    personalWorkingPatternType:
                      type: string
                      description: >-
                        indicates whether the working pattern personal (adjusted). Can be null (no personal defined),
                        "custom", "library" or "flexible".
                    actualWorkingPattern:
                      description: >-
                        The active working pattern for this entry. It will hold the pattern that is selected, no matter
                        which type it is.
                      allOf:
                        - oneOf:
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: hourly
                                days:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                hoursPerDay:
                                  type: number
                                  example: 9
                                workingPatternId:
                                  type: number
                                  example: 0
                              x-readme-ref-name: WorkingPatternHourly
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: fortnightly
                                firstWeek:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                secondWeek:
                                  type: object
                                  properties:
                                    sunday:
                                      type: number
                                      example: 0
                                    monday:
                                      type: number
                                      example: 9
                                    tuesday:
                                      type: number
                                      example: 9
                                    wednesday:
                                      type: number
                                      example: 9
                                    thursday:
                                      type: number
                                      example: 9
                                    friday:
                                      type: number
                                      example: 9
                                    saturday:
                                      type: number
                                      example: 0
                                hoursPerDay:
                                  type: number
                                  example: 9
                                workingPatternId:
                                  type: number
                                  example: 0
                              x-readme-ref-name: WorkingPatternBiWeekly
                            - type: object
                              properties:
                                workingPatternType:
                                  type: string
                                  example: flexible
                                weeklyWorkPercentage:
                                  type: number
                                  example: 80
                              x-readme-ref-name: WorkingPatternFlexible
                          x-readme-ref-name: WorkingPatternEntry
                    standardWorkingPattern:
                      description: >-
                        The working pattern that was selected from the library as standard. If null this means the
                        standard is using the site default.
                      type: object
                      example: null
                    standardWorkingPatternId:
                      description: The working pattern ID that was selected from the library as standard.
                      type: number
                      example: null
                    workingPattern:
                      description: The personalized (adjusted) working pattern.
                      type: object
                      example: null
                    siteWorkingPattern:
                      description: The site's default working pattern (always a weekly pattern).
                      allOf:
                        - type: object
                          properties:
                            workingPatternType:
                              type: string
                              example: hourly
                            days:
                              type: object
                              properties:
                                sunday:
                                  type: number
                                  example: 0
                                monday:
                                  type: number
                                  example: 9
                                tuesday:
                                  type: number
                                  example: 9
                                wednesday:
                                  type: number
                                  example: 9
                                thursday:
                                  type: number
                                  example: 9
                                friday:
                                  type: number
                                  example: 9
                                saturday:
                                  type: number
                                  example: 0
                            hoursPerDay:
                              type: number
                              example: 9
                            workingPatternId:
                              type: number
                              example: 0
                          x-readme-ref-name: WorkingPatternHourly
                    hoursInDayNotWorked:
                      type: number
                      description: Based on the actual working pattern
                    weeklyHours:
                      type: number
                      description: Based on the actual working pattern
                    fte:
                      description: the FTE percentage for this entry as calculated based on the working pattern
                      type: number
                    calendarName:
                      type: string
                      description: The selected Holiday calendar
                    calendarId:
                      type: integer
                      description: The selected Holiday calendar
                    contract:
                      type: string
                      description: Contract, can be Full-Time, Part-Time, Shifts
                    type:
                      type: string
                      description: >-
                        Type as appears in the Employment Type list. Can be Permanent, Temporary, Apprentice, Contractor
                        or any custom value.
                    salaryPayType:
                      type: string
                      description: Salary pay type, can be Salaries or Hourly.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                    endEffectiveDate:
                      type: string
                      description: For entries that are not active - this it the date this entry became not effective.
                      format: date
                    activeEffectiveDate:
                      type: string
                      description: The effective date of the active working pattern.
                      format: date
                    isCurrent:
                      type: boolean
                      description: Is 'true' when this is the effective entry which is currently active.
                      format: boolean
                    canBeDeleted:
                      type: boolean
                    modificationDate:
                      type: string
                      description: The date this entry was modified.
                      format: date
                    CreationDate:
                      type: string
                      description: The date this entry was created.
                      format: date
                    flsaCode:
                      type: string
                      description: FLSA code, can be Exempt or Non-Exempt.
                    change:
                      type: object
                      description: Details of the last change and the ID of the user who updated this entry
                      properties:
                        reason:
                          type: string
                        changedBy:
                          type: string
                        changedById:
                          type: string
              required:
                - effectiveDate
              x-readme-ref-name: EmploymentEntry
        required: true
      responses:
        '200':
          description: Entry created successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/equities:
    get:
      tags:
        - Employee Tables
      summary: List the employee's equity grants.
      description: Returns a list of equity grants for a given employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of salary equity grants.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      allOf:
                        - required:
                            - effectiveDate
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID.
                            reason:
                              type: string
                              description: The reason for this change.
                            effectiveDate:
                              type: string
                              description: The date this entry becomes effective.
                              format: date
                          x-readme-ref-name: TableEntry
                        - type: object
                          properties:
                            quantity:
                              type: number
                              description: The number of equities granted.
                              format: double
                            equityType:
                              type: string
                              description: The type of the grant.
                            vestingCommencementDate:
                              type: string
                              description: Vesting commencement date.
                              format: date
                            consentNumber:
                              type: string
                              description: Consent number.
                            grantDate:
                              type: string
                              description: Date the equity was granted.
                              format: date
                            optionExpiration:
                              type: string
                              description: Date the options expire.
                              format: date
                            exercisePrice:
                              required:
                                - currency
                                - value
                              type: object
                              properties:
                                value:
                                  type: number
                                  format: double
                                currency:
                                  type: string
                                  description: Three-letter currency code.
                              x-readme-ref-name: CurrencyValue
                            vestingTerm:
                              type: string
                              description: Terms for exercising this grant.
                            grantType:
                              type: string
                              description: 'Grant type. One of: Initial Grant, Merit Grant'
                            vestingSchedule:
                              type: number
                              description: The vesting schedule ID assigned to this grant.
                              format: long
                            grantNumber:
                              type: number
                              description: The Grant number for employee.
                              format: double
                            grantStatus:
                              type: string
                              description: 'Grant status. one of: Granted, Pending Approval'
                      required:
                        - quantity
                        - equityType
                      x-readme-ref-name: EquityEntry
                x-readme-ref-name: EquityEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Creates a new equity grant for a given employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Equity grant to add.
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: TableEntry
                - type: object
                  properties:
                    quantity:
                      type: number
                      description: The number of equities granted.
                      format: double
                    equityType:
                      type: string
                      description: The type of the grant.
                    vestingCommencementDate:
                      type: string
                      description: Vesting commencement date.
                      format: date
                    consentNumber:
                      type: string
                      description: Consent number.
                    grantDate:
                      type: string
                      description: Date the equity was granted.
                      format: date
                    optionExpiration:
                      type: string
                      description: Date the options expire.
                      format: date
                    exercisePrice:
                      required:
                        - currency
                        - value
                      type: object
                      properties:
                        value:
                          type: number
                          format: double
                        currency:
                          type: string
                          description: Three-letter currency code.
                      x-readme-ref-name: CurrencyValue
                    vestingTerm:
                      type: string
                      description: Terms for exercising this grant.
                    grantType:
                      type: string
                      description: 'Grant type. One of: Initial Grant, Merit Grant'
                    vestingSchedule:
                      type: number
                      description: The vesting schedule ID assigned to this grant.
                      format: long
                    grantNumber:
                      type: number
                      description: The Grant number for employee.
                      format: double
                    grantStatus:
                      type: string
                      description: 'Grant status. one of: Granted, Pending Approval'
              required:
                - quantity
                - equityType
              x-readme-ref-name: EquityEntry
        required: true
      responses:
        '200':
          description: Entry added successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/lifecycle:
    get:
      tags:
        - Employee Tables
      summary: List employee's lifecycle status history.
      description: >-
        Returns a list of historical lifecycle entries from the lifecycle table for an employee.<br /> <br />
        **<b>Required permissions</b>** <br />    In order to access the lifecycle history, the service user making the
        call must have the following permissions: <br /> **For the lifecycle table**: People's Data > Lifecycle > View
        all other employees' Lifecycle section histories. <br /> **For the employees**: People's Data > Access data for
        > Make sure the employee is in the list. 
      parameters:
        - name: id
          in: path
          description: Employee backend-id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of life-cycle history entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the lifecycle entry.
                        effectiveDate:
                          type: string
                          description: The date this entry becomes effective.
                          format: date
                        status:
                          type: string
                          description: >-
                            Can be any of the <a
                            href="https://help.hibob.com/hc/en-us/articles/4409776355857#h_01H95TQ2DCZ25SPT6R7CYCC0ZW"
                            trget="_blank">employee lifecycle status in Bob</a> (such as "Hired", "Employed",
                            "Terminated", "Garden leave", "Leave","Parental leave").
                        employeeStatus:
                          type: string
                          description: >-
                            This is the employee's **access status**, which is automatically determined when updating
                            the status. It can be "Active", or "Inactive"
                        workChangeType:
                          type: string
                          description: >-
                            The type of the change that was performed for this work entry. This will contain the ID of
                            the value from the Change Type list.
                        change:
                          type: object
                          description: Details of the last change and the ID of the user who updated this entry
                          properties:
                            reason:
                              type: string
                            changedBy:
                              type: string
                            changedById:
                              type: string
                        creationDate:
                          type: string
                          description: The date this entry was created.
                          format: date
                        reasonType:
                          type: string
                          description: The ID of the 'lifecycleReasonType' list entry
                        isCurrent:
                          type: boolean
                          description: Is 'true' when this is the effective entry which is currently active.
                          format: boolean
                        modificationDate:
                          type: string
                          description: The date this entry was modified.
                          format: date
                        leaveReason:
                          type: string
                          description: Can be any of
                        endEffectiveDate:
                          type: string
                          description: For entries that are not active - this it the date this entry became not effective.
                        canBeDeleted:
                          type: boolean
                          description: internal flag
                        customColumns:
                          type: object
                          properties: {}
                          description: If the table has custom columns, they will appear here.
                      x-readme-ref-name: LifeCycleEntry
                x-readme-ref-name: LifeCycleEntries
      security:
        - Basic: []
  /people/{id}/salaries:
    get:
      tags:
        - Employee Tables
      summary: List employee's salary history.
      description: >-
        Returns a list of historical salary entries from the salary table in the payroll section for an employee.<br />
        <br /> **<b>Required permissions</b>** <br />    In order to access the payroll history, the service user making
        the call must have the following permissions: <br /> **For the salary table**: People's Data > Payroll > View
        all other employees' Payroll section histories. <br /> **For the employee**: People's Data > Access data for >
        Make sure the employee is in the list.
      parameters:
        - name: id
          in: path
          description: Employee backend-id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of salary entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            canBeDeleted:
                              type: boolean
                              description: internal flag
                            workChangeType:
                              type: string
                              description: >-
                                The type of the change that was performed for this work entry. This will contain the ID
                                of the value from the Change Type list.
                            change:
                              type: object
                              description: Details of the last change and the ID of the user who updated this entry
                              properties:
                                reason:
                                  type: string
                                changedBy:
                                  type: string
                                changedById:
                                  type: string
                            payFrequency:
                              type: string
                              description: >-
                                Represents the frequency the salary is paid. This can be one of: Monthly, Semi Monthly,
                                Weekly, or Bi-Weekly.
                            creationDate:
                              type: string
                              description: The date this entry was created.
                              format: date
                            isCurrent:
                              type: boolean
                              description: Is 'true' when this is the effective entry which is currently active.
                              format: boolean
                            modificationDate:
                              type: string
                              description: The date this entry was modified.
                              format: date
                            id:
                              type: integer
                              description: The id of the entry.
                            endEffectiveDate:
                              type: string
                              description: For entries that are not active - this it the date this entry became not effective.
                              format: date
                            activeEffectiveDate:
                              type: string
                              description: The active effective date for this entry.
                              format: date
                            customColumns:
                              type: object
                              properties: {}
                              description: If the table has custom columns, they will appear here.
                            base:
                              required:
                                - currency
                                - value
                              type: object
                              properties:
                                value:
                                  type: number
                                  format: double
                                currency:
                                  type: string
                                  description: Three-letter currency code.
                              x-readme-ref-name: CurrencyValue
                            payPeriod:
                              type: string
                              description: >-
                                Represents the period for this salary entry. This can be one of: Annual, Hourly, Daily,
                                Weekly, Monthly.
                            effectiveDate:
                              type: string
                              description: The date this entry becomes effective. This is a mandatory field for a work entry.
                              format: date
                      required:
                        - base
                        - payPeriod
                      x-readme-ref-name: SalaryEntry
                x-readme-ref-name: SalaryEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Creates a new salary entry for a given employee.
      parameters:
        - name: id
          in: path
          description: Employee backend-id.
          required: true
          schema:
            type: string
      requestBody:
        description: Salary entry to add. This must not conflict with another entry on the same effective date.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    canBeDeleted:
                      type: boolean
                      description: internal flag
                    workChangeType:
                      type: string
                      description: >-
                        The type of the change that was performed for this work entry. This will contain the ID of the
                        value from the Change Type list.
                    change:
                      type: object
                      description: Details of the last change and the ID of the user who updated this entry
                      properties:
                        reason:
                          type: string
                        changedBy:
                          type: string
                        changedById:
                          type: string
                    payFrequency:
                      type: string
                      description: >-
                        Represents the frequency the salary is paid. This can be one of: Monthly, Semi Monthly, Weekly,
                        or Bi-Weekly.
                    creationDate:
                      type: string
                      description: The date this entry was created.
                      format: date
                    isCurrent:
                      type: boolean
                      description: Is 'true' when this is the effective entry which is currently active.
                      format: boolean
                    modificationDate:
                      type: string
                      description: The date this entry was modified.
                      format: date
                    id:
                      type: integer
                      description: The id of the entry.
                    endEffectiveDate:
                      type: string
                      description: For entries that are not active - this it the date this entry became not effective.
                      format: date
                    activeEffectiveDate:
                      type: string
                      description: The active effective date for this entry.
                      format: date
                    customColumns:
                      type: object
                      properties: {}
                      description: If the table has custom columns, they will appear here.
                    base:
                      required:
                        - currency
                        - value
                      type: object
                      properties:
                        value:
                          type: number
                          format: double
                        currency:
                          type: string
                          description: Three-letter currency code.
                      x-readme-ref-name: CurrencyValue
                    payPeriod:
                      type: string
                      description: >-
                        Represents the period for this salary entry. This can be one of: Annual, Hourly, Daily, Weekly,
                        Monthly.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective. This is a mandatory field for a work entry.
                      format: date
              required:
                - base
                - payPeriod
              x-readme-ref-name: SalaryEntry
        required: true
      responses:
        '200':
          description: Entry added successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/training:
    get:
      tags:
        - Employee Tables
      summary: List the employee's training records.
      description: Returns a list of training entries from the employee's Training table, for a given employee.
      parameters:
        - name: id
          in: path
          description: The identifier of the employee.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of training entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: number
                              description: The id of the training entry. If not passed, the system will assign a backend-id.
                            name:
                              type: string
                              description: >-
                                The backend-id of the relevant entry in the Training Name list. To find out the list
                                items backend-ids, use the Lists metadata endpoint to fetch the `TraningName` list. Note
                                that the backend-ids may consist of out-of-the-box list items which will be represented
                                as strings (like 'Training'), or a numeric value for user-defined items. To learn more,
                                see <a href="https://apidocs.hibob.com/docs/fields-metadata">Fields and lists
                                metadata</a>.
                            description:
                              type: string
                              description: Further description about the training entry.
                            cost:
                              required:
                                - currency
                                - value
                              type: object
                              properties:
                                value:
                                  type: number
                                  format: double
                                currency:
                                  type: string
                                  description: Three-letter currency code.
                              x-readme-ref-name: CurrencyValue
                            status:
                              type: string
                              description: The status of the training entry
                            frequency:
                              type: string
                              description: >-
                                The frequency of the training entry. The name must be of "Once", "Weekly", "Monthly",
                                "Yearly". This is  an item in the frequency list.
                            startDate:
                              type: string
                              description: The date this entry becomes effective.
                              format: date
                            endDate:
                              type: string
                              description: The date of training completion.
                              format: date
                            documentId:
                              type: number
                              description: ID of the document attached to this training entry.
                              format: long
                            customColumns:
                              type: object
                              properties: {}
                      required:
                        - amount
                        - type
                        - paymentPeriod
                      x-readme-ref-name: TrainingEntry
                x-readme-ref-name: TrainingEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Creates a new training records for a given employee
      description: >-
        Create a new training record in the Training table. Follow the parameters description for more details on the
        values to pass to this endpoint.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Values for the Training entry you want to add.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    id:
                      type: number
                      description: The id of the training entry. If not passed, the system will assign a backend-id.
                    name:
                      type: string
                      description: >-
                        The backend-id of the relevant entry in the Training Name list. To find out the list items
                        backend-ids, use the Lists metadata endpoint to fetch the `TraningName` list. Note that the
                        backend-ids may consist of out-of-the-box list items which will be represented as strings (like
                        'Training'), or a numeric value for user-defined items. To learn more, see <a
                        href="https://apidocs.hibob.com/docs/fields-metadata">Fields and lists metadata</a>.
                    description:
                      type: string
                      description: Further description about the training entry.
                    cost:
                      required:
                        - currency
                        - value
                      type: object
                      properties:
                        value:
                          type: number
                          format: double
                        currency:
                          type: string
                          description: Three-letter currency code.
                      x-readme-ref-name: CurrencyValue
                    status:
                      type: string
                      description: The status of the training entry
                    frequency:
                      type: string
                      description: >-
                        The frequency of the training entry. The name must be of "Once", "Weekly", "Monthly", "Yearly".
                        This is  an item in the frequency list.
                    startDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                    endDate:
                      type: string
                      description: The date of training completion.
                      format: date
                    documentId:
                      type: number
                      description: ID of the document attached to this training entry.
                      format: long
                    customColumns:
                      type: object
                      properties: {}
              required:
                - amount
                - type
                - paymentPeriod
              x-readme-ref-name: TrainingEntry
        required: true
      responses:
        '200':
          description: Entry added successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/variable:
    get:
      tags:
        - Employee Tables
      summary: List employee's variable payments
      description: Returns a list of variable payments for a given employee.<br
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of variable payments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: The identifier of the entry in the Variable Pay table
                        effectiveDate:
                          type: string
                          description: The date this entry becomes effective.
                          format: date
                        endEffectiveDate:
                          type: string
                          description: For entries that are not active - this it the date this entry became not effective.
                          format: date
                        isCurrent:
                          type: boolean
                          description: Indicates whether this is the 'current' row (effective date is current)
                        canBeDeleted:
                          type: boolean
                        amount:
                          required:
                            - currency
                            - value
                          type: object
                          properties:
                            value:
                              type: number
                              format: double
                            currency:
                              type: string
                              description: Three-letter currency code.
                          x-readme-ref-name: CurrencyValue
                        departmentPercent:
                          type: number
                          description: The employee's department on-target weight, in percentage.
                        individualPercent:
                          type: number
                          description: The employee's individual on-target weight, in percentage.
                        payoutType:
                          type: string
                          description: The variable pay type - currenly only "amount" is supported.
                        variableType:
                          type: string
                          description: 'The type of variable pay. Can be any of: "Bonus", "ExecutiveBonus", "Commission".'
                        paymentPeriod:
                          type: string
                          description: >-
                            This represents the period for this variable entry. It can be one of: Annual, Half-Yearly,
                            Quarterly, Monthly.
                        creationDate:
                          type: string
                          description: The date the variable pay entry was created.
                          format: date
                        endDate:
                          type: string
                          description: The date of variable pay completion.
                          format: date
                        modificationDate:
                          type: string
                          description: The date the variable pay entry was updated.
                          format: date
                        percentageOfAnnualSalary:
                          type: number
                          description: Calculated field (not supported at the moment via the API)
                        companyPercent:
                          type: number
                          description: The employee's company on-target weight, in percentage.
                        customColumns:
                          type: object
                          properties: {}
                        change:
                          type: object
                          description: Details of the last change and the ID of the user who updated this entry
                          properties:
                            reason:
                              type: string
                            changedBy:
                              type: string
                            changedById:
                              type: string
                      x-readme-ref-name: ReadVariableEntry
                x-readme-ref-name: VariableEntries
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Creates a new variable payment for a given employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Variable payment to add.
        content:
          application/json:
            schema:
              type: object
              properties:
                effectiveDate:
                  type: string
                  description: The date this entry becomes effective.
                  format: date
                amount:
                  required:
                    - currency
                    - value
                  type: object
                  properties:
                    value:
                      type: number
                      format: double
                    currency:
                      type: string
                      description: Three-letter currency code.
                  x-readme-ref-name: CurrencyValue
                variableType:
                  type: string
                  description: The variable pay type - currently only "amount" is supported.
                paymentPeriod:
                  type: string
                  description: >-
                    This represents the period for this variable entry. It can be one of: Annual, Half-Yearly,
                    Quarterly, Monthly.
                companyPercent:
                  type: number
                  description: The employee's company on-target weight, in percentage.
                departmentPercent:
                  type: number
                  description: The employee's department on-target weight, in percentage.
                individualPercent:
                  type: number
                  description: The employee's individual on-target weight, in percentage.
                reason:
                  type: string
                  description: The reason for this change.
              required:
                - amount
                - effectiveDate
                - variableType
                - paymentPeriod
              x-readme-ref-name: CreateVariableEntry
        required: true
      responses:
        '200':
          description: Entry added successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/{id}/work:
    get:
      tags:
        - Employee Tables
      summary: List employee's work history
      description: >-
        Returns a list of historical work entries from the work table for an employee.<br /> <br /> **<b>Required
        permissions</b>** <br />    In order to access the work history, the service user making the call must have the
        following permissions: <br /> **For the work table**: People's Data > Work > View all other employees' Work
        section histories. <br /> **For the employee**: People's Data > Access data for > Make sure the employee is in
        the list. <br /> <br />
      parameters:
        - name: id
          in: path
          description: Employee backend-id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of work history entries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        canBeDeleted:
                          type: boolean
                          description: internal flag
                        workChangeType:
                          type: string
                          description: >-
                            The type of the change that was performed for this work entry. This will contain the ID of
                            the value from the Change Type list.
                        change:
                          type: object
                          description: Details of the last change and the ID of the user who updated this entry
                          properties:
                            reason:
                              type: string
                            changedBy:
                              type: string
                            changedById:
                              type: string
                        reportsTo:
                          required:
                            - id
                          type: object
                          properties:
                            id:
                              type: string
                              description: >-
                                The manager's employee ID (the email of the manager or a custom field containing the
                                ID).
                            firstName:
                              type: string
                              description: The manager's first name.
                            surname:
                              type: string
                              description: The manager's surname.
                            email:
                              type: string
                              description: The manager's email address.
                            displayName:
                              type: string
                              description: The manager's display name.
                        creationDate:
                          type: string
                          description: The date this entry was created effective.
                          format: date
                        title:
                          type: string
                          description: >-
                            The job title of the employee for this work entry. This field  containe the ID of the job
                            title entry from the job title list.
                        customColumns:
                          type: object
                          properties: {}
                        isCurrent:
                          type: boolean
                          description: An indication whether this is the current active entry.
                        modificationDate:
                          type: string
                          description: The date this entry was created effective.
                          format: date
                        site:
                          type: string
                          description: The site of the employee.
                        siteId:
                          type: integer
                          description: The id of the site of the employee.
                        id:
                          type: integer
                          description: The id of the entry.
                        endEffectiveDate:
                          type: string
                          description: For entries that are not active - this it the date this entry became not effective.
                          format: date
                        activeEffectiveDate:
                          type: string
                          description: The active effective date for this entry.
                          format: date
                        department:
                          type: string
                          description: >-
                            The department the employee belonged to for this work entry. This field should contain the
                            ID of the department entry in department list.
                        effectiveDate:
                          type: string
                          description: The date this entry becomes effective. This is a mandatory field for a work entry.
                          format: date
                      x-readme-ref-name: WorkEntryForGet
                x-readme-ref-name: WorkEntries
        '400':
          description: Bad request, see error description.
          content: {}
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employee. Check the
            permissions as explained in the endpoint description.
          content: {}
      security:
        - Basic: []
    post:
      tags:
        - Employee Tables
      summary: Create a new work entry for a given employee.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      requestBody:
        description: Work entry to add. This must not conflict with another entry on the same effective date and site.
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - effectiveDate
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the work entry.
                    reason:
                      type: string
                      description: The reason for this change.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective.
                      format: date
                  x-readme-ref-name: WorkTableEntry
                - type: object
                  properties:
                    title:
                      type: string
                      description: >-
                        The job title of the employee for this work entry. This field should contain the ID of the job
                        title entry from the job title list.
                    department:
                      type: string
                      description: >-
                        The department the employee belonged to for this work entry. This field should contain the ID of
                        the department entry in department list.
                    site:
                      type: string
                      description: >-
                        The site of the employee. This is a mandatory field for a work entry (you must pass either the
                        site or the siteId).
                    siteId:
                      type: integer
                      description: >-
                        The id of the site of the employee. This is a mandatory field for a work entry (you must pass
                        either the site or the siteId).
                    reportsTo:
                      required:
                        - id
                      type: object
                      properties:
                        id:
                          type: string
                          description: The manager's employee ID (the email of the manager or a custom field containing the ID).
                        firstName:
                          type: string
                          description: The manager's first name.
                        surname:
                          type: string
                          description: The manager's surname.
                        email:
                          type: string
                          description: The manager's email address.
                        displayName:
                          type: string
                          description: The manager's display name.
                      description: The manager's details.
                    effectiveDate:
                      type: string
                      description: The date this entry becomes effective. This is a mandatory field for a work entry.
                      format: date
                    customColumns:
                      type: object
                      properties: {}
                - type: object
              x-readme-ref-name: WorkEntry
        required: true
      responses:
        '200':
          description: Entry created successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: entry
  /people/actual-payments/search:
    post:
      tags:
        - Employee Tables
      summary: Search for actual payments
      description: >-
        This endpoint allows you to search for actual payments based on various filters.<br /> <br />
        **<b>Pagination</b>** <br /> This endpoint uses cursor-based pagination to handle large number of table entries.
        To learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
        API</a> <p>**<b>Required permissions</b>**  </p> <p>In order to access the actual payments history of each
        requested employee, the service user making the call must have this permission: People's Data > Payroll > View
        selected employees' Payroll sections<br /></p> <p>**Testing notes**:<br /></p> 1. Use the testing widget's **Try
        It!** option to test this endpoint.<br /> 2. Request Example: Use the **Examples > Request example** option to
        see how to initiate body parameters.<br /> 3. Response Example: View the response payload using the **Response >
        Response example** option in the response on the right.
      requestBody:
        description: 'The request body must include a filter by employee ID. '
        content:
          application/json:
            schema:
              type: object
              required:
                - filters
              properties:
                filters:
                  type: array
                  description: >-
                    <p>An array of filter criteria, each containing a field ID, operator, and values. Supported fields
                    for filtering are:</p> <ul> <li>`employeeId` (required): Filter by the the employee ID. All queries
                    must specify the employee Ids to fetch. Each call can retrieve up to 200 employees.</li>
                    <li>`payDate` (optional): Filter by the date of the pay period.</li> </ul> <p>Important: The array
                    must include a filter for employeeId, as it is required for all requests. <br>The structure of the
                    filters may vary slightly depending on the field being used.</p>
                  items:
                    oneOf:
                      - type: object
                        title: Employee ID filter
                        description: Comma-separated list of employee IDs to filter by. Each call can retrieve up to 200 employees.
                        required:
                          - fieldPath
                          - operator
                          - values
                        properties:
                          fieldPath:
                            type: string
                            example: employeeId
                            description: The identifier of the employeeId field.
                          operator:
                            type: string
                            enum:
                              - equals
                            example: equals
                            description: The comparison operator for the employee IDs.
                          values:
                            type: array
                            items:
                              type: string
                              example: '100001'
                            description: >-
                              A comma-separated list of employeeIDs to fetch by. For example: "100001,200001". Each call
                              can retrieve up to 200 employees.
                      - type: object
                        title: Pay date filter
                        description: payDate to filter by
                        required:
                          - fieldPath
                          - operator
                          - value
                        properties:
                          fieldPath:
                            type: string
                            example: payDate
                            description: The payDate field ID to filter by.
                          operator:
                            type: string
                            enum:
                              - greaterThanOrEquals
                              - lessThanOrEquals
                            example: greaterThanOrEquals
                            description: The comparison operator when filtering by date.
                          value:
                            type: string
                            example: '2020-01-01'
                            description: The date value to compare against.
                pagination:
                  type: object
                  description: Optional pagination parameters.
                  properties:
                    limit:
                      description: >-
                        Specifies the number of table entries to include on each page of the results. Defaults to 50 if
                        not supplied.
                      type: number
                      minimum: 1
                      default: 50
                      maximum: 200
                    cursor:
                      description: >-
                        A marker representing the first item on the next page to read. Should not be provided in the
                        first call. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
                        target=”_blank”>Pagination in Bob's API</a>.
                      type: string
                      example: ''
                  required:
                    - limit
                  example:
                    limit: 50
              x-readme-ref-name: ActualPaymentsSearchRequest
      responses:
        '200':
          description: Search results for actual payments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                          example: '10001'
                        id:
                          type: number
                          description: The backend-ID of the actual payment table entry
                          example: 11111
                        payDate:
                          type: string
                          format: date
                        payType:
                          type: string
                          enum:
                            - Bonus
                            - Executive bonus
                            - Commission
                          example: Bonus
                          description: >-
                            The list of payment types comes with the above out-of-the-box values. To obtain additional
                            user-defined values, you should fetch the list values call the <a
                            href="https://apidocs.hibob.com/reference/get_company-named-lists-listname"> Get all company
                            lists Metadata API</a> with `payType` in the listname path parameter.
                        amount:
                          required:
                            - currency
                            - value
                          type: object
                          properties:
                            value:
                              type: number
                              format: double
                            currency:
                              type: string
                              description: Three-letter currency code.
                          x-readme-ref-name: CurrencyValue
                        change:
                          type: object
                          properties:
                            reason:
                              type: string
                            changedBy:
                              type: string
                            changedById:
                              type: string
                        customColumns:
                          type: object
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: >-
                          Contains a string value if there is a 'next' page of data. `null` if there is no more data.
                          Use this value as the `cursor` parameter for pagination to get the next page.
                x-readme-ref-name: ActualPaymentsSearchResponse
        '400':
          description: Bad request.
        '401':
          description: Missing authentication credentials.
        '403':
          description: Forbidden. The service user does not have the required permissions.
      security:
        - Basic: []
  /company/named-lists/{listName}/{itemId}:
    delete:
      tags:
        - Metadata
      summary: Delete an item from an existing list.
      parameters:
        - name: listName
          in: path
          description: The internal name of the list.
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: The ID of the list item.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list item was deleted successfully.
          content: {}
        '404':
          description: If the list or item was not found
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Metadata
      summary: Update an existing item from a list.
      parameters:
        - name: listName
          in: path
          description: The internal name of the list.
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: The ID of the list item.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          You need to provide at least one of: <b>name</b> or <b>parentId</b>. Providing a name will rename the list
          item value. Providing the parent ID will move the hierarchy list item (together with its children) under the
          indicated parent node.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the item.
                parentId:
                  type: integer
                  description: ID of the new hierarchy parent node.
              x-readme-ref-name: UpdateListItemRequest
        required: true
      responses:
        '200':
          description: List item was updated successfully.
          content: {}
        '404':
          description: If the list or item was not found.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /company/people/fields/{fieldId}:
    delete:
      tags:
        - Metadata
      summary: Delete an existing field.
      parameters:
        - name: fieldId
          in: path
          description: The ID of the field.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The field was deleted successfully.
          content: {}
        '400':
          description: If the field is a Bob default field.
          content: {}
        '404':
          description: If the field doesn't exist
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - Metadata
      summary: Update an existing field
      parameters:
        - name: fieldId
          in: path
          description: The ID of the field.
          required: true
          schema:
            type: string
      requestBody:
        description: The new name and/or description of the updated field.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the field.
                description:
                  type: string
                  description: The description of the field.
              x-readme-ref-name: UpdateFieldRequest
        required: true
      responses:
        '200':
          description: The field was updated successfully.
          content: {}
        '404':
          description: If the field doesn't exist.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /company/named-lists/{listName}:
    get:
      tags:
        - Metadata
      summary: Get a specific company list by name.
      parameters:
        - name: listName
          in: path
          description: The internal name of the list.
          required: true
          schema:
            type: string
        - name: includeArchived
          in: query
          description: Whether to include archived items in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response. Please note that the item ID may be textual or numeric depending on the list type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the list
                  items:
                    type: array
                    description: The elements in the list.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Internal ID of the item.
                        value:
                          type: string
                          description: Value of the item.
                        name:
                          type: string
                          description: Name of the item.
                        archived:
                          type: boolean
                          description: Whether the item is archived (not available for selection).
                        children:
                          type: array
                          description: Nested items - if the list is nested.
                          items:
                            oneOf:
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                  value:
                                    type: string
                                  name:
                                    type: string
                                  archived:
                                    type: boolean
                                  children:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                        value:
                                          type: string
                                        name:
                                          type: string
                                        archived:
                                          type: boolean
                                x-readme-ref-name: NestedListItem
                      x-readme-ref-name: ListItem
                x-readme-ref-name: List
        '404':
          description: If the list was not found.
          content: {}
      security:
        - Basic: []
    post:
      tags:
        - Metadata
      summary: Add a new item to an existing list.
      parameters:
        - name: listName
          in: path
          description: The internal name of the list.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          The <b>parentId</b> attribute is optional and only applies to hierarchy lists. When <b>parentId</b> is
          specified, the newly created list item will be placed under the specific hierarchy parent node.
        content:
          application/json:
            schema:
              required:
                - name
              type: object
              properties:
                name:
                  type: string
                  description: Name of the item.
                parentId:
                  type: integer
                  description: ID of the new hierarchy parent node.
              x-readme-ref-name: NewListItem
        required: true
      responses:
        '200':
          description: >-
            A new item is created. Please note that the ID of the newly created item may be textual or numeric depending
            on the list type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the list item.
                x-readme-ref-name: FlatListItemId
        '404':
          description: If the list was not found.
          content: {}
        '409':
          description: If the added item already exists
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /company/named-lists:
    get:
      tags:
        - Metadata
      summary: Get all company lists
      parameters:
        - name: includeArchived
          in: query
          description: Whether to include archived items in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the list
                    items:
                      type: array
                      description: The elements in the list.
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Internal ID of the item.
                          value:
                            type: string
                            description: Value of the item.
                          name:
                            type: string
                            description: Name of the item.
                          archived:
                            type: boolean
                            description: Whether the item is archived (not available for selection).
                          children:
                            type: array
                            description: Nested items - if the list is nested.
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                    value:
                                      type: string
                                    name:
                                      type: string
                                    archived:
                                      type: boolean
                                    children:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: integer
                                          value:
                                            type: string
                                          name:
                                            type: string
                                          archived:
                                            type: boolean
                                  x-readme-ref-name: NestedListItem
                        x-readme-ref-name: ListItem
                  x-readme-ref-name: List
                x-readme-ref-name: Lists
      security:
        - Basic: []
  /company/people/fields:
    get:
      tags:
        - Metadata
      summary: Get all employee fields.
      description: >-
        This endpoint retrieves only metadata about the employee fields and includes all employee fields. Calling this
        endpoint does not require any permissions for the service user performing this action. <br/><br/>However,
        fetching the actual data requires setting the relevant permissions for the service user, including permissions
        to access employee data and relevant categories. <br />To learn more, see  <a
        href="https://apidocs.hibob.com/reference/post_people-search">Search for employees</a> .
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of the field.
                    categoryId:
                      type: string
                      description: ID of the field category.
                    categoryDisplayName:
                      type: string
                      description: Display name of the field category.
                    category:
                      type: string
                      description: To be deprecated. Use categoryId instead.
                    name:
                      type: string
                      description: Name of the field.
                    description:
                      type: string
                      description: Description of the field.
                    jsonPath:
                      type: string
                      description: >-
                        A dot-separated path of this field value in the employee JSON returned by the /v1/profiles
                        endpoint.
                    type:
                      type: string
                      description: >-
                        The type of the field. Supported field types: text, text-area, number, date, list, multi-list,
                        hierarchy-list, currency, employee-reference, document.
                    typeData:
                      type: object
                      properties:
                        listId:
                          type: string
                          description: The ID of the list in the /v1/company/named-lists endpoint.
                    historical:
                      type: boolean
                      description: >-
                        When true, this field keeps the history of its values, each being active starting from a certain
                        date. The default value is false.
                  x-readme-ref-name: Field
                x-readme-ref-name: Fields
      security:
        - Basic: []
    post:
      tags:
        - Metadata
      summary: Create a new field.
      requestBody:
        description: The field to be created.
        content:
          application/json:
            schema:
              required:
                - category
                - name
                - type
              type: object
              properties:
                name:
                  type: string
                  description: The name of the field.
                category:
                  type: string
                  description: The category of the field.
                type:
                  type: string
                  description: >-
                    The type of field. Supported field types: text, text-area, number, date, list, multi-list,
                    hierarchy-list, currency, employee-reference, document.
                description:
                  type: string
                  description: The description of the field.
                historical:
                  type: boolean
                  default: false
                  description: >-
                    When true, this field keeps the history of its values, each being active starting from a certain
                    date. The default value is false.
              x-readme-ref-name: CreateFieldRequest
        required: true
      responses:
        '200':
          description: The new field was successfully created. The ID of the field is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the field.
                x-readme-ref-name: FieldId
        '400':
          description: >-
            If the category of the field is root, or historical is set to true, but the category doesn't allow it, or if
            the field type is not supported.
          content: {}
        '404':
          description: If the category of the field doesn't exist
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /onboarding/wizards:
    get:
      tags:
        - Onboarding
      summary: Get a summary of all onboarding wizards.
      description: Wizard info includes Wizard ID, name and description.<br /><b>Supported user types:</b> Service.
      responses:
        '200':
          description: Onboarding Wizards
          content:
            application/json:
              schema:
                type: object
                properties:
                  wizards:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          format: long
                        name:
                          type: string
                      x-readme-ref-name: OnboardingWizard
                x-readme-ref-name: OnboardingWizards
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /avatars/{employeeId}:
    get:
      tags:
        - People
      summary: Read avatar for an employee ID.
      description: Returns the avatar image URL of the employee.
      parameters:
        - name: employeeId
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: URL of the employee avatar.
          content: {}
      security:
        - Basic: []
    put:
      tags:
        - People
      summary: Upload employee's avatar by image url
      description: Upload an employee's Avatar by providing a URL to the image to upload.<br />
      parameters:
        - name: employeeId
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - url
              type: object
              properties:
                url:
                  type: string
                  description: The URL of the source of the avatar image.
              x-readme-ref-name: UploadAvatar
        required: true
      responses:
        '200':
          description: Avatar Uploaded successfully
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /avatars:
    get:
      tags:
        - People
      summary: Read avatar for an employee email
      description: Returns the avatar image URL of the employee.
      parameters:
        - name: email
          in: query
          description: Employee email.
          schema:
            type: string
            format: string
      responses:
        '200':
          description: URL of the employee avatar.
          content: {}
      security:
        - Basic: []
  /profiles:
    get:
      tags:
        - People
      summary: Read the public profile section of all active employees.
      description: >-
        <p>Returns a predefined list of fields for all active employees the service user can access. Refer to the '200'
        response for the response schema. </p> <p>     Ensure the service user has the necessary permissions to access
        all the users and fields you want to retrieve, including the vasic default fields permissions.  <p>Explore the
        <a href="https://apidocs.hibob.com/reference/people">People API</a> main reference page for information about
        rate limits, permissions, troubleshooting and more. </p>
      responses:
        '200':
          description: Employee profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: A unique identifier representing a specific employee.
                        firstName:
                          type: string
                          description: Employee's first name.
                        surname:
                          type: string
                          description: Employee's surname.
                        email:
                          type: string
                          description: Employee's email address.
                          format: email
                        displayName:
                          type: string
                          description: The employee's display name. This defaults to first name & last name but can be customized.
                        personal:
                          type: object
                          properties:
                            honorific:
                              type: string
                              description: The employee's title, This can be Mr, Mrs. Ms. etc.
                            shortBirthDate:
                              type: string
                            nationality:
                              description: A list of countries in which the employee has citizenship.
                              type: array
                              items:
                                type: string
                            pronouns:
                              type: string
                              description: One of Male / Female.
                          x-readme-ref-name: PersonalPart
                        about:
                          type: object
                          properties:
                            avatar:
                              type: string
                              description: Image URL of the employee's avatar.
                            hobbies:
                              type: array
                              description: An array of the employee's hobbies.
                              items:
                                type: string
                            foodPreferences:
                              type: array
                              description: An array of the employee's food preferences.
                              items:
                                type: string
                            socialData:
                              type: object
                              description: Employee's social data.
                              properties:
                                linkedin:
                                  type: string
                                twitter:
                                  type: string
                                facebook:
                                  type: string
                            superpowers:
                              type: string
                              description: Employee's super powers.
                          x-readme-ref-name: AboutPart
                        work:
                          type: object
                          properties:
                            shortStartDate:
                              type: string
                              description: The employee's employment start date without the year
                              format: date
                            startDate:
                              type: string
                              description: The employee's employment start date without the year
                              format: date
                            manager:
                              type: string
                              description: The full name of the employee's manager.
                            tenureDuration:
                              type: object
                              description: The tenure duration of the employee.
                              properties:
                                periodISO:
                                  type: string
                                sortFactor:
                                  type: number
                                humanize:
                                  type: string
                            custom:
                              description: The custom fields of the employee.
                              type: array
                              items:
                                type: string
                            durationOfEmployment:
                              type: object
                              description: The tenure duration of employment of the employee.
                              properties:
                                periodISO:
                                  type: string
                                sortFactor:
                                  type: number
                                humanize:
                                  type: string
                            reportsToIdInCompany:
                              type: number
                              description: The ID in company of the manager.
                            employeeIdInCompany:
                              type: number
                              description: The ID of the manager.
                            reportsTo:
                              type: object
                              description: The full name of the person the employee reports to.
                              properties:
                                displayName:
                                  type: string
                                email:
                                  type: string
                                surname:
                                  type: string
                                firstName:
                                  type: string
                                id:
                                  type: string
                            workMobile:
                              type: string
                              description: The work mobile number.
                            workPhone:
                              type: string
                              description: The work phone number.
                            indirectReports:
                              type: number
                              description: The person this employee reports to indirectly.
                            siteID:
                              type: number
                              description: The ID of the site the employee belongs to.
                            tenureDurationYears:
                              type: number
                              description: The tenture duration in years.
                            department:
                              type: string
                              description: The department this employee belong to.
                            tenureYears:
                              type: number
                              description: The tenture in years.
                            isManager:
                              type: string
                              description: Is the employee a manager (Yes/No).
                            title:
                              type: string
                              description: The employee's title.
                            site:
                              type: string
                              description: The employee's site.
                            originalStartDate:
                              type: string
                              description: The original date the employee started to work
                            activeEffectiveDate:
                              type: string
                              description: The active effective date the employee started to work
                            directReports:
                              type: number
                              description: The internal ID of the person this employee reports to directly
                            secondLevelManager:
                              type: string
                              description: The ID of the manager in the second level
                            daysOfPreviousService:
                              type: number
                              description: The number of days in previous service
                            yearsOfService:
                              type: number
                              description: The number of years in service
                          x-readme-ref-name: WorkPartMachineFormat
                      x-readme-ref-name: EmployeeProfile
                x-readme-ref-name: EmployeesProfiles
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /employees/{employeeId}/invitations:
    post:
      tags:
        - People
      summary: Invite an employee with a welcome wizard ID.
      description: >-
        <p>Explore the <a href="https://apidocs.hibob.com/reference/people">People API</a> main reference page for
        information about rate limits, permissions, troubleshooting and more.</p>
      parameters:
        - name: employeeId
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. <br> For
            example, if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy
            the "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - welcomeWizardId
              type: object
              properties:
                welcomeWizardId:
                  type: integer
                  description: The Welcome wizard ID.
              x-readme-ref-name: InvitationByWizard
        required: true
      responses:
        '200':
          description: Invitation submitted successfully.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /employees/{employeeId}/start-date:
    post:
      tags:
        - People
      summary: Set or update an employee's start date.
      description: >-
        <p>Explore the <a href="https://apidocs.hibob.com/reference/people">People API</a> main reference page for
        information about rate limits, permissions, troubleshooting and more.</p>
      parameters:
        - name: employeeId
          in: path
          description: >-
            The backend-id of the Employee. Retrieve this ID from the database. <br> For testing purposes, you can pull
            it from the URL in Bob when viewing the employee.  For example, if the URL in Bob is
            "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - startDate
              type: object
              properties:
                startDate:
                  type: string
                  description: The date this entry becomes effective.
                  format: date
                reason:
                  type: string
                  description: Additional info for the start date update.
              x-readme-ref-name: StartDateUpdate
        required: true
      responses:
        '200':
          description: Start date was set successfully.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /employees/{identifier}/terminate:
    post:
      tags:
        - People
      summary: Terminate company employee.
      description: >-
        This changes the employee’s status to Terminated according to specified termination date. <br /> <p>Explore the
        <a href="https://apidocs.hibob.com/reference/people">People API</a> main reference page for information about
        rate limits, permissions, troubleshooting and more.</p>
      parameters:
        - name: identifier
          in: path
          description: >-
            The backend-id of the Employee. Retrieve this ID from the database. <br> For testing purposes, you can pull
            it from the URL in Bob when viewing the employee.  For example, if the URL in Bob is
            "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - terminationDate
              type: object
              properties:
                terminationDate:
                  type: string
                  description: The employee's termination date
                  format: date
                terminationReason:
                  type: string
                  description: The ID of the 'terminationReason' list entry
                reasonType:
                  type: string
                  description: The ID of the 'lifecycleReasonType' list entry
                noticePeriod:
                  type: object
                  properties:
                    unit:
                      type: string
                      enum:
                        - days
                        - weeks
                        - month
                        - years
                    length:
                      type: integer
                  description: Notice period length
                lastDayOfWork:
                  type: string
                  format: date
              example:
                terminationDate: '2025-09-23'
                noticePeriod:
                  unit: days
                  length: 30
                lastDayOfWork: '2025-09-22'
                terminationReason: Redundant
                reasonType: End of Contract
              x-readme-ref-name: EmployeeTermination
        required: true
      responses:
        '200':
          description: Termination entry added successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /employees/{identifier}/uninvite:
    post:
      tags:
        - People
      summary: Revoke access to Bob for an employee.
      description: >-
        <p>Explore the <a href="https://apidocs.hibob.com/reference/people">People API</a> main reference page for
        information about rate limits, permissions, troubleshooting and more.</p>
      parameters:
        - name: identifier
          in: path
          description: >-
            The backend-id of the Employee. Retrieve this ID from the database.  For testing purposes, you can pull it
            from the URL in Bob when viewing the employee.  For example, if the URL in Bob is
            "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Revoke access successful.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /people/{identifier}:
    post:
      tags:
        - People
      summary: Read company employee fields by employee ID.
      description: >-
        This endpoint allows you to retrieve employee data based on specified criteria. <br>Please note that this
        endpoint requires body parameters, which is why it utilizes a POST request for a read operation. <p>**Before
        using this endpoint:**</p> <ol> <li>**Explore the <a href="https://apidocs.hibob.com/reference/people">People
        API</a> main reference page** for information about rate limits, permissions, troubleshooting and more.</li>
        <li>**Note that only employee fields are supported**. Table entries cannot be retrieved via this endpoint. Use
        <a href="https://apidocs.hibob.com/reference/employee-tables">Employee Tables</a> endpoints for this.</li>
        <li>**Default fields**. If no specific fields are requested, a **default set** of fields will be returned, as
        listed in the 200 response, based on the service user permissions. If you want to retrieve other fields, you
        will need to specify their field id in the body parameters.</li>  <li>**Custom fields**. To retrieve custom
        fields you need to specify their field id in the body parameters and ensure you have the approriate permissions
        to the category. </li>  <li>**Position** fields cannot be retrieved using this endpoint. To pull 'Positions',
        use the <a href="https://apidocs.hibob.com/reference/workforce-planning">Workforce Planning endpoints.</a></li>
        </ol> </p> <p>**Testing notes**:<br /> <ol> <li>Use the testing widget's **Try It!** option to test this
        endpoint.</li> <li>Use the **Examples > Request Example** option to see how to initiate body parameters.</li>
        <li>Explore the response payload using the **Example** in the Response on the right, to understand the
        structure. You can see the response for the human-readable format and for the machine-format (backend IDs).</li>
        </ol> </p>
      parameters:
        - name: identifier
          in: path
          description: >-
            The backend-id of the Employee. Retrieve this ID from the database. <br>  For testing purposes, you can pull
            it from the URL in Bob when viewing the employee.  For example, if the URL in Bob is
            "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the "3332883884017713238".<br>
            Alternaticely you can provide the employee's email address.
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Read request content that allows you to select fields and other options
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    An optional list of fields to be returned in the response. When not specified, a default set of
                    fields and categories are returned including: <li>Basic employee fields like: name, id, avatar URL,
                    creation date, etc.</li> <li>Basic categories:</li>
                      <ul> 
                      <li>About</li>
                      </li>Employment</li>
                      <li>Work</li>
                      </ul>
                    <br />The complete fields schema is described in the 200 response status section.
                  items:
                    type: string
                  example:
                    - root.id
                    - root.firstName
                humanReadable:
                  type: string
                  default: .
                  description: >-
                    A flag that determines the data format to be returned in the response payload. Use this flag to
                    convert "machine format" numeric IDs, such as "1644513820829" to the "human readable" values. <br
                    /><br />Flag values:<br />  <br> <b>If not sent:</b> will return only machine-format values. If you
                    pass an invalid value it will be ignored and consdiered empty.<br> <br> Possible values: <br>  <br>
                    <b>APPEND</b> - include the additional "humanReadable" JSON node in the response. <br>  <br>
                    <b>REPLACE</b> - supply only humanReadable values in the JSON response instead of machine-readable
                    values. <br>
              x-readme-ref-name: ReadSingleEmployeeRequestReference
      responses:
        '200':
          description: Employee
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      oneOf:
                        - title: Human readable only (humanReadable="REPLACE")
                          type: object
                          properties:
                            fullName:
                              type: string
                              description: The full name of the Employee (first name + surname).
                            displayName:
                              type: string
                              description: Employee's display name. This defaults to first name & last name but can be customized.
                            creationDateTime:
                              type: string
                              description: The full timestamp of creation of the Employee.
                            work:
                              anyOf:
                                - type: object
                                  properties:
                                    shortStartDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    startDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    manager:
                                      type: string
                                      description: The full name of the employee's manager.
                                    tenureDuration:
                                      type: string
                                      description: The tenure duration of the employee.
                                    durationOfEmployment:
                                      type: string
                                      description: The tenure duration of the employee.
                                    reportsToIdInCompany:
                                      type: string
                                      description: The ID in company of the manager.
                                    employeeIdInCompany:
                                      type: string
                                      description: The ID of the manager.
                                    reportsTo:
                                      type: string
                                      description: The full name of the person the employee reports to.
                                    tenureDurationYears:
                                      type: string
                                      description: The tenture duration in years.
                                    department:
                                      type: string
                                      description: The department this employee belong to.
                                    siteID:
                                      type: string
                                      description: The ID of the site the employee belongs to.
                                    tenureYears:
                                      type: string
                                      description: The tenture in years.
                                    isManager:
                                      type: string
                                      description: Is the employee a manager (Yes/No).
                                    title:
                                      type: string
                                      description: The employee's title.
                                    site:
                                      type: string
                                      description: The employee's site.
                                    originalStartDate:
                                      type: string
                                      description: The original date the employee started to work
                                    activeEffectiveDate:
                                      type: string
                                      description: The active effective date the employee started to work
                                    secondLevelManager:
                                      type: string
                                      description: The full name of the manager in the second level
                                    daysOfPreviousService:
                                      type: string
                                      description: The number of days in previous service
                                    yearsOfService:
                                      type: string
                                      description: The number of years in service
                                  x-readme-ref-name: WorkPartReadable
                            avatarUrl:
                              type: string
                              description: The URL of the source of the avatar image.
                            secondName:
                              type: string
                              description: Employee's surname.
                            about:
                              anyOf:
                                - type: object
                                  properties:
                                    foodPreferences:
                                      type: string
                                      description: Employee's food preferences.
                                    superpowers:
                                      type: string
                                      description: Employee's super powers.
                                    hobbies:
                                      type: string
                                      description: A list of the employee's hobbies.
                                    about:
                                      type: string
                                      description: Employee's about sentence.
                                    avatar:
                                      type: string
                                      description: Image URL of the employee's avatar.
                                  x-readme-ref-name: AboutPartReadable
                            companyId:
                              type: string
                              description: The ID of the employee's company.
                            email:
                              type: string
                              description: Employee's email address.
                              format: email
                            surname:
                              type: string
                              description: Employee's surname.
                            coverImageUrl:
                              type: string
                              description: The URL of the cover image.
                            id:
                              type: string
                              description: A unique identifier representing a specific employee.
                            firstName:
                              type: string
                              description: Employee's first name.
                          x-readme-ref-name: EmployeeResponseReadable
                        - title: Machine format only (humanReadable="")
                          type: object
                          properties:
                            fullName:
                              type: string
                              description: The full name of the Employee (first name + surname).
                            /work/indirectReports:
                              type: array
                              description: The internal IDs of the people the Employee reports to indirectly.
                              items:
                                type: string
                            /about/avatar:
                              type: object
                              description: The avatar URL of the employee.
                              properties:
                                value:
                                  type: string
                            /work/reportsTo/email:
                              type: object
                              description: The email of the person the employee reports to.
                              properties:
                                value:
                                  type: string
                            displayName:
                              type: string
                              description: Employee's display name. This defaults to first name & last name but can be customized.
                            /root/firstName:
                              type: object
                              description: The first name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/employeeIdInCompany:
                              type: object
                              description: The internal ID of the employee.
                              properties:
                                value:
                                  type: number
                            /work/tenureDurationYears:
                              type: object
                              description: The tenure duration in exact years of the employee.
                              properties:
                                value:
                                  type: number
                            /about/foodPreferences:
                              type: object
                              description: The food preferences of the employee.
                              properties:
                                value:
                                  type: string
                            /work/site:
                              type: object
                              description: The site name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/tenureYears:
                              type: object
                              description: The tenure duration in years of the employee (rounded value).
                              properties:
                                value:
                                  type: string
                            creationDateTime:
                              type: string
                              description: The full timestamp of creation of the Employee.
                            hobbies:
                              type: object
                              properties:
                                value:
                                  type: array
                                  description: An array of the employee's hobbies.
                                  items:
                                    type: string
                            /root/email:
                              type: object
                              description: The employee's email.
                              properties:
                                value:
                                  type: string
                            /work/title:
                              type: object
                              description: The employee's title.
                              properties:
                                value:
                                  type: string
                            employee:
                              type: object
                              properties:
                                payrollManager:
                                  type: string
                                hrbp:
                                  type: string
                                itAdmin:
                                  type: string
                                buddy:
                                  type: string
                            work:
                              type: object
                              anyOf:
                                - type: object
                                  properties:
                                    shortStartDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    startDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    manager:
                                      type: string
                                      description: The full name of the employee's manager.
                                    tenureDuration:
                                      type: object
                                      description: The tenure duration of the employee.
                                      properties:
                                        periodISO:
                                          type: string
                                        sortFactor:
                                          type: number
                                        humanize:
                                          type: string
                                    custom:
                                      description: The custom fields of the employee.
                                      type: array
                                      items:
                                        type: string
                                    durationOfEmployment:
                                      type: object
                                      description: The tenure duration of employment of the employee.
                                      properties:
                                        periodISO:
                                          type: string
                                        sortFactor:
                                          type: number
                                        humanize:
                                          type: string
                                    reportsToIdInCompany:
                                      type: number
                                      description: The ID in company of the manager.
                                    employeeIdInCompany:
                                      type: number
                                      description: The ID of the manager.
                                    reportsTo:
                                      type: object
                                      description: The full name of the person the employee reports to.
                                      properties:
                                        displayName:
                                          type: string
                                        email:
                                          type: string
                                        surname:
                                          type: string
                                        firstName:
                                          type: string
                                        id:
                                          type: string
                                    workMobile:
                                      type: string
                                      description: The work mobile number.
                                    workPhone:
                                      type: string
                                      description: The work phone number.
                                    indirectReports:
                                      type: number
                                      description: The person this employee reports to indirectly.
                                    siteID:
                                      type: number
                                      description: The ID of the site the employee belongs to.
                                    tenureDurationYears:
                                      type: number
                                      description: The tenture duration in years.
                                    department:
                                      type: string
                                      description: The department this employee belong to.
                                    tenureYears:
                                      type: number
                                      description: The tenture in years.
                                    isManager:
                                      type: string
                                      description: Is the employee a manager (Yes/No).
                                    title:
                                      type: string
                                      description: The employee's title.
                                    site:
                                      type: string
                                      description: The employee's site.
                                    originalStartDate:
                                      type: string
                                      description: The original date the employee started to work
                                    activeEffectiveDate:
                                      type: string
                                      description: The active effective date the employee started to work
                                    directReports:
                                      type: number
                                      description: The internal ID of the person this employee reports to directly
                                    secondLevelManager:
                                      type: string
                                      description: The ID of the manager in the second level
                                    daysOfPreviousService:
                                      type: number
                                      description: The number of days in previous service
                                    yearsOfService:
                                      type: number
                                      description: The number of years in service
                                  x-readme-ref-name: WorkPartMachineFormat
                            avatarUrl:
                              type: string
                              description: The URL of the source of the avatar image.
                            secondName:
                              type: string
                              description: Employee's surname.
                            about:
                              type: object
                              anyOf:
                                - type: object
                                  properties:
                                    foodPreferences:
                                      type: object
                                      description: Employee's food preferences.
                                      items:
                                        type: string
                                    socialData:
                                      type: object
                                      description: Employee's social data.
                                      properties:
                                        linkedin:
                                          type: string
                                        twitter:
                                          type: string
                                        facebook:
                                          type: string
                                    superpowers:
                                      type: array
                                      description: Employee's super powers.
                                      items:
                                        type: string
                                    hobbies:
                                      type: array
                                      description: A list of the employee's hobbies.
                                      items:
                                        type: string
                                    about:
                                      type: string
                                      description: Employee's about sentence.
                                    avatar:
                                      type: string
                                      description: Image URL of the employee's avatar.
                                  x-readme-ref-name: AboutPartMachineFormat
                            /root/fullName:
                              type: object
                              description: The employee's full name.
                              properties:
                                value:
                                  type: string
                            companyId:
                              type: number
                              description: The ID of the employee's company.
                            /root/coverImageUrl:
                              type: object
                              description: The employee's cover image.
                              properties:
                                value:
                                  type: string
                            /work/secondLevelManager:
                              type: object
                              description: The ID of the second level manager of the employee.
                              properties:
                                value:
                                  type: string
                            /work/directReports:
                              type: object
                              description: The number of people the employee reports to directly.
                              properties:
                                value:
                                  type: number
                            /work/yearsOfService:
                              type: object
                              description: The number of years the employee has been in service.
                              properties:
                                value:
                                  type: number
                            /work/daysOfPreviousService:
                              type: object
                              description: The number of years the employee has been in service previously.
                              properties:
                                value:
                                  type: number
                            /about/about:
                              type: object
                              description: Employee's about sentence.
                              properties:
                                value:
                                  type: string
                            /root/avatarUrl:
                              type: object
                              description: The url for the avatar file of the employee.
                              properties:
                                value:
                                  type: string
                            /work/shortStartDate:
                              type: object
                              description: The start date of the employee in a short format (without the year).
                              properties:
                                value:
                                  type: string
                            /work/activeEffectiveDate:
                              type: object
                              description: The date the employee bacame active.
                              properties:
                                value:
                                  type: string
                            /root/id:
                              type: object
                              description: The ID of the employee.
                              properties:
                                value:
                                  type: string
                            email:
                              type: string
                              description: Employee's email address.
                              format: email
                            /work/manager:
                              type: object
                              description: The ID of the employee's manager.
                              properties:
                                value:
                                  type: string
                            surname:
                              type: string
                              description: Employee's surname.
                            /work/reportsTo:
                              type: object
                              description: The details of the person the employee reports to.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    displayName:
                                      type: string
                                    email:
                                      type: string
                                    surname:
                                      type: string
                                    firstName:
                                      type: string
                                    id:
                                      type: string
                            /root/companyId:
                              type: object
                              description: The ID of the employee's company.
                              properties:
                                value:
                                  type: number
                            /root/displayName:
                              type: object
                              description: The display name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/department:
                              type: object
                              description: The department of the employee.
                              properties:
                                value:
                                  type: string
                            /work/isManager:
                              type: object
                              description: The department of the employee.
                              properties:
                                value:
                                  type: boolean
                            /work/originalStartDate:
                              type: object
                              description: The original date the employee started work.
                              properties:
                                value:
                                  type: string
                            coverImageUrl:
                              type: string
                              description: The URL of the cover image.
                            /work/reportsToIdInCompany:
                              type: object
                              description: The ID of the person this employee reports to.
                              properties:
                                value:
                                  type: number
                            /work/tenureDuration:
                              type: object
                              description: The tenture duration of the employee.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    periodISO:
                                      type: string
                                    sortFactor:
                                      type: number
                                    humanize:
                                      type: string
                            /about/superpowers:
                              type: object
                              description: The super powers of the employee.
                              properties:
                                value:
                                  type: array
                                  items:
                                    type: string
                            id:
                              type: string
                              description: A unique identifier representing a specific employee.
                            firstName:
                              type: string
                              description: Employee's first name.
                            /work/siteId:
                              type: object
                              description: The site ID of the employee's site.
                              properties:
                                value:
                                  type: number
                            /work/durationOfEmployment:
                              type: object
                              description: The duration of the employee's employment.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    periodISO:
                                      type: string
                                    sortFactor:
                                      type: number
                                    humanize:
                                      type: string
                          x-readme-ref-name: EmployeeResponseMachineFormat
                x-readme-ref-name: Employees
              examples:
                EmployeeResponseReadableExample:
                  summary: Human readable format only (humanReadable="REPLACE")
                  value:
                    employees:
                      - fullName: example
                      - displayName: example
                      - creationDateTime: '2024-03-27T09:12:21.680867'
                      - work:
                          shortStartDate: 01/05
                          startDate: 01/05/2015
                          manager: example
                          tenureDuration: 9 years, 1 month and 26 days
                          durationOfEmployment: 9 years, 1 month and 26 days
                          reportsToIdInCompany: '30'
                          employeeIdInCompany: '40'
                          reportsTo: example
                          tenureDurationYears: '9.155'
                          department: Client Services
                          siteId: example
                          tenureYears: '9'
                          isManager: 'No'
                          title: Account Manager
                          site: example
                          originalStartDate: 01/05/2015
                          activeEffectiveDate: 01/05/2015
                          secondLevelManager: v
                          daysOfPreviousService: '0'
                          yearsOfService: '9.155'
                      - avatarUrl: string URL
                      - secondName: example
                      - about:
                          foodPreferences: ''
                          superpowers: pitching,copywriting
                          hobbies: Rugby,Cycling,Running
                          about: string
                          avatar: string URL
                      - companyId: '636192'
                      - email: example@samplebob.com
                      - surname: Tullin
                      - coverImageUrl: string URL
                      - id: '3332883884017713938'
                      - firstName: example
                EmployeeResponseMachineFormatExample:
                  summary: Machine format only (humanReadable="")
                  value:
                    employees:
                      - fullName: v
                      - /work/indirectReports:
                          value: 33
                      - /about/avatar:
                          string URL: null
                      - /work/reportsTo/email:
                          value: example@samplebob.com
                      - displayName: example
                      - /root/firstName:
                          value: Amy
                      - /work/employeeIdInCompany:
                          value: 39
                      - /work/tenureDurationYears:
                          value: 9.273
                      - /about/foodPreferences:
                          value:
                            - vegan
                      - /work/site:
                          value: example
                      - /work/tenureYears:
                          value: 9
                      - creationDateTime: '2024-03-27T09:12:25.002884'
                      - /about/hobbies:
                          value:
                            - yoga
                            - cooking
                            - '261314348'
                      - /root/email:
                          value: example@samplebob.com
                      - /work/title:
                          value: Designer
                      - employee:
                          payrollManager: null
                          hrbp: null
                          itAdmin: null
                          buddy: null
                      - work:
                          shortStartDate: 03-20
                          startDate: '2015-03-20'
                          manager: '3332883909410030364'
                          tenureDuration:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                          custom:
                            field_1711886937296: null
                          durationOfEmployment:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                          reportsToIdInCompany: 1
                          employeeIdInCompany: 39
                          reportsTo:
                            displayName: v
                            email: example@samplebob.com
                            surname: example
                            firstName: example
                            id: '3332883909410030364'
                          indirectReports: 33
                          siteId: 2510068
                          tenureDurationYears: 9.273
                          department: Product
                          tenureYears: 9
                          isManager: true
                          title: Designer
                          site: example
                          originalStartDate: '2015-03-20'
                          activeEffectiveDate: '2015-03-20'
                          directReports: 1
                          secondLevelManager: '3332883848206746373'
                          daysOfPreviousService: 0
                          yearsOfService: 9.273
                      - /root/creationDateTime:
                          value: '2024-03-27T09:12:25.002884'
                      - secondName: null
                      - avatarUrl: string URL
                      - /work/startDate:
                          value: '2015-03-20'
                      - about:
                          foodPreferences:
                            - vegan
                          socialData:
                            linkedin: null
                            twitter: null
                            facebook: null
                          superpowers:
                            - excel
                          hobbies:
                            - yoga
                            - cooking
                            - '261314348'
                          about: string
                          avatar: string URL
                      - /root/fullName:
                          value: example
                      - companyId: 636192
                      - /root/coverImageUrl:
                          value: string URL
                      - /work/secondLevelManager:
                          value: '3332883848206746373'
                      - /work/directReports:
                          value: 1
                      - /work/yearsOfService:
                          value: 9.273
                      - /work/daysOfPreviousService:
                          value: 0
                      - /about/about:
                          value: string
                      - /root/avatarUrl:
                          value: string URL
                      - /root/surname:
                          value: example
                      - /work/shortStartDate:
                          value: 03-20
                      - /work/activeEffectiveDate:
                          value: '2015-03-20'
                      - /root/id:
                          value: '3332883911884669725'
                      - email: amy.miles_636192@samplebob.com
                      - /work/manager:
                          value: '3332883909410030364'
                      - surname: example
                      - /work/reportsTo:
                          value:
                            displayName: Zoe Clark
                            email: zoe.clark_636192@samplebob.com
                            surname: Clark
                            firstName: Zoe
                            id: '3332883909410030364'
                      - /root/companyId:
                          value: 636192
                      - /root/displayName:
                          value: example
                      - /work/department:
                          value: Product
                      - /work/isManager:
                          value: true
                      - /work/originalStartDate:
                          value: '2015-03-20'
                      - coverImageUrl: string URL
                      - /work/reportsToIdInCompany:
                          value: 1
                      - /work/tenureDuration:
                          value:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                      - /about/superpowers:
                          value:
                            - excel
                      - id: '3332883911884669725'
                      - firstName: example
                      - /work/siteId:
                          value: 2510068
                      - /work/durationOfEmployment:
                          value:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
        '400':
          description: Bad request. The request contains incorrect parameters or syntax errors. Please review the request body
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
        '429':
          description: >-
            "Too Many Requests" error. This indicates that you've exceeded the rate limit for requests. Please verify
            that you are using the correct endpoint with the POST method. Additionally, check the HTTP headers for rate
            limit information, such as the number of requests allowed and the time until the limit resets. For more
            details, see <a href="https://apidocs.hibob.com/docs/rate-limit" target="_blank">Rate Limiting</a>.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
    put:
      tags:
        - People
      summary: Update company employee.
      description: >-
        This endpoint allows you to update specific fields in an employee's record in Bob. <br /><br />**Important**:
        Although this is a PUT method, it behaves like a PATCH request—you only need to send the fields you want to
        update, and any other fields will remain unchanged. <br /> <br /> **Before using this endpoint**, read the
        instructions on how to update employee data. You can find them here: <a
        href="https://apidocs.hibob.com/docs/update-employee-data">Update Employee data</a>. <br /><br />**Notes**: <ol>
        <li>Only employee **fields** are supported; table updates are not allowed via this endpoint.</li>
        <li>**Position** fields cannot be updated using this endpoint.</li> </ol>
      parameters:
        - name: identifier
          in: path
          description: >-
            The backend-if of the Employee. Retrieve this ID from the database.<br>  For testing purposes, you can pull
            it from the URL in Bob when viewing the employee.  For example, if the URL in Bob is
            "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: >-
          Use <a href="https://apidocs.hibob.com/reference/get_company-people-fields">Fields Metadata API</a> for
          available field definitions.
        content:
          application/json:
            schema:
              description: >-
                Specify the field IDs you want to update, and their values. <br /> Ensure to specify the field ID in the
                correct format - you can copy the correct format from the result of the People Search endpoint. Please
                read the instructions here: <a href="https://apidocs.hibob.com/docs/update-employee-data">Update
                Employee data</a>.  <br><br> **Important note**: We recommend testing this endpoint using an external
                tool, such as Postman, rather than the 'Try It!' feature in the documentation. This is because the
                parameters need to be constructed in a specific format. The easiest way to do this is by copying the
                parameter structure from the 'Search' endpoint's response. <br><br> For example:<br> {<br>
                    "home": {<br>  
                        "mobilePhone": "63635356"<br>
                },<br><br>
                    "firstName": "Jacky"<br>
                }
              type: object
              example:
                firstName: Bob
                personal:
                  birthDate: '2002-01-01'
                about:
                  hobbies:
                    - music
                    - travel
                    - sport
        required: true
      responses:
        '200':
          description: Employee record was updated successfully.
          content: {}
        '304':
          description: >-
            Returned when employee data has not been modified. Ensure that the data being sent is new and that the
            correct field ID and JSON structure are being used.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /people/search:
    post:
      tags:
        - People
      summary: Search for employees
      description: >-
        This endpoint allows you to retrieve employee data based on specified criteria. <br>Please note that this
        endpoint requires body parameters, which is why it utilizes a POST request for a read operation. <p>**Before
        using this endpoint:**</p> <ol> <li>**Explore the <a href="https://apidocs.hibob.com/reference/people">People
        API</a> main reference page** for information about rate limits, permissions, troubleshooting and more.</li>
        <li>**Note that only employee fields are supported**. Table entries cannot be retrieved via this endpoint. Use
        <a href="https://apidocs.hibob.com/reference/employee-tables">Employee Tables</a> endpoints for this.</li>
        <li>**Default fields**. If no specific fields are requested, a **default set** of fields will be returned, as
        listed in the 200 response, based on the service user permissions. If you want to retrieve other fields, you
        will need to specify their field id in the body parameters.</li>  <li>**Custom fields**. To retrieve custom
        fields you need to specify their field id in the body parameters and ensure you have the approriate permissions
        to the category. </li>  <li>**Position** fields cannot be retrieved using this endpoint. To pull 'Positions',
        use the <a href="https://apidocs.hibob.com/reference/workforce-planning">Workforce Planning endpoints.</a></li>
        </ol> </p> <p>**Testing notes**:<br /> <ol> <li>Use the testing widget's **Try It!** option to test this
        endpoint.</li> <li>Use the **Examples > Request Example** option to see how to initiate body parameters.</li>
        <li>Explore the response payload using the **Example** in the Response on the right, to understand the
        structure. You can see the response for the human-readable format and for the machine-format (backend IDs).</li>
        </ol> </p>
      requestBody:
        description: Read request content that allows you to select fields and other options
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    An optional list of fields to be returned in the response. When not specified, a default set of
                    fields and categories are returned including: <li>Basic employee fields like: name, id, avatar URL,
                    creation date, etc.</li> <li>Basic categories:</li>
                      <ul> 
                      <li>About</li>
                      </li>Employment</li>
                      <li>Work</li>
                      </ul>
                    <br />The complete fields schema is described in the 200 response status section.
                  items:
                    type: string
                  example:
                    - root.id
                    - root.firstName
                filters:
                  type: array
                  description: >-
                    An optional filter based on a field and a condition to filter the results. We currently support
                    passing only a single filter. Use this to filter which employees to return. If not provided, will
                    return data of all the employees that can be accessed by this service user. <br />
                  items:
                    type: object
                    properties:
                      fieldPath:
                        type: string
                        example: root.id
                        description: >-
                          The field id to filter by. <br /> Supported fields: “root.id”, "root.email". <br />Any other
                          field id will get a response of 400 HTTP error.
                      operator:
                        type: string
                        example: equals
                        description: 'Supported operators: “equals” <br /> Any other operator will get a response of 400 HTTP error.'
                      values:
                        type: array
                        description: The list of values to compare with the operator. An Empty list will result in 400 HTTP error.
                        items:
                          type: string
                        example:
                          - <employee Id1>
                          - <employee Id2>
                    x-readme-ref-name: EmployeeFilter
                showInactive:
                  type: boolean
                  default: false
                  description: >-
                    <br>Optional field. <br>Default value = false. <br>Defines whether response should include inactive
                    employees.
                humanReadable:
                  type: string
                  default: ''
                  description: >-
                    A flag that determines the data format to be returned in the response payload. Use this flag to
                    convert "machine format" numeric IDs, such as "1644513820829" to the "human readable" values. <br
                    /><br />Flag values:<br />  <br> <b>If not sent:</b> will return only machine-format values. If you
                    pass an invalid value it will be ignored and consdiered empty.<br> <br> Possible values: <br>  <br>
                    <b>APPEND</b> - include the additional "humanReadable" JSON node in the response. <br>  <br>
                    <b>REPLACE</b> - supply only humanReadable values in the JSON response instead of machine-readable
                    values. <br>
              x-readme-ref-name: ReadEmployeesRequestReference
        required: true
      responses:
        '200':
          description: Employees data response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employees:
                    type: array
                    items:
                      oneOf:
                        - title: Human readable only (humanReadable="REPLACE")
                          type: object
                          properties:
                            fullName:
                              type: string
                              description: The full name of the Employee (first name + surname).
                            displayName:
                              type: string
                              description: Employee's display name. This defaults to first name & last name but can be customized.
                            creationDateTime:
                              type: string
                              description: The full timestamp of creation of the Employee.
                            work:
                              anyOf:
                                - type: object
                                  properties:
                                    shortStartDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    startDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    manager:
                                      type: string
                                      description: The full name of the employee's manager.
                                    tenureDuration:
                                      type: string
                                      description: The tenure duration of the employee.
                                    durationOfEmployment:
                                      type: string
                                      description: The tenure duration of the employee.
                                    reportsToIdInCompany:
                                      type: string
                                      description: The ID in company of the manager.
                                    employeeIdInCompany:
                                      type: string
                                      description: The ID of the manager.
                                    reportsTo:
                                      type: string
                                      description: The full name of the person the employee reports to.
                                    tenureDurationYears:
                                      type: string
                                      description: The tenture duration in years.
                                    department:
                                      type: string
                                      description: The department this employee belong to.
                                    siteID:
                                      type: string
                                      description: The ID of the site the employee belongs to.
                                    tenureYears:
                                      type: string
                                      description: The tenture in years.
                                    isManager:
                                      type: string
                                      description: Is the employee a manager (Yes/No).
                                    title:
                                      type: string
                                      description: The employee's title.
                                    site:
                                      type: string
                                      description: The employee's site.
                                    originalStartDate:
                                      type: string
                                      description: The original date the employee started to work
                                    activeEffectiveDate:
                                      type: string
                                      description: The active effective date the employee started to work
                                    secondLevelManager:
                                      type: string
                                      description: The full name of the manager in the second level
                                    daysOfPreviousService:
                                      type: string
                                      description: The number of days in previous service
                                    yearsOfService:
                                      type: string
                                      description: The number of years in service
                                  x-readme-ref-name: WorkPartReadable
                            avatarUrl:
                              type: string
                              description: The URL of the source of the avatar image.
                            secondName:
                              type: string
                              description: Employee's surname.
                            about:
                              anyOf:
                                - type: object
                                  properties:
                                    foodPreferences:
                                      type: string
                                      description: Employee's food preferences.
                                    superpowers:
                                      type: string
                                      description: Employee's super powers.
                                    hobbies:
                                      type: string
                                      description: A list of the employee's hobbies.
                                    about:
                                      type: string
                                      description: Employee's about sentence.
                                    avatar:
                                      type: string
                                      description: Image URL of the employee's avatar.
                                  x-readme-ref-name: AboutPartReadable
                            companyId:
                              type: string
                              description: The ID of the employee's company.
                            email:
                              type: string
                              description: Employee's email address.
                              format: email
                            surname:
                              type: string
                              description: Employee's surname.
                            coverImageUrl:
                              type: string
                              description: The URL of the cover image.
                            id:
                              type: string
                              description: A unique identifier representing a specific employee.
                            firstName:
                              type: string
                              description: Employee's first name.
                          x-readme-ref-name: EmployeeResponseReadable
                        - title: Machine format only (humanReadable="")
                          type: object
                          properties:
                            fullName:
                              type: string
                              description: The full name of the Employee (first name + surname).
                            /work/indirectReports:
                              type: array
                              description: The internal IDs of the people the Employee reports to indirectly.
                              items:
                                type: string
                            /about/avatar:
                              type: object
                              description: The avatar URL of the employee.
                              properties:
                                value:
                                  type: string
                            /work/reportsTo/email:
                              type: object
                              description: The email of the person the employee reports to.
                              properties:
                                value:
                                  type: string
                            displayName:
                              type: string
                              description: Employee's display name. This defaults to first name & last name but can be customized.
                            /root/firstName:
                              type: object
                              description: The first name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/employeeIdInCompany:
                              type: object
                              description: The internal ID of the employee.
                              properties:
                                value:
                                  type: number
                            /work/tenureDurationYears:
                              type: object
                              description: The tenure duration in exact years of the employee.
                              properties:
                                value:
                                  type: number
                            /about/foodPreferences:
                              type: object
                              description: The food preferences of the employee.
                              properties:
                                value:
                                  type: string
                            /work/site:
                              type: object
                              description: The site name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/tenureYears:
                              type: object
                              description: The tenure duration in years of the employee (rounded value).
                              properties:
                                value:
                                  type: string
                            creationDateTime:
                              type: string
                              description: The full timestamp of creation of the Employee.
                            hobbies:
                              type: object
                              properties:
                                value:
                                  type: array
                                  description: An array of the employee's hobbies.
                                  items:
                                    type: string
                            /root/email:
                              type: object
                              description: The employee's email.
                              properties:
                                value:
                                  type: string
                            /work/title:
                              type: object
                              description: The employee's title.
                              properties:
                                value:
                                  type: string
                            employee:
                              type: object
                              properties:
                                payrollManager:
                                  type: string
                                hrbp:
                                  type: string
                                itAdmin:
                                  type: string
                                buddy:
                                  type: string
                            work:
                              type: object
                              anyOf:
                                - type: object
                                  properties:
                                    shortStartDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    startDate:
                                      type: string
                                      description: The employee's employment start date without the year
                                      format: date
                                    manager:
                                      type: string
                                      description: The full name of the employee's manager.
                                    tenureDuration:
                                      type: object
                                      description: The tenure duration of the employee.
                                      properties:
                                        periodISO:
                                          type: string
                                        sortFactor:
                                          type: number
                                        humanize:
                                          type: string
                                    custom:
                                      description: The custom fields of the employee.
                                      type: array
                                      items:
                                        type: string
                                    durationOfEmployment:
                                      type: object
                                      description: The tenure duration of employment of the employee.
                                      properties:
                                        periodISO:
                                          type: string
                                        sortFactor:
                                          type: number
                                        humanize:
                                          type: string
                                    reportsToIdInCompany:
                                      type: number
                                      description: The ID in company of the manager.
                                    employeeIdInCompany:
                                      type: number
                                      description: The ID of the manager.
                                    reportsTo:
                                      type: object
                                      description: The full name of the person the employee reports to.
                                      properties:
                                        displayName:
                                          type: string
                                        email:
                                          type: string
                                        surname:
                                          type: string
                                        firstName:
                                          type: string
                                        id:
                                          type: string
                                    workMobile:
                                      type: string
                                      description: The work mobile number.
                                    workPhone:
                                      type: string
                                      description: The work phone number.
                                    indirectReports:
                                      type: number
                                      description: The person this employee reports to indirectly.
                                    siteID:
                                      type: number
                                      description: The ID of the site the employee belongs to.
                                    tenureDurationYears:
                                      type: number
                                      description: The tenture duration in years.
                                    department:
                                      type: string
                                      description: The department this employee belong to.
                                    tenureYears:
                                      type: number
                                      description: The tenture in years.
                                    isManager:
                                      type: string
                                      description: Is the employee a manager (Yes/No).
                                    title:
                                      type: string
                                      description: The employee's title.
                                    site:
                                      type: string
                                      description: The employee's site.
                                    originalStartDate:
                                      type: string
                                      description: The original date the employee started to work
                                    activeEffectiveDate:
                                      type: string
                                      description: The active effective date the employee started to work
                                    directReports:
                                      type: number
                                      description: The internal ID of the person this employee reports to directly
                                    secondLevelManager:
                                      type: string
                                      description: The ID of the manager in the second level
                                    daysOfPreviousService:
                                      type: number
                                      description: The number of days in previous service
                                    yearsOfService:
                                      type: number
                                      description: The number of years in service
                                  x-readme-ref-name: WorkPartMachineFormat
                            avatarUrl:
                              type: string
                              description: The URL of the source of the avatar image.
                            secondName:
                              type: string
                              description: Employee's surname.
                            about:
                              type: object
                              anyOf:
                                - type: object
                                  properties:
                                    foodPreferences:
                                      type: object
                                      description: Employee's food preferences.
                                      items:
                                        type: string
                                    socialData:
                                      type: object
                                      description: Employee's social data.
                                      properties:
                                        linkedin:
                                          type: string
                                        twitter:
                                          type: string
                                        facebook:
                                          type: string
                                    superpowers:
                                      type: array
                                      description: Employee's super powers.
                                      items:
                                        type: string
                                    hobbies:
                                      type: array
                                      description: A list of the employee's hobbies.
                                      items:
                                        type: string
                                    about:
                                      type: string
                                      description: Employee's about sentence.
                                    avatar:
                                      type: string
                                      description: Image URL of the employee's avatar.
                                  x-readme-ref-name: AboutPartMachineFormat
                            /root/fullName:
                              type: object
                              description: The employee's full name.
                              properties:
                                value:
                                  type: string
                            companyId:
                              type: number
                              description: The ID of the employee's company.
                            /root/coverImageUrl:
                              type: object
                              description: The employee's cover image.
                              properties:
                                value:
                                  type: string
                            /work/secondLevelManager:
                              type: object
                              description: The ID of the second level manager of the employee.
                              properties:
                                value:
                                  type: string
                            /work/directReports:
                              type: object
                              description: The number of people the employee reports to directly.
                              properties:
                                value:
                                  type: number
                            /work/yearsOfService:
                              type: object
                              description: The number of years the employee has been in service.
                              properties:
                                value:
                                  type: number
                            /work/daysOfPreviousService:
                              type: object
                              description: The number of years the employee has been in service previously.
                              properties:
                                value:
                                  type: number
                            /about/about:
                              type: object
                              description: Employee's about sentence.
                              properties:
                                value:
                                  type: string
                            /root/avatarUrl:
                              type: object
                              description: The url for the avatar file of the employee.
                              properties:
                                value:
                                  type: string
                            /work/shortStartDate:
                              type: object
                              description: The start date of the employee in a short format (without the year).
                              properties:
                                value:
                                  type: string
                            /work/activeEffectiveDate:
                              type: object
                              description: The date the employee bacame active.
                              properties:
                                value:
                                  type: string
                            /root/id:
                              type: object
                              description: The ID of the employee.
                              properties:
                                value:
                                  type: string
                            email:
                              type: string
                              description: Employee's email address.
                              format: email
                            /work/manager:
                              type: object
                              description: The ID of the employee's manager.
                              properties:
                                value:
                                  type: string
                            surname:
                              type: string
                              description: Employee's surname.
                            /work/reportsTo:
                              type: object
                              description: The details of the person the employee reports to.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    displayName:
                                      type: string
                                    email:
                                      type: string
                                    surname:
                                      type: string
                                    firstName:
                                      type: string
                                    id:
                                      type: string
                            /root/companyId:
                              type: object
                              description: The ID of the employee's company.
                              properties:
                                value:
                                  type: number
                            /root/displayName:
                              type: object
                              description: The display name of the employee.
                              properties:
                                value:
                                  type: string
                            /work/department:
                              type: object
                              description: The department of the employee.
                              properties:
                                value:
                                  type: string
                            /work/isManager:
                              type: object
                              description: The department of the employee.
                              properties:
                                value:
                                  type: boolean
                            /work/originalStartDate:
                              type: object
                              description: The original date the employee started work.
                              properties:
                                value:
                                  type: string
                            coverImageUrl:
                              type: string
                              description: The URL of the cover image.
                            /work/reportsToIdInCompany:
                              type: object
                              description: The ID of the person this employee reports to.
                              properties:
                                value:
                                  type: number
                            /work/tenureDuration:
                              type: object
                              description: The tenture duration of the employee.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    periodISO:
                                      type: string
                                    sortFactor:
                                      type: number
                                    humanize:
                                      type: string
                            /about/superpowers:
                              type: object
                              description: The super powers of the employee.
                              properties:
                                value:
                                  type: array
                                  items:
                                    type: string
                            id:
                              type: string
                              description: A unique identifier representing a specific employee.
                            firstName:
                              type: string
                              description: Employee's first name.
                            /work/siteId:
                              type: object
                              description: The site ID of the employee's site.
                              properties:
                                value:
                                  type: number
                            /work/durationOfEmployment:
                              type: object
                              description: The duration of the employee's employment.
                              properties:
                                value:
                                  type: object
                                  properties:
                                    periodISO:
                                      type: string
                                    sortFactor:
                                      type: number
                                    humanize:
                                      type: string
                          x-readme-ref-name: EmployeeResponseMachineFormat
                x-readme-ref-name: Employees
              examples:
                EmployeeResponseReadableExample:
                  summary: human readable only (humanReadable="REPLACE")
                  value:
                    employees:
                      - fullName: example
                      - displayName: example
                      - creationDateTime: '2024-03-27T09:12:21.680867'
                      - work:
                          shortStartDate: 01/05
                          startDate: 01/05/2015
                          manager: example
                          tenureDuration: 9 years, 1 month and 26 days
                          durationOfEmployment: 9 years, 1 month and 26 days
                          reportsToIdInCompany: '30'
                          employeeIdInCompany: '40'
                          reportsTo: example
                          tenureDurationYears: '9.155'
                          department: example
                          siteId: example
                          tenureYears: '9'
                          isManager: 'No'
                          title: example
                          site: example
                          originalStartDate: 01/05/2015
                          activeEffectiveDate: 01/05/2015
                          secondLevelManager: example
                          daysOfPreviousService: '0'
                          yearsOfService: '9.155'
                      - avatarUrl: string URL
                      - secondName: example
                      - about:
                          foodPreferences: ''
                          superpowers: example
                          hobbies: example
                          about: string
                          avatar: string URL
                      - companyId: '636192'
                      - email: example@samplebob.com
                      - surname: example
                      - coverImageUrl: string URL
                      - id: '3332883884017713938'
                      - firstName: example
                EmployeeResponseMachineFormatExample:
                  summary: Machine format only (humanReadable="")
                  value:
                    employees:
                      - fullName: example
                      - /work/indirectReports:
                          value: 33
                      - /about/avatar:
                          string URL: null
                      - /work/reportsTo/email:
                          value: example@samplebob.com
                      - displayName: example
                      - /root/firstName:
                          value: example
                      - /work/employeeIdInCompany:
                          value: 39
                      - /work/tenureDurationYears:
                          value: 9.273
                      - /about/foodPreferences:
                          value:
                            - vegan
                      - /work/site:
                          value: New York (Demo)
                      - /work/tenureYears:
                          value: 9
                      - creationDateTime: '2024-03-27T09:12:25.002884'
                      - /about/hobbies:
                          value:
                            - yoga
                            - cooking
                            - '261314348'
                      - /root/email:
                          value: example@samplebob.com
                      - /work/title:
                          value: Desigexamplener
                      - employee:
                          payrollManager: null
                          hrbp: null
                          itAdmin: null
                          buddy: null
                      - work:
                          shortStartDate: 03-20
                          startDate: '2015-03-20'
                          manager: '3332883909410030364'
                          tenureDuration:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                          custom:
                            field_1711886937296: null
                          durationOfEmployment:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                          reportsToIdInCompany: 1
                          employeeIdInCompany: 39
                          reportsTo:
                            displayName: Zoe Clark
                            email: zoe.clark_636192@samplebob.com
                            surname: Clark
                            firstName: Zoe
                            id: '3332883909410030364'
                          indirectReports: 33
                          siteId: 2510068
                          tenureDurationYears: 9.273
                          department: Product
                          tenureYears: 9
                          isManager: true
                          title: example
                          site: example
                          originalStartDate: '2015-03-20'
                          activeEffectiveDate: '2015-03-20'
                          directReports: 1
                          secondLevelManager: '3332883848206746373'
                          daysOfPreviousService: 0
                          yearsOfService: 9.273
                      - /root/creationDateTime:
                          value: '2024-03-27T09:12:25.002884'
                      - secondName: null
                      - avatarUrl: string URL
                      - /work/startDate:
                          value: '2015-03-20'
                      - about:
                          foodPreferences:
                            - vegan
                          socialData:
                            linkedin: null
                            twitter: null
                            facebook: null
                          superpowers:
                            - excel
                          hobbies:
                            - yoga
                            - cooking
                            - '261314348'
                          about: string
                          avatar: string URL
                      - /root/fullName:
                          value: example
                      - companyId: 636192
                      - /root/coverImageUrl:
                          value: string URL
                      - /work/secondLevelManager:
                          value: '3332883848206746373'
                      - /work/directReports:
                          value: 1
                      - /work/yearsOfService:
                          value: 9.273
                      - /work/daysOfPreviousService:
                          value: 0
                      - /about/about:
                          value: string
                      - /root/avatarUrl:
                          value: string URL
                      - /root/surname:
                          value: example
                      - /work/shortStartDate:
                          value: 03-20
                      - /work/activeEffectiveDate:
                          value: '2015-03-20'
                      - /root/id:
                          value: '3332883911884669725'
                      - email: amy.miles_636192@samplebob.com
                      - /work/manager:
                          value: '3332883909410030364'
                      - surname: Miles
                      - /work/reportsTo:
                          value:
                            displayName: Zoe Clark
                            email: zoe.clark_636192@samplebob.com
                            surname: Clark
                            firstName: Zoe
                            id: '3332883909410030364'
                      - /root/companyId:
                          value: 636192
                      - /root/displayName:
                          value: example
                      - /work/department:
                          value: example
                      - /work/isManager:
                          value: true
                      - /work/originalStartDate:
                          value: '2015-03-20'
                      - coverImageUrl: string URL
                      - /work/reportsToIdInCompany:
                          value: 1
                      - /work/tenureDuration:
                          value:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
                      - /about/superpowers:
                          value:
                            - excel
                      - id: '3332883911884669725'
                      - firstName: Amy
                      - /work/siteId:
                          value: 2510068
                      - /work/durationOfEmployment:
                          value:
                            periodISO: P9Y3M8D
                            sortFactor: 3338
                            humanize: 9 years, 3 months and 8 days
        '400':
          description: Bad request. The request contains incorrect parameters or syntax errors. Please review the request body
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
        '429':
          description: >-
            "Too Many Requests" error. This indicates that you've exceeded the rate limit for requests. Please verify
            that you are using the correct endpoint with the POST method. Additionally, check the HTTP headers for rate
            limit information, such as the number of requests allowed and the time until the limit resets. For more
            details, see <a href="https://apidocs.hibob.com/docs/rate-limit" target="_blank">Rate Limiting</a>.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /people:
    post:
      tags:
        - People
      summary: Create company employee.
      description: >-
        <br>This creates a new employee record in Bob. You can include only the fields listed in the  [Fields Metadata
        API](https://apidocs.hibob.com/reference/get_company-people-fields).  <br /><br><b>Note</b>
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - firstName
                - surname
              type: object
              properties:
                firstName:
                  type: string
                  description: Employee's first name.
                surname:
                  type: string
                  description: Employee's surname.
                email:
                  type: string
                  description: Employee's email address.
                  format: email
                work:
                  required:
                    - site
                    - startDate
                  type: object
                  properties:
                    site:
                      type: string
                      description: The employee's site.
                    startDate:
                      type: string
                      description: The employee's employment start date
                      format: date
              x-readme-ref-name: CreateEmployeeRequest
        required: true
      responses:
        '200':
          description: Employee
          content:
            application/json:
              schema:
                oneOf:
                  - title: Human readable only (humanReadable="REPLACE")
                    type: object
                    properties:
                      fullName:
                        type: string
                        description: The full name of the Employee (first name + surname).
                      displayName:
                        type: string
                        description: Employee's display name. This defaults to first name & last name but can be customized.
                      creationDateTime:
                        type: string
                        description: The full timestamp of creation of the Employee.
                      work:
                        anyOf:
                          - type: object
                            properties:
                              shortStartDate:
                                type: string
                                description: The employee's employment start date without the year
                                format: date
                              startDate:
                                type: string
                                description: The employee's employment start date without the year
                                format: date
                              manager:
                                type: string
                                description: The full name of the employee's manager.
                              tenureDuration:
                                type: string
                                description: The tenure duration of the employee.
                              durationOfEmployment:
                                type: string
                                description: The tenure duration of the employee.
                              reportsToIdInCompany:
                                type: string
                                description: The ID in company of the manager.
                              employeeIdInCompany:
                                type: string
                                description: The ID of the manager.
                              reportsTo:
                                type: string
                                description: The full name of the person the employee reports to.
                              tenureDurationYears:
                                type: string
                                description: The tenture duration in years.
                              department:
                                type: string
                                description: The department this employee belong to.
                              siteID:
                                type: string
                                description: The ID of the site the employee belongs to.
                              tenureYears:
                                type: string
                                description: The tenture in years.
                              isManager:
                                type: string
                                description: Is the employee a manager (Yes/No).
                              title:
                                type: string
                                description: The employee's title.
                              site:
                                type: string
                                description: The employee's site.
                              originalStartDate:
                                type: string
                                description: The original date the employee started to work
                              activeEffectiveDate:
                                type: string
                                description: The active effective date the employee started to work
                              secondLevelManager:
                                type: string
                                description: The full name of the manager in the second level
                              daysOfPreviousService:
                                type: string
                                description: The number of days in previous service
                              yearsOfService:
                                type: string
                                description: The number of years in service
                            x-readme-ref-name: WorkPartReadable
                      avatarUrl:
                        type: string
                        description: The URL of the source of the avatar image.
                      secondName:
                        type: string
                        description: Employee's surname.
                      about:
                        anyOf:
                          - type: object
                            properties:
                              foodPreferences:
                                type: string
                                description: Employee's food preferences.
                              superpowers:
                                type: string
                                description: Employee's super powers.
                              hobbies:
                                type: string
                                description: A list of the employee's hobbies.
                              about:
                                type: string
                                description: Employee's about sentence.
                              avatar:
                                type: string
                                description: Image URL of the employee's avatar.
                            x-readme-ref-name: AboutPartReadable
                      companyId:
                        type: string
                        description: The ID of the employee's company.
                      email:
                        type: string
                        description: Employee's email address.
                        format: email
                      surname:
                        type: string
                        description: Employee's surname.
                      coverImageUrl:
                        type: string
                        description: The URL of the cover image.
                      id:
                        type: string
                        description: A unique identifier representing a specific employee.
                      firstName:
                        type: string
                        description: Employee's first name.
                    x-readme-ref-name: EmployeeResponseReadable
                  - title: Machine format only (humanReadable="")
                    type: object
                    properties:
                      fullName:
                        type: string
                        description: The full name of the Employee (first name + surname).
                      /work/indirectReports:
                        type: array
                        description: The internal IDs of the people the Employee reports to indirectly.
                        items:
                          type: string
                      /about/avatar:
                        type: object
                        description: The avatar URL of the employee.
                        properties:
                          value:
                            type: string
                      /work/reportsTo/email:
                        type: object
                        description: The email of the person the employee reports to.
                        properties:
                          value:
                            type: string
                      displayName:
                        type: string
                        description: Employee's display name. This defaults to first name & last name but can be customized.
                      /root/firstName:
                        type: object
                        description: The first name of the employee.
                        properties:
                          value:
                            type: string
                      /work/employeeIdInCompany:
                        type: object
                        description: The internal ID of the employee.
                        properties:
                          value:
                            type: number
                      /work/tenureDurationYears:
                        type: object
                        description: The tenure duration in exact years of the employee.
                        properties:
                          value:
                            type: number
                      /about/foodPreferences:
                        type: object
                        description: The food preferences of the employee.
                        properties:
                          value:
                            type: string
                      /work/site:
                        type: object
                        description: The site name of the employee.
                        properties:
                          value:
                            type: string
                      /work/tenureYears:
                        type: object
                        description: The tenure duration in years of the employee (rounded value).
                        properties:
                          value:
                            type: string
                      creationDateTime:
                        type: string
                        description: The full timestamp of creation of the Employee.
                      hobbies:
                        type: object
                        properties:
                          value:
                            type: array
                            description: An array of the employee's hobbies.
                            items:
                              type: string
                      /root/email:
                        type: object
                        description: The employee's email.
                        properties:
                          value:
                            type: string
                      /work/title:
                        type: object
                        description: The employee's title.
                        properties:
                          value:
                            type: string
                      employee:
                        type: object
                        properties:
                          payrollManager:
                            type: string
                          hrbp:
                            type: string
                          itAdmin:
                            type: string
                          buddy:
                            type: string
                      work:
                        type: object
                        anyOf:
                          - type: object
                            properties:
                              shortStartDate:
                                type: string
                                description: The employee's employment start date without the year
                                format: date
                              startDate:
                                type: string
                                description: The employee's employment start date without the year
                                format: date
                              manager:
                                type: string
                                description: The full name of the employee's manager.
                              tenureDuration:
                                type: object
                                description: The tenure duration of the employee.
                                properties:
                                  periodISO:
                                    type: string
                                  sortFactor:
                                    type: number
                                  humanize:
                                    type: string
                              custom:
                                description: The custom fields of the employee.
                                type: array
                                items:
                                  type: string
                              durationOfEmployment:
                                type: object
                                description: The tenure duration of employment of the employee.
                                properties:
                                  periodISO:
                                    type: string
                                  sortFactor:
                                    type: number
                                  humanize:
                                    type: string
                              reportsToIdInCompany:
                                type: number
                                description: The ID in company of the manager.
                              employeeIdInCompany:
                                type: number
                                description: The ID of the manager.
                              reportsTo:
                                type: object
                                description: The full name of the person the employee reports to.
                                properties:
                                  displayName:
                                    type: string
                                  email:
                                    type: string
                                  surname:
                                    type: string
                                  firstName:
                                    type: string
                                  id:
                                    type: string
                              workMobile:
                                type: string
                                description: The work mobile number.
                              workPhone:
                                type: string
                                description: The work phone number.
                              indirectReports:
                                type: number
                                description: The person this employee reports to indirectly.
                              siteID:
                                type: number
                                description: The ID of the site the employee belongs to.
                              tenureDurationYears:
                                type: number
                                description: The tenture duration in years.
                              department:
                                type: string
                                description: The department this employee belong to.
                              tenureYears:
                                type: number
                                description: The tenture in years.
                              isManager:
                                type: string
                                description: Is the employee a manager (Yes/No).
                              title:
                                type: string
                                description: The employee's title.
                              site:
                                type: string
                                description: The employee's site.
                              originalStartDate:
                                type: string
                                description: The original date the employee started to work
                              activeEffectiveDate:
                                type: string
                                description: The active effective date the employee started to work
                              directReports:
                                type: number
                                description: The internal ID of the person this employee reports to directly
                              secondLevelManager:
                                type: string
                                description: The ID of the manager in the second level
                              daysOfPreviousService:
                                type: number
                                description: The number of days in previous service
                              yearsOfService:
                                type: number
                                description: The number of years in service
                            x-readme-ref-name: WorkPartMachineFormat
                      avatarUrl:
                        type: string
                        description: The URL of the source of the avatar image.
                      secondName:
                        type: string
                        description: Employee's surname.
                      about:
                        type: object
                        anyOf:
                          - type: object
                            properties:
                              foodPreferences:
                                type: object
                                description: Employee's food preferences.
                                items:
                                  type: string
                              socialData:
                                type: object
                                description: Employee's social data.
                                properties:
                                  linkedin:
                                    type: string
                                  twitter:
                                    type: string
                                  facebook:
                                    type: string
                              superpowers:
                                type: array
                                description: Employee's super powers.
                                items:
                                  type: string
                              hobbies:
                                type: array
                                description: A list of the employee's hobbies.
                                items:
                                  type: string
                              about:
                                type: string
                                description: Employee's about sentence.
                              avatar:
                                type: string
                                description: Image URL of the employee's avatar.
                            x-readme-ref-name: AboutPartMachineFormat
                      /root/fullName:
                        type: object
                        description: The employee's full name.
                        properties:
                          value:
                            type: string
                      companyId:
                        type: number
                        description: The ID of the employee's company.
                      /root/coverImageUrl:
                        type: object
                        description: The employee's cover image.
                        properties:
                          value:
                            type: string
                      /work/secondLevelManager:
                        type: object
                        description: The ID of the second level manager of the employee.
                        properties:
                          value:
                            type: string
                      /work/directReports:
                        type: object
                        description: The number of people the employee reports to directly.
                        properties:
                          value:
                            type: number
                      /work/yearsOfService:
                        type: object
                        description: The number of years the employee has been in service.
                        properties:
                          value:
                            type: number
                      /work/daysOfPreviousService:
                        type: object
                        description: The number of years the employee has been in service previously.
                        properties:
                          value:
                            type: number
                      /about/about:
                        type: object
                        description: Employee's about sentence.
                        properties:
                          value:
                            type: string
                      /root/avatarUrl:
                        type: object
                        description: The url for the avatar file of the employee.
                        properties:
                          value:
                            type: string
                      /work/shortStartDate:
                        type: object
                        description: The start date of the employee in a short format (without the year).
                        properties:
                          value:
                            type: string
                      /work/activeEffectiveDate:
                        type: object
                        description: The date the employee bacame active.
                        properties:
                          value:
                            type: string
                      /root/id:
                        type: object
                        description: The ID of the employee.
                        properties:
                          value:
                            type: string
                      email:
                        type: string
                        description: Employee's email address.
                        format: email
                      /work/manager:
                        type: object
                        description: The ID of the employee's manager.
                        properties:
                          value:
                            type: string
                      surname:
                        type: string
                        description: Employee's surname.
                      /work/reportsTo:
                        type: object
                        description: The details of the person the employee reports to.
                        properties:
                          value:
                            type: object
                            properties:
                              displayName:
                                type: string
                              email:
                                type: string
                              surname:
                                type: string
                              firstName:
                                type: string
                              id:
                                type: string
                      /root/companyId:
                        type: object
                        description: The ID of the employee's company.
                        properties:
                          value:
                            type: number
                      /root/displayName:
                        type: object
                        description: The display name of the employee.
                        properties:
                          value:
                            type: string
                      /work/department:
                        type: object
                        description: The department of the employee.
                        properties:
                          value:
                            type: string
                      /work/isManager:
                        type: object
                        description: The department of the employee.
                        properties:
                          value:
                            type: boolean
                      /work/originalStartDate:
                        type: object
                        description: The original date the employee started work.
                        properties:
                          value:
                            type: string
                      coverImageUrl:
                        type: string
                        description: The URL of the cover image.
                      /work/reportsToIdInCompany:
                        type: object
                        description: The ID of the person this employee reports to.
                        properties:
                          value:
                            type: number
                      /work/tenureDuration:
                        type: object
                        description: The tenture duration of the employee.
                        properties:
                          value:
                            type: object
                            properties:
                              periodISO:
                                type: string
                              sortFactor:
                                type: number
                              humanize:
                                type: string
                      /about/superpowers:
                        type: object
                        description: The super powers of the employee.
                        properties:
                          value:
                            type: array
                            items:
                              type: string
                      id:
                        type: string
                        description: A unique identifier representing a specific employee.
                      firstName:
                        type: string
                        description: Employee's first name.
                      /work/siteId:
                        type: object
                        description: The site ID of the employee's site.
                        properties:
                          value:
                            type: number
                      /work/durationOfEmployment:
                        type: object
                        description: The duration of the employee's employment.
                        properties:
                          value:
                            type: object
                            properties:
                              periodISO:
                                type: string
                              sortFactor:
                                type: number
                              humanize:
                                type: string
                    x-readme-ref-name: EmployeeResponseMachineFormat
        '400':
          description: Bad request. The request contains incorrect parameters or syntax errors. Please review the request body
        '403':
          description: >-
            Forbidden. The service user does not have permissions to access this table or employees. Check the
            permissions as explained in the endpoint description.
        '429':
          description: >-
            "Too Many Requests" error. This indicates that you've exceeded the rate limit for requests. Please verify
            that you are using the correct endpoint with the POST method. Additionally, check the HTTP headers for rate
            limit information, such as the number of requests allowed and the time until the limit resets. For more
            details, see <a href="https://apidocs.hibob.com/docs/rate-limit" target="_blank">Rate Limiting</a>.
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /people/{id}/email:
    put:
      tags:
        - People
      summary: Update an employee's email address.
      description: >-
        Change an employee's email address. If you cannot change the self email an invitation will be sent to the new
        address to verify the email if the employee is invited/active.<br />
      parameters:
        - name: id
          in: path
          description: employee id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: new email
              x-readme-ref-name: ChangeEmail
        required: true
      responses:
        '200':
          description: Invitation sent successfully.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /job-catalog/job-families/metadata:
    get:
      tags:
        - Job catalog settings
      summary: Get all job family fields
      description: >-
        Returns a list of all fields of object type job family.<br/> <br /><br /> **<b>Required permissions</b>** <br />
        The service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br />
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-family-groups/metadata:
    get:
      tags:
        - Job catalog settings
      summary: Get all job family group fields
      description: >-
        Returns a list of all fields of object type job family group.<br/> <br /><br /> **<b>Required permissions</b>**
        <br /> The service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br />
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-profiles/metadata:
    get:
      tags:
        - Job catalog settings
      summary: Get all job profiles fields
      description: >-
        Returns a list of all fields of object type job profile.<br/> <br /><br /> **<b>Required permissions</b>** <br
        /> The service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br />
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-roles/metadata:
    get:
      tags:
        - Job catalog settings
      summary: Get all job role fields
      description: >-
        Returns a list of all fields of object type job role.<br/> <br /><br /> **<b>Required permissions</b>** <br />
        The service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br />
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-families:
    get:
      tags:
        - Job content library
      summary: Get all job families
      description: >-
        Returns a list of all objects of type job family.<br/> <br /><br /> **<b>Required permissions</b>** <br /> The
        service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br /><br /> **<b>Pagination</b>**
        <br /> This endpoint uses cursor-based pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a>
      parameters:
        - name: limit
          in: query
          description: Maximum number of job families to return.
          schema:
            type: number
            default: 100
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Should not be provided in the first call. To
            learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
            API</a>.
          schema:
            type: string
        - name: includeHumanReadable
          in: query
          description: Whether to include the additional "humanReadable" JSON node in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobFamilyEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /jobFamily/id:
                            type: object
                            description: The id of the job family.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobFamily/name:
                            type: object
                            description: The job family name.
                            properties:
                              humanReadable:
                                type: string
                                example: Engineering
                              value:
                                type: string
                                example: Engineering
                          /jobFamily/description:
                            type: object
                            description: The job family description
                            properties:
                              humanReadable:
                                type: string
                                example: Focuses on building and maintaining systems or products
                              value:
                                type: string
                                example: Focuses on building and maintaining systems or products
                      x-readme-ref-name: JobFamilyEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: JobFamiliesResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-family-groups:
    get:
      tags:
        - Job content library
      summary: Get all job family groups
      description: >-
        Returns a list of all objects of type job family group.<br/> <br /><br /> **<b>Required permissions</b>** <br />
        The service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br /><br /> **<b>Pagination</b>**
        <br /> This endpoint uses cursor-based pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a>
      parameters:
        - name: limit
          in: query
          description: Maximum number of job family groups to return.
          schema:
            type: number
            default: 100
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Should not be provided in the first call. To
            learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
            API</a>.
          schema:
            type: string
        - name: includeHumanReadable
          in: query
          description: Whether to include the additional "humanReadable" JSON node in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobFamilyGroupEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /jobFamilyGroup/id:
                            type: object
                            description: The id of the job family group.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobFamilyGroup/name:
                            type: object
                            description: The job family group name.
                            properties:
                              humanReadable:
                                type: string
                                example: IT
                              value:
                                type: string
                                example: IT
                          /jobFamilyGroup/description:
                            type: object
                            description: The job family group description
                            properties:
                              humanReadable:
                                type: string
                                example: Covers all technology-related job families and roles
                              value:
                                type: string
                                example: Covers all technology-related job families and roles
                      x-readme-ref-name: JobFamilyGroupEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: JobFamilyGroupsResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-roles:
    get:
      tags:
        - Job content library
      summary: Get all job roles
      description: >-
        Returns a list of all objects of type job role.<br/> <br /><br /> **<b>Required permissions</b>** <br /> The
        service user making the call must have the required permissions: see <a
        href="/reference/job-profiles#permissions-required">Permissions required</a>. <br /><br /> **<b>Pagination</b>**
        <br /> This endpoint uses cursor-based pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a>
      parameters:
        - name: limit
          in: query
          description: Maximum number of job roles to return.
          schema:
            type: number
            default: 100
        - name: cursor
          in: query
          description: >-
            A marker representing the first item on the next page to read. Should not be provided in the first call. To
            learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
            API</a>.
          schema:
            type: string
        - name: includeHumanReadable
          in: query
          description: Whether to include the additional "humanReadable" JSON node in the response.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobRoleEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /jobRole/id:
                            type: object
                            description: The id of the role.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobRole/name:
                            type: object
                            description: The job role name.
                            properties:
                              humanReadable:
                                type: string
                                example: Developer
                              value:
                                type: string
                                example: Developer
                          /jobRole/description:
                            type: object
                            description: The job role description
                            properties:
                              humanReadable:
                                type: string
                                example: Responsible for coding, debugging, and deploying software
                              value:
                                type: string
                                example: Responsible for coding, debugging, and deploying software
                      x-readme-ref-name: JobRoleEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: JobRolesResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /job-catalog/job-profiles/search:
    post:
      tags:
        - Job profiles
      summary: Read company job profiles
      description: >-
        This endpoint returns a list of company job profiles filtered by the specified attributes. Note that this
        endpoint requires body parameters, which is why it is implemented as a POST request.  <br /><br />
         To successfully use this endpoint, a filter is mandatory. Ensure you use the filter provided in the **Example > Request example** option; otherwise, the call will fail.        <br /><br />
        **<b>Required permissions</b>** <br /> The service user making the call must have the required permissions: see
        <a href="/reference/job-profiles#permissions-required">Permissions required</a>. <br /><br />
        **<b>Pagination</b>** <br /> This endpoint uses cursor-based pagination to handle large number of table entries.
        To learn more, see <a href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's
        API</a>
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fields
                - filters
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    Array of field IDs to fetch for the job profiles. A list of the supported field IDs can be found in
                    the '200 response' body detailed below. To find out the field ID of a custom field, use the <a
                    href="https://apidocs.hibob.com/reference/get_job-catalog-job-profiles-metadata">Get all job
                    profiles fields</a> metadata endpoint. <br /> The array can contain 1 to 50 field IDs. Any invalid
                    number of fields will get a response of 400 HTTP error.<br />
                  items:
                    type: string
                    example: /jobProfile/code
                    default: /jobProfile/code
                filters:
                  type: array
                  description: An array of filtering conditions.
                  items:
                    type: object
                    allOf:
                      - required:
                          - fieldId
                          - operator
                          - values
                        properties:
                          fieldId:
                            type: string
                            description: >-
                              The field id to filter by.<br /> Supported fields: “/jobProfile/status”,
                              "/jobProfile/jobFamilyGroupId", "/jobProfile/jobFamilyId", "/jobProfile/jobRoleId",
                              "/jobProfile/id".<br />Any other path will get a response of 400 HTTP error.
                            example: /jobProfile/status
                            default: /jobProfile/status
                          operator:
                            type: string
                            example: equals
                            default: equals
                            description: >-
                              Supported operators: “equals”, "notEqual".<br />Any other operator will get a response of
                              400 HTTP error.
                          values:
                            type: array
                            description: List of values to compare.<br />Empty list will result in 400 HTTP error.
                            items:
                              type: string
                              example: active
                              default: active
                        x-readme-ref-name: JobProfilesFilterInstruction
                pagination:
                  type: object
                  description: Optional pagination parameters.
                  properties:
                    limit:
                      description: The number of results per page. Defaults to 100 if not supplied.
                      type: number
                      minimum: 1
                      maximum: 100
                      default: 100
                    cursor:
                      description: >-
                        A marker representing the first item on the next page to read. Should not be provided in the
                        first call. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
                        target=”_blank”>Pagination in Bob's API</a>.
                      type: string
                      default: null
                      example: null
                includeHumanReadable:
                  type: boolean
                  description: Whether to include the additional "humanReadable" entry in the response.
                  default: false
              x-readme-ref-name: GetJobProfilesRequest
        required: true
      responses:
        '200':
          description: The job profiles returned in the response body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobProfileEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /jobProfile/id:
                            type: object
                            description: The id of the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobProfile/jobLevelRoleId:
                            type: object
                            description: The id of the job level for the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobProfile/jobRoleId:
                            type: object
                            description: The id of the job role for the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobProfile/jobFamilyId:
                            type: object
                            description: The id of the job family for the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobProfile/jobFamilyGroupId:
                            type: object
                            description: The id of the job family group for the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                          /jobProfile/code:
                            type: object
                            description: The unique code of the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: J-123456789
                              value:
                                type: string
                                example: J-123456789
                          /jobProfile/title:
                            type: object
                            description: The name of the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: Senior Developer R&D
                              value:
                                type: string
                                example: Senior Developer R&D
                          /jobProfile/status:
                            type: object
                            description: >-
                              The status of the job profile. Possible values and their human-readable values: "active"
                              ("Active"),  "draft" ("Draft"), "inactive" ("Inactive").
                            properties:
                              humanReadable:
                                type: string
                                example: Active
                              value:
                                type: string
                                example: active
                          /jobProfile/description:
                            type: object
                            description: The description of the job profile.
                            properties:
                              humanReadable:
                                type: string
                                example: A senior software engineer.
                              value:
                                type: string
                                example: A senior software engineer.
                          /jobProfile/assignedEmployees:
                            type: object
                            description: The employees assigned to the job profile.
                            properties:
                              humanReadable:
                                type: array
                                items:
                                  type: string
                                  example: Audrey Darby
                              value:
                                type: array
                                items:
                                  type: string
                                  example: '3006749430876471221'
                      x-readme-ref-name: JobProfileEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: JobProfilesResponse
        '400':
          description: Bad request. The request contains incorrect parameters or syntax errors. Please review the request body.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /company/reports/download/{reportName}:
    get:
      tags:
        - Reports
      summary: Download a report by the report name.
      description: >-
        Downloads the report that was generated with the Get the report download URL for polling endpoint.<br />  <br
        />To download the report:<br /> 1. Use the [Get the report download URL for
        polling](https://apidocs.hibob.com/reference/get_company-reports-reportid-download-async) endpoint to obtain the
        report URL.<br /> 2. Copy only the name of the report (after the /download/) from the URL returned in the
        response header, and use it as the `reportName` for download.  <br /><br />For example:
        `https://app.hibob.com/v1/company/reports/download/2022-06-17T11_22_14.798810-test.JsonFormat`<br /> 3. If you
        receive 204 error response, this means the reports is not ready yet. In this case you should try again.<br />
        <br />  <b>Permissions required:</b>  <br /> The service user that you use for this call should have the
        required permissions. To learn more, see [Reports permissions](https://apidocs.hibob.com/reference/reports).
      parameters:
        - name: reportName
          in: path
          description: >-
            Report name. You should obtain the report name from the generated report URL in the [Get the report download
            URL for polling](https://apidocs.hibob.com/reference/get_company-reports-reportid-download-async)
            endpoint.<br />
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Include the report name and execution date in the report file. This defaults to true.
          content:
            application/json:
              schema:
                type: string
                format: binary
        '204':
          description: The file is not yet ready, please try again.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /company/reports/{reportId}/download-async:
    get:
      tags:
        - Reports
      summary: Get the report download URL for polling
      description: >-
        This endpoint asynchronously generates a report, based on the specified format. If successful it returns the
        status `Accepted` and sets the URL of the newly generated report in the response header under a header called
        `Location`.<br /> You can then obtain the report name and pass it to the next endpoint ([Download report file by
        URL](https://apidocs.hibob.com/reference/get_company-reports-download-reportname)):<br /> 1. Click **Headers**
        at the bottom of the response to see the URL.<br />  2. Copy only the name of the report (after the /download/
        part) and paste to the `reportName` for download.<br />  <br />  <b>Permissions required:</b>  <br /> The
        service user that you use for this call should have the required permissions. To learn more, see [Reports
        permissions](https://apidocs.hibob.com/reference/reports).
      parameters:
        - name: reportId
          in: path
          description: Report id
          required: true
          schema:
            type: number
            format: long
        - name: format
          in: query
          description: File format
          required: true
          schema:
            type: string
            enum:
              - csv
              - xlsx
            default: csv
        - name: includeInfo
          in: query
          description: Should include info
          schema:
            type: boolean
            format: boolean
        - name: locale
          in: query
          description: >-
            Requested language for the report columns in the format of the locale (e.g. fr-FR). If this is not provided,
            the user preferences locale is used.
          schema:
            type: string
            format: string
        - name: humanReadable
          in: query
          description: >-
            Optional field. Only enforced when <i><b>format</b></i> is <i>json</i>. <br> <b>If not sent:</b> supply
            machine-readable values only. If you pass an invalid value it will be ignored.<br> <br> Possible values:
            <br>  <br> <b>APPEND</b> - include the additional "humanReadable" JSON node in the response. <br>  <br>
            <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable format. <br>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Report URL under "Location" in the response header.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /company/reports/{reportId}/download:
    get:
      tags:
        - Reports
      summary: Download the report by ID
      description: >-
        Returns a report data file in the specified format.<br /> <b>Supported user types:</b> Service. <br /> <br />  
        <b>Permissions required:</b>  <br /> The service user that you use for this call should have the required
        permissions. To learn more, see [Reports permissions](https://apidocs.hibob.com/reference/reports).
      parameters:
        - name: reportId
          in: path
          description: >-
            The ID of the report to download. You can obtain the ID from the response of [Read company
            reports](https://apidocs.hibob.com/reference/get_company-reports). <br /> For testing purposes you can
            obtain the report ID from Bob's UI - the report ID appears in the URL when viewing the report.
          required: true
          schema:
            type: number
            format: long
        - name: format
          in: query
          description: File format
          schema:
            type: string
            enum:
              - csv
              - xlsx
              - json
            default: csv
        - name: includeInfo
          in: query
          description: Should include info.
          schema:
            type: boolean
            format: boolean
        - name: locale
          in: query
          description: >-
            Requested language for the report columns in the format of locale (e.g. fr-FR). If this is not provided, the
            user preferences locale is used.
          schema:
            type: string
            format: string
        - name: humanReadable
          in: query
          description: >-
            Optional field. Only enforced when <i><b>format</b></i> is <i>json</i>. <br> <b>If not sent:</b> supply
            machine-readable values only. If you pass an invalid value it will be ignored.<br> <br> Possible values:
            <br>  <br> <b>APPEND</b> - include the additional "humanReadable" JSON node in the response. <br>  <br>
            <b>REPLACE</b> - supply humanReadable values in JSON instead of machine-readable format. <br>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Includes the report name and execution date in the report file. By default this is set to True.
          content:
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /company/reports:
    get:
      tags:
        - Reports
      summary: Read company reports
      description: >-
        Returns a list of all the company reports with their details. The data is filtered based on the access level of
        the service user making the call. Only viewable categories are returned.<br /> <br />  <b>Permissions
        required:</b>  <br /> The service user that you use for this call should have the required permissions to access
        reports. To learn more, see [Reports permissions](https://apidocs.hibob.com/reference/reports).
      responses:
        '200':
          description: List of reports and their details
          content:
            application/json:
              schema:
                type: object
                properties:
                  views:
                    type: array
                    items:
                      type: object
                      properties:
                        modificationDate:
                          type: string
                        createdBy:
                          type: string
                        configuration:
                          type: object
                          properties:
                            instructions:
                              type: array
                              items:
                                type: object
                                properties:
                                  fieldPath:
                                    type: string
                                  operator:
                                    type: string
                                  values:
                                    type: array
                                    items:
                                      type: string
                            changes:
                              type: string
                            displayPreferences:
                              type: object
                              properties:
                                exportConfiguration:
                                  type: string
                                includeFlatJson:
                                  type: boolean
                                dateFormat:
                                  type: string
                                supportErrorWrapping:
                                  type: boolean
                                columnsProperties:
                                  type: string
                                includeHumanReadable:
                                  type: boolean
                            sortBy:
                              type: boolean
                            fields:
                              type: array
                              items:
                                type: string
                            excludeSystemChanges:
                              type: string
                        isComparable:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        isScheduled:
                          type: boolean
                        id:
                          type: number
                          format: long
                        type:
                          type: string
                        creationDate:
                          type: string
                        folderId:
                          type: string
                      x-readme-ref-name: Report
                x-readme-ref-name: Reports
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /tasks/people/{id}:
    get:
      tags:
        - Tasks
      summary: 'Read tasks of a specific employee '
      parameters:
        - name: id
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
            format: string
        - name: task_status
          in: query
          description: filter tasks by open / closed status. Not sending task_status will return all tasks.
          schema:
            type: string
            enum:
              - open
              - closed
      responses:
        '200':
          description: All of a specific employee's open tasks.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          format: long
                        owner:
                          type: object
                          properties:
                            id:
                              type: string
                            firstName:
                              type: string
                            surname:
                              type: string
                            email:
                              type: string
                            displayName:
                              type: string
                          x-readme-ref-name: TaskEmployee
                        title:
                          type: string
                        requestedFor:
                          type: object
                          properties:
                            id:
                              type: string
                            firstName:
                              type: string
                            surname:
                              type: string
                            email:
                              type: string
                            displayName:
                              type: string
                          x-readme-ref-name: TaskEmployee
                        due:
                          type: string
                          format: date
                        linkInBob:
                          type: string
                        set:
                          type: string
                        workflow:
                          type: string
                        ordinalInWorkflow:
                          type: number
                        description:
                          type: string
                        status:
                          type: string
                        completionDate:
                          type: string
                          format: date
                        employeeGroupId:
                          type: number
                        companyId:
                          type: number
                          description: The ID of the employee's company.
                      x-readme-ref-name: Task
                x-readme-ref-name: Tasks
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /tasks:
    get:
      tags:
        - Tasks
      summary: Read all open tasks.
      responses:
        '200':
          description: All open tasks for this company.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          format: long
                        owner:
                          type: object
                          properties:
                            id:
                              type: string
                            firstName:
                              type: string
                            surname:
                              type: string
                            email:
                              type: string
                            displayName:
                              type: string
                          x-readme-ref-name: TaskEmployee
                        title:
                          type: string
                        requestedFor:
                          type: object
                          properties:
                            id:
                              type: string
                            firstName:
                              type: string
                            surname:
                              type: string
                            email:
                              type: string
                            displayName:
                              type: string
                          x-readme-ref-name: TaskEmployee
                        due:
                          type: string
                          format: date
                        linkInBob:
                          type: string
                        set:
                          type: string
                        workflow:
                          type: string
                        ordinalInWorkflow:
                          type: number
                        description:
                          type: string
                        status:
                          type: string
                        completionDate:
                          type: string
                          format: date
                        employeeGroupId:
                          type: number
                        companyId:
                          type: number
                          description: The ID of the employee's company.
                      x-readme-ref-name: Task
                x-readme-ref-name: Tasks
      security:
        - Basic: []
  /tasks/{taskId}/complete:
    post:
      tags:
        - Tasks
      summary: Mark a task as complete
      parameters:
        - name: taskId
          in: path
          description: task id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Marks a task as complete.
          content:
            application/json:
              schema:
                type: object
                properties:
                  toDosUpdated:
                    type: number
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /attendance/import/{importMethod}:
    post:
      tags:
        - Attendance
      summary: Import attendance data
      description: >-
        <p>This endpoint allows you to import attendance punches (entries) for employees.  <p><b>Before using this
        endpoint</b>:</p> <ul> <li>Explore <a href="https://help.hibob.com/hc/en-us/articles/8108619113745"
        target="_blank">Import attendance punches into Bob via Public API</a> for detailed information about this
        endpoint. </li> <li>It's important to fully understand how to use this endpoint correctly to avoid errors in the
        import process.</li>
      parameters:
        - name: importMethod
          in: path
          description: >-
            Indicates if the provided data should be processed via an aggregation engine or immediately. <ul>Aggregate -
            will add the logs to a temporary location, and an aggregation job will process the data
            asynchronously.</ul><ul>Immediate - will insert the records as-is.</ul>
          required: true
          schema:
            type: string
            enum:
              - aggregate
              - immediate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - idType
                - requests
              type: object
              properties:
                idType:
                  type: string
                  description: >-
                    The ID type used to identify the employee. Can be one of: "bobId", "email", "idInCompany", or a
                    custom field.<br/>For <b>custom fields</b> a forward slash separator should be used.<br/>In order to
                    use a specific custom field to identify an employee, for example a custom field called "Payroll
                    integration ID":<ul><li>Query the field name via the <a
                    href='https://apidocs.hibob.com/reference/get_company-people-fields'>"Get all company
                    fields"</a></li><li>In the response the name will look like <b>"identification.custom.Payroll
                    Integration ID_1RNhIIf"</b></li><li>The value to use should be: <b>"/identification/custom/Payroll
                    Integration ID_1RNhI"</b></li></ul>
                requests:
                  type: array
                  description: List of attendance events
                  items:
                    required:
                      - id
                    type: object
                    properties:
                      id:
                        type: string
                        description: >-
                          The id value to identify the customer by. Will fetch the employee based on the field (type)
                          selected in <i>idType</i>.
                        example: '12356733644'
                      clockIn:
                        type: string
                        description: The timestamp to log as a clock-in date-time in local time
                        example: 2022-06-12T08:00
                      clockOut:
                        type: string
                        description: The timestamp to log as a clock-out date-time in local time.
                        example: 2022-06-12T17:00
                      entryType:
                        type: string
                        description: >-
                          The entry type can be either "work" or "break". If not passed, "work" type will be
                          assumed.<br> **Important**: Break entries are supported only with 'immediate' import method.
                          To learn more, see <a href="https://help.hibob.com/hc/en-us/articles/8108619113745"
                          target="_blank">Import attendance punches into Bob via Public API</a>.
                        example: work
                    description: An event indicating clock-in, clock-out or both, and the entry type
                    x-readme-ref-name: ImportAttendanceEvent
                dateTimeFormat:
                  type: string
                  description: Allows to set custom date format for the date-time values sent in the requests
                  example: yyyy-MM-dd hh:mm a
              x-readme-ref-name: ImportAttendanceData
        required: true
      responses:
        '200':
          description: Records imported
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Import status
                    enum:
                      - success
                      - failed
                      - partial_success
                  total:
                    type: number
                    description: Total number of clock-in and clock-out events received
                    example: 140
                  imported:
                    type: number
                    description: Number of clock-in/clock-out events imported
                    example: 137
                  notImported:
                    type: number
                    description: Number of clock-in/clock-out events which were not imported
                    example: 3
                  errors:
                    type: array
                    description: List of all errors received in the process
                    example:
                      - Clock-In at 2022-04-07T07:00 for employee ID 2686495591877312534 is invalid
                      - 'Invalid employee Id: ABCD12345567'
                      - Cannot find employee for id 5986745
                    items:
                      type: string
                x-readme-ref-name: ImportAttendanceResponse
        '400':
          description: Bad request, see error description.
          content: {}
        '403':
          description: Forbidden. Authorization is implemented using a service user with attendance management permissions.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /timeoff/employees/{id}/balance:
    get:
      tags:
        - Time off balance
      summary: Get the balance for a given employee
      description: >-
        Retrieve the balance for a given employee, for a given policy type, as of a given date.<br /> <br />
        **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: id
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
        - name: policyType
          in: query
          description: Policy type name.
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Point in time.
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Balance result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employeeId:
                    type: string
                    description: Employee ID.
                  totalBalanceAsOfDate:
                    type: number
                    description: The retrieved balance as of this date.
                  totalRoundedBalanceAsOfDate:
                    type: number
                    description: The retrieved rounded balance as of this date.
                  pointInTime:
                    type: string
                    description: The balance date.
                    format: date
                  startingBalance:
                    type: number
                    description: The balance as of the cycle start date.
                  startingBalanceAsOf:
                    type: string
                    description: The cycle start date.
                    format: date
                  totalTaken:
                    type: number
                    description: Total number of days/hours taken.
                  totalAdminAdjustments:
                    type: number
                    description: Total number of days/hours manually adjusted.
                  totalSystemAdjustments:
                    type: number
                    description: Total number of days/hours adjusted.
                  annualAllowance:
                    type: number
                    description: Annual allowance.
                  policy:
                    type: string
                    description: Policy name.
                x-readme-ref-name: BalanceResult
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /timeoff/employees/{id}/adjustments:
    post:
      tags:
        - Time off balance
      summary: Create a balance adjustment.
      description: >-
        Create a balance adjustment for a given employee for a given effective date.<br /> <br /> **Permissions
        required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: id
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                adjustmentType:
                  type: string
                  description: Adjustment type - balance or time used.
                  enum:
                    - balance
                    - daysUsed
                policyType:
                  type: string
                  description: Policy type name.
                effectiveDate:
                  type: string
                  description: The date this adjustment becomes effective.
                  format: date
                amount:
                  type: number
                  description: The amount of days/hours to add/subtract.
                reason:
                  type: string
                  description: A reason for this adjustment.
              x-readme-ref-name: AdjustmentRequest
        required: true
      responses:
        '200':
          description: Success.
          content: {}
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /timeoff/policies/names:
    get:
      tags:
        - Time off policies
      summary: Get a list of policy names for a given policy type.
      description: >-
        Get a list of policy names for the user's defined policy type.<br /> <br /> **Permissions required**: Please
        refer to the main <a href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API
        Required Permissions</a> page.
      parameters:
        - name: policyTypeName
          in: query
          description: Policy type name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of policy names.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policyNames:
                    type: array
                    items:
                      type: string
                      description: A list of policy names.
                x-readme-ref-name: PolicyNames
      security:
        - Basic: []
  /timeoff/policies:
    get:
      tags:
        - Time off policies
      summary: Get Policy details.
      description: >-
        Get details about a given policy.<br /> <br /> **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: policyName
          in: query
          description: Policy name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  allowance:
                    type: number
                    description: Base annual allowance.
                  maxBalance:
                    type: number
                    description: Maximum balance at the end of the cycle.
                  minBalance:
                    type: number
                    description: Minimum balance cap.
                  yosIncrease:
                    type: array
                    items:
                      type: object
                      properties:
                        yearsOfService:
                          type: number
                          description: Start after this number of years.
                        extraDays:
                          type: number
                          description: Additional days to add.
                      x-readme-ref-name: YearsOfServiceIncrements
                  minTimeOffRequestDuration:
                    type: string
                    description: The shortest amount of time employees can request.
                    enum:
                      - fullDay
                      - halfDay
                      - fullHour
                      - halfHour
                      - quarterHour
                      - tenMinutes
                  bookingWorkDaysOnly:
                    type: boolean
                    description: >-
                      This property defines whether non-working days such as weekends and bank holidays will be deducted
                      from the balance. <br /><br /> **Change in behavior starting November 20, 2024**: From this date,
                      the `bookingWorkDaysOnly` setting has moved from the **Policy Type** to the **Policy** details.
                      Policies that were created before this date will return the original value from the policy type.
                  approvalRequired:
                    type: boolean
                    description: Requests require approval.
                  description:
                    type: string
                    description: Policy description.
                  unit:
                    type: string
                    enum:
                      - days
                      - hours
                x-readme-ref-name: Policy
        '404':
          description: A policy with the specified name was not found.
          content: {}
      security:
        - Basic: []
  /timeoff/policy-types/{policyType}/reason-codes:
    get:
      tags:
        - Time off policies
      summary: Get Policy type reason codes
      description: >-
        Get list of reason codes for a given policy type.<br /> <br /> **Permissions required**: Please refer to the
        main <a href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required
        Permissions</a> page.
      parameters:
        - name: policyType
          in: path
          description: Policy Type name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of reason codes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reasonCodes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        displayName:
                          type: string
                      x-readme-ref-name: ReasonCode
                x-readme-ref-name: ReasonCodes
        '404':
          description: A policy type with the specified name was not found.
          content: {}
      security:
        - Basic: []
    post:
      tags:
        - Time off policies
      summary: Add a list of reason codes for a given policy type.
      description: >-
        Add a list of reason codes for a given policy type.<br /><b>Supported user types:</b> Service. <br />
        **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: policyType
          in: path
          description: Policy Type name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reasonCodes:
                  type: array
                  items:
                    type: string
                    description: A list of reason codes.
              x-readme-ref-name: ReasonCodesNames
        required: true
      responses:
        '200':
          description: Submitted successfully.
          content: {}
        '404':
          description: A policy type with the specified name was not found.
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /timeoff/policy-types/{policyType}:
    get:
      tags:
        - Time off policies
      summary: Get Policy type details
      description: >-
        Get details about a given policy type.<br /> <br /> **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.<br /><br />
      parameters:
        - name: policyType
          in: path
          description: Policy Type name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy type details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  activity:
                    type: string
                    description: Activity type.
                    enum:
                      - paidTimeoff
                      - unpaidTimeoff
                      - workTime
                  unit:
                    type: string
                    enum:
                      - days
                      - hours
                x-readme-ref-name: PolicyType
        '404':
          description: A policy type with the specified name was not found.
          content: {}
      security:
        - Basic: []
  /timeoff/policy-types:
    get:
      tags:
        - Time off policies
      summary: Get all policy types names.
      description: >-
        Get a list of all policy type names.<br /> <br /> **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      responses:
        '200':
          description: List of policy types names.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policyTypes:
                    type: array
                    items:
                      type: string
                x-readme-ref-name: PolicyTypes
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /timeoff/employees/{id}/requests/{requestId}:
    delete:
      tags:
        - Time off
      summary: Cancel an existing time off request
      description: >-
        Cancels an existing time off request.<br /> <br /> **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: id
          in: path
          description: Employee ID.
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: Request ID.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully canceled
          content: {}
      security:
        - Basic: []
    get:
      tags:
        - Time off
      summary: Get the details of an existing time off request.
      description: >-
        Retrieve the detailed info about an existing time off request.<br /> <br /> **Permissions required**: Please
        refer to the main <a href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API
        Required Permissions</a> page.
      parameters:
        - name: id
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
        - name: requestId
          in: path
          description: request id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  employeeId:
                    type: string
                    description: Employee ID.
                    format: string
                    example: '3332883884017713333'
                  requestId:
                    type: integer
                    description: Time Off Request ID.
                    example: 27500233
                  policyTypeDisplayName:
                    type: string
                    description: Display name of the policy type.
                    example: Holiday
                  type:
                    type: string
                    example: days
                    description: >-
                      The type of request duration.<br> <b>portionOnRange</b> is when the request is for every morning
                      or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the request is for X
                      hours every day during the days requested.
                    enum:
                      - days
                      - hours
                      - portionOnRange
                      - hoursOnRange
                  createdOn:
                    type: string
                    description: The date and time the time off request was created.
                    format: date-time
                    example: '2024-08-04T13:11:12.44924'
                  startDate:
                    type: string
                    example: '2024-08-04'
                    description: Date of the first day of the time off  (not relevant for requests using the hours type).
                    format: date
                  startPortion:
                    type: string
                    example: all_day
                    description: >-
                      What portion of the first day is included - all_day, morning or afternoon (relevant for requests
                      using the Days type).
                  endDate:
                    type: string
                    example: '2024-08-05'
                    description: |-
                      Date of the last day of the time off (not relevant for requests using
                                                                     the hours type).
                    format: date
                  timeZoneOffset:
                    type: string
                    example: GMT -5:00
                    description: >
                      Calculated time zone offset from GMT in ±HH:MM format (e.g., "GMT -5:00"). This field is relevant
                      only for specificHoursDayDurations time-off requests, which allow specifying exact start and end
                      times (e.g., 09:00–18:00). The value is automatically calculated based on the employee’s assigned
                      site time zone.
                  endPortion:
                    type: string
                    description: >-
                      What portion of the last day is included - all_day, morning or afternoon (relevant for requests
                      using the Days type).
                  dayPortion:
                    type: string
                    example: all_day
                    description: >-
                      What portion of the request's days is included - morning or afternoon (relevant for requests using
                      the portionOnRange type).
                  approved:
                    type: boolean
                    example: false
                    description: Whether the request is approved (and hence publicly visible).
                  date:
                    type: string
                    example: '2024-08-05'
                    description: Date of the time off (relevant for requests using the Hours type).
                    format: date
                  hoursOnDate:
                    type: integer
                    example: 6
                    description: The time off duration in hours for the date (relevant for requests using the Hours type)
                  dailyHours:
                    type: number
                    example: 6
                    description: >-
                      The time off duration in hours for every day in the request (relevant for requests using the
                      hoursOnRange type).
                  description:
                    type: string
                    description: The request description.
                  durationUnit:
                    type: string
                    example: days
                    description: The unit used for the totalDuration and totalCost - either 'days' or 'hours'
                    enum:
                      - days
                      - hours
                  totalDuration:
                    type: number
                    example: 2
                    description: The total amount of time the request covers, including regular days off such as weekends
                  totalCost:
                    type: number
                    example: 1
                    description: The amount that will be deducted from the balance
                  status:
                    type: string
                    example: pending_approval
                    description: Request status. This can be approved, pending, canceled, etc.
                  hasAttachment:
                    type: boolean
                    description: Whether the request has attachments
                  reasonCode:
                    type: string
                    example: null
                    description: >-
                      The reason code taken from the policy type's reason codes list. The list is available in GET
                      /timeoff/policy-types/{policyType}/reason-codes
                  attachmentLinks:
                    type: array
                    description: Attachments with download links
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        url:
                          type: string
                        mimeType:
                          type: string
                  previousRequestId:
                    type: integer
                    example: null
                    description: >-
                      The backend-id of the previous request that was replaced when this new request was created. This
                      occurs when the request’s date or time is updated, resulting in a new time off request record.
                  originalRequestId:
                    type: integer
                    example: null
                    description: >-
                      The backend-id of the very first time-off request. It remains unchanged regardless of updates that
                      create new time off request records. It serves as the anchor for tracing the request's entire
                      history back to its initial submission.
                  approvedBy:
                    type: string
                    example: null
                    description: Who approved the request
                  approvedAt:
                    type: string
                    example: null
                    description: When the request was approved
                  declinedBy:
                    type: string
                    example: null
                    description: Who declined the request
                  declinedAt:
                    type: string
                    example: null
                    description: When the request was declined
                  declineReason:
                    type: string
                    example: null
                    description: Why the request was declined
                  visibility:
                    type: string
                    example: Public
                    description: The request visibility either 'Public', 'Private' or 'Custom name'
                    enum:
                      - Public
                      - Private
                      - Custom name
                x-readme-ref-name: TimeoffRequest
        '404':
          description: A request with the specified ID is not found for the specified employee.
          content: {}
      security:
        - Basic: []
  /timeoff/outtoday:
    get:
      tags:
        - Time off
      summary: Read a list of who's out of the office today or on the specified date.
      description: >-
        Returns the list of people that have a time off request today or on the specified date, only for the users the
        Service User can access.<br /><br /> **Please note:** <li>**Permissions**: Follow the <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        instructions to ensure the service user has the required permissions. <li>**Parameters**: The data returned is
        also subject to parameters and the permissions granted to the Service User. Make sure you set the relevant
        permissions when using the 'includePending' flag.</li> </ul>
      parameters:
        - name: today
          in: query
          description: Date to report out of the office. If not specified, the date at UTC at the time of the request is used.
          schema:
            type: string
            format: date
        - name: includeHourly
          in: query
          description: Include Hourly Requests
          schema:
            type: boolean
            default: false
        - name: includePrivate
          in: query
          description: >-
            This flag determines whether to return private requests and which name to display in the
            policyTypeDisplayName field. <br /> <ul> <li> <b>`false`</b>: <br /> Exclude requests with `private`
            visibility. <br /> For policies with 'public' visibility, return the 'custom' name in the
            `policyTypeDisplayName` field.<br /></li> <li> <b>`true`</b> (requires permissions as listed in the
            endpoint's description): Include requests with `private` visibility. <br /> Always return the original name
            (not the 'custom' name) in the `policyTypeDisplayName` field. **Note**: when using the `includePrivate`
            flag, the original policy name may include sensitive information. <br /> </li> </ul>
          schema:
            type: boolean
            default: false
        - name: siteId
          in: query
          description: The employee's site ID
          schema:
            type: integer
      responses:
        '200':
          description: The list of people who have taken time off, as seen by the logged in user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  outs:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeId:
                          type: string
                          description: Employee ID.
                          format: uuid
                        employeeDisplayName:
                          type: string
                          description: Employee display name.
                        employeeEmail:
                          type: string
                          description: Employee email address.
                        policyTypeDisplayName:
                          type: string
                          description: Display name of the policy type.
                        startDate:
                          type: string
                          description: Date of the first day of the time off (not relevant for requests using the hours type).
                          format: date
                        startDatePortion:
                          type: string
                          description: >-
                            What portion of the first day is included - all_day, morning or afternoon (relevant for
                            request using the days type).
                        endDate:
                          type: string
                          description: Date of the last day of the time off (not relevant for requests using the hours type).
                          format: date
                        endDatePortion:
                          type: string
                          description: >-
                            What portion of the last day is included - all_day, morning or afternoon (relevant for
                            request using the days type).
                        requestRangeType:
                          type: string
                          description: >-
                            The type of request duration.<br> <b>portionOnRange</b> is when the request is for every
                            morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the
                            request is for X hours every day during the days requested.
                          enum:
                            - days
                            - hours
                            - portionOnRange
                            - hoursOnRange
                        dayPortion:
                          type: string
                          description: >-
                            What portion of the request's days is included - morning or afternoon (relevant for request
                            using the portionOnRange type).
                        dailyHours:
                          type: number
                          description: >-
                            The time off duration in hours for every request's days (relevant for requests with
                            hoursOnRange type).
                        date:
                          type: string
                          description: Date of the time off (relevant for requests using the hours type).
                          format: date
                        hours:
                          type: integer
                          description: The time off duration in hours for the date (relevant for requests with hours type).
                        minutes:
                          type: integer
                          description: Relevant for requests using the hours type.
                        visibility:
                          allOf:
                            - type: string
                              example: Public
                              description: The request visibility either 'Public', 'Private' or 'Custom name'
                              enum:
                                - Public
                                - Private
                                - Custom name
                      x-readme-ref-name: OutToday
                x-readme-ref-name: OutTodays
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /timeoff/requests/changes:
    get:
      tags:
        - Time off
      summary: Get time off requests changes
      description: >-
        Returns an array of all changes made to time off requests within a specified date range. Each item in the array
        includes: the time off request details at the time of the change, and the type of change, such as `created` or
        `deleted`. Optionally, requests that were changed to status `pending` can also be included.  <br /><br />
        **Notes:**  <p> <ul> <li>The results are filtered by **the date the change has occurred** (when the request was
        created or updated), not the start/end date of the time off request itself. </li>         <li>Each change
        reflects a snapshot of the time off request's status **at the time of the change**, and may not reflect the
        current status. </li> </ul></p> <br /> **Permissions required**: Please refer to the main <a
        href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required Permissions</a>
        page.
      parameters:
        - name: since
          in: query
          description: >-
            The starting date for retrieving time off request changes. If the to parameter is missing, only changes from
            the last 6 months are included. Requests with a date older than 6 months will return an error. Must be in
            ISO 8601 format, e.g., 2050-04-05T14:30:24.345Z or 2050-04-05T12:30-02:00.
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: >-
            Defines the end of the date range for retrieving time off request changes. Must be later than the since
            timestamp and cannot extend more than 6 months beyond it. Requests with a later date range will return an
            error. If omitted, the date range extends from the since timestamp to the present. Must be in ISO 8601
            format, e.g., 2050-04-05T14:30:24.345Z or 2050-04-05T12:30-02:00.
          required: false
          schema:
            type: string
            format: date-time
        - name: includePending
          in: query
          description: Optional parameter. Indicates whether to include pending requests in the results.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Array of time off requests and their change type
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        changeType:
                          type: string
                          description: Change type - created, canceled or deleted.
                          enum:
                            - Created
                            - Canceled
                            - Deleted
                            - Pending
                        employeeId:
                          type: string
                          description: Employee ID
                          format: uuid
                        employeeDisplayName:
                          type: string
                          description: Employee display name.
                        employeeEmail:
                          type: string
                          description: Employee email address.
                        requestId:
                          type: integer
                          description: >-
                            The backend-id of the current time-off request, representing the latest version of the
                            request.
                        policyTypeDisplayName:
                          type: string
                          description: Display name of the policy type.
                        type:
                          type: string
                          description: >-
                            The type of request duration.<br> <b>portionOnRange</b> is when the request is for every
                            morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the
                            request is for X hours every day during the days requested.
                          enum:
                            - days
                            - hours
                            - portionOnRange
                            - hoursOnRange
                        createdOn:
                          type: string
                          description: The date and time the time off request was created.
                          format: date-time
                        startDate:
                          type: string
                          description: Date of the first day of the time off (not relevant for requests using the hours type).
                          format: date
                        startPortion:
                          type: string
                          description: >-
                            What portion of the first day is included - all_day, morning or afternoon (relevant for
                            requests using the Days type).
                        endDate:
                          type: string
                          description: Date of the last day of the time off (not relevant for requests using the hours type).
                          format: date
                        endPortion:
                          type: string
                          description: >-
                            What portion of the last day is included - all_day, morning or afternoon (relevant for
                            requests using the Days type).
                        dayPortion:
                          type: string
                          description: >-
                            What portion of the request's days is included - morning or afternoon (relevant for requests
                            using the portionOnRange type).
                        date:
                          type: string
                          description: Date of the time off (relevant for requests using the Hours type)
                          format: date
                        hoursOnDate:
                          type: integer
                          description: The time off duration in hours for the date (relevant for requests using the Hours type).
                        dailyHours:
                          type: number
                          description: >-
                            The time off duration in hours for every day in the request (relevant for requests using the
                            hoursOnRange type)
                        durationUnit:
                          type: string
                          description: The unit used for the totalDuration and totalCost - either 'days' or 'hours'
                          enum:
                            - days
                            - hours
                        totalDuration:
                          type: number
                          description: The total amount of time the request covers, including regular days off such as weekends
                        totalCost:
                          type: number
                          description: The amount that will be deducted from the balance
                        changeReason:
                          type: string
                          description: Request change reason
                        originalRequestId:
                          type: integer
                          description: >-
                            The backend-id of the very first time-off request. It remains unchanged regardless of
                            updates that create new time off request records. It serves as the anchor for tracing the
                            request's entire history back to its initial submission.
                        previousRequestId:
                          type: integer
                          description: >-
                            The backend-id of the previous request that was replaced when this new request was created.
                            This occurs when the request’s date or time is updated, resulting in a new time off request
                            record.
                        visibility:
                          allOf:
                            - type: string
                              example: Public
                              description: The request visibility either 'Public', 'Private' or 'Custom name'
                              enum:
                                - Public
                                - Private
                                - Custom name
                      x-readme-ref-name: TimeoffChange
                x-readme-ref-name: TimeoffChanges
      security:
        - Basic: []
  /timeoff/whosout:
    get:
      tags:
        - Time off
      summary: Read a list of who's out of the office.
      description: >-
        Returns time off information for a given date range, only for the users the Service User can access.<br /><br />
        **Please note:** <ul> <li>**Only active users** are included in the response.</li> <li>**Permissions**: Follow
        the <a href="https://apidocs.hibob.com/reference/time-off#required-permissions">Time off API Required
        Permissions</a> instructions to ensure the service user has the required permissions. <li>**Parameters**: The
        data returned is also subject to parameters and the permissions granted to the Service User. Make sure you set
        the relevant permissions when using the 'includePrivate' and 'includePending' flags.</li> </ul> <br />
      parameters:
        - name: from
          in: query
          description: Start period date
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: End period date
          required: true
          schema:
            type: string
            format: date
        - name: includeHourly
          in: query
          description: Include Hourly Requests
          schema:
            type: boolean
            default: false
        - name: includePrivate
          in: query
          description: >-
            This flag determines whether to return private requests and which name to display in the
            policyTypeDisplayName field. <br /> <ul> <li> <b>`false`</b>: <br /> Exclude requests with `private`
            visibility. <br /> For policies with 'public' visibility, return the 'custom' name in the
            `policyTypeDisplayName` field.<br /></li> <li> <b>`true`</b> (requires permissions as listed in the
            endpoint's description): <br /> Include requests with `private` visibility. <br /> Always return the
            original name (not the 'custom' name) in the `policyTypeDisplayName` field. **Note**: when using the
            `includePrivate` flag, the original policy name may include sensitive information. <br /> </li> </ul>
          schema:
            type: boolean
            default: false
        - name: includePending
          in: query
          description: Include Pending Requests
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Time off requests as seen by the logged in user for a given date range.
          content:
            application/json:
              schema:
                type: object
                properties:
                  outs:
                    type: array
                    items:
                      type: object
                      properties:
                        requestId:
                          type: integer
                          format: int64
                        employeeId:
                          type: string
                          description: Employee ID.
                          format: uuid
                        policyType:
                          type: string
                          description: Request policy type, e.g. Holiday, Sick or any defined custom type.
                        policyTypeDisplayName:
                          type: string
                          description: Display name for the policy type. This will be translated based on the locale.
                        type:
                          type: string
                          description: >-
                            The type of request duration.<br> <b>portionOnRange</b> is when the request is for every
                            morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the
                            request is for X hours every day during the days requested.
                          enum:
                            - days
                            - hours
                            - portionOnRange
                            - hoursOnRange
                        startDate:
                          type: string
                          description: Date of the first day of the time off (not relevant for requests using the hours type).
                          format: date
                        startPortion:
                          type: string
                          description: >-
                            What portion of the first day is included - all_day, morning or afternoon (relevant for
                            request using the days type).
                        endDate:
                          type: string
                          description: Date of the last day of the time off (not relevant for requests using the hours type).
                          format: date
                        endPortion:
                          type: string
                          description: >-
                            What portion of the last day is included - all_day, morning or afternoon (relevant for
                            requests using the days type).
                        dayPortion:
                          type: string
                          description: >-
                            What portion of the request's days is included - morning or afternoon (relevant for requests
                            using the portionOnRange type).
                        date:
                          type: string
                          description: Date of the time off (relevant for request using the hours type)
                          format: date
                        hoursOnDate:
                          type: integer
                          description: The time off duration in hours for the date (relevant for request using the hours type).
                        minutes:
                          type: integer
                          description: Relevant for request using the hours type.
                        dailyHours:
                          type: number
                          description: >-
                            The time off duration in hours for every day in the request (relevant for requests using the
                            hoursOnRange type).
                        status:
                          type: string
                          description: Request status. This can be either Approved or Pending.
                        employeeDisplayName:
                          type: string
                          description: Employee display name.
                        visibility:
                          allOf:
                            - type: string
                              example: Public
                              description: The request visibility either 'Public', 'Private' or 'Custom name'
                              enum:
                                - Public
                                - Private
                                - Custom name
                      x-readme-ref-name: Request
                x-readme-ref-name: Requests
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /timeoff/employees/{id}/requests:
    post:
      tags:
        - Time off
      summary: Submit a new time off request.
      description: >-
        Submits a new time off request.<br /> <br />Time off requests can be of the listed types in the body params
        section below.<br /> <br />Each request type requires different parameters in the body params. Select the type
        in the body params section to view the expected fields. <br /><br>**Testing Note:**<br/> To test each type of
        request:<br /> 1. Open the relevant request type in the body params section.<br /> 2. In the test widget on the
        right, click "Request Example" to open the menu, and select the request type you want to send. <br /> 3. Update
        values and send.<br /> <br>**Important testing disclaimer:** Changing the request type example does not
        automatically switch the parameters. First, select the request schema, and then select the equivalent request in
        the "Request Example" to avoid inconsistencies in the example fields.
      parameters:
        - name: id
          in: path
          description: >-
            The Employee ID as pulled from the database, or from the URL In Bob when viewing the employee. For example,
            if the URL in Bob is "https://app.hibob.com/employee-profile/3332883884017713238" you should copy the
            "3332883884017713238".
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Time off request in days
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - startDatePortion
                    - endDate
                    - endDatePortion
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: The type of request duration. This request is for X days. Value must be 'days'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off.
                      format: date
                    startDatePortion:
                      type: string
                      description: >-
                        What portion of the first day is included - <b>'all_day'</b> or <b>'afternoon'</b> (relevant for
                        requests using the Days type).
                    endDate:
                      type: string
                      description: Date of the last day of the time off .
                      format: date
                    endDatePortion:
                      type: string
                      description: >-
                        What portion of the last day is included - <b>'all_day'</b> or <b>'morning'</b> (relevant for
                        requests using the Days type).
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestDays
                - title: Time off request in hours
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - endDate
                    - hours
                    - minutes
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: >-
                        The type of request duration. This request is for X hours during the day requested (This is
                        supported only for policy types measured in hours). Value must be 'hours'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off.
                      format: date
                    endDate:
                      type: string
                      description: Date of the last day of the time off (must be the same as startDate).
                      format: date
                    hours:
                      type: integer
                      description: This field is mandatory if the requestRangeType is set to 'hours'.
                    minutes:
                      type: integer
                      description: Relevant if requestRangeType is set to 'hours'.
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestHours
                - title: Time off request of different hours per day
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - endDate
                    - durations
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: >-
                        The type of request duration. This request is for different hours per day. Value must be
                        'differentDayDurations'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off
                      format: date
                    endDate:
                      type: string
                      description: Date of the last day of the time off.
                      format: date
                    durations:
                      type: array
                      description: Array of durations for each day in the request.
                      items:
                        required:
                          - date
                          - hours
                          - minutes
                        type: object
                        properties:
                          date:
                            type: string
                            description: Date of the duration.
                            format: date
                          hours:
                            type: integer
                            description: The number of hours in the duration.
                          minutes:
                            type: integer
                            description: The number of minutes in the duration.
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestDiffHoursPerDay
                - title: Time off request of same portion per day
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - endDate
                    - dayPortion
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: >-
                        The type of request duration. This request is for every morning or every afternoon during the
                        days requested. Value must be 'portionOnRange'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off.
                      format: date
                    endDate:
                      type: string
                      description: Date of the last day of the time off.
                      format: date
                    dayPortion:
                      type: string
                      description: >-
                        Select <b>morning</b> when the request is for mornings on the days requested. Select
                        <b>afternoon</b> when the request is for afternoons on the days requested.
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestPortionOnRange
                - title: Time off request of same hours per day
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - endDate
                    - dailyHours
                    - dailyMinutes
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: >-
                        The type of request duration. This request is for X hours every day during the days requested
                        (This is supported only for policy types measured in hours). Value must be 'hoursOnRange'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off.
                      format: date
                    endDate:
                      type: string
                      description: Date of the last day of the time off.
                      format: date
                    dailyHours:
                      type: integer
                      description: >-
                        Enter the number of hours when the request is for X hours on the days requested.<br> This is
                        mandatory when the <b>requestRangeType</b> is <b>hoursOnRange</b>.
                    dailyMinutes:
                      type: integer
                      description: >-
                        Enter the number of minutes when the request is for X hours and X minutes on the days
                        requested.<br> This is relevant when the <b>requestRangeType</b> is <b>hoursOnRange</b> and the
                        amount requested is not a full hour or hours.
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestHoursOnRange
                - title: Time off request of specific hours per day
                  required:
                    - requestRangeType
                    - policyType
                    - startDate
                    - endDate
                    - localStartTime
                    - localEndTime
                  type: object
                  properties:
                    requestRangeType:
                      type: string
                      description: >-
                        The type of request duration. This request is for specific hours per day. Value must be
                        'specificHoursDayDurations'.
                    policyType:
                      type: string
                      description: Request policy type, e.g. Holiday, Sick or any custom type defined.
                    startDate:
                      type: string
                      description: Date of the first day of the time off
                      format: date
                    endDate:
                      type: string
                      description: Date of the last day of the time off.
                      format: date
                    localStartTime:
                      type: string
                      description: Start time of the duration
                      format: time
                    localEndTime:
                      type: string
                      description: End time of the duration
                      format: time
                    skipManagerApproval:
                      type: boolean
                      description: >-
                        Admins only can skip the approval policy. Setting this field to true will create an approved
                        request.
                    approver:
                      type: string
                      description: >-
                        The employee ID of the user to be set as the approver for this request. This is relevant if
                        'skipManagerApproval' is set to true.<br>Please note that the user calling the API with this
                        param must have permission to import time off requests.
                    description:
                      type: string
                      description: Request reason.
                    reasonCode:
                      type: integer
                      description: >-
                        The reason code ID taken from the policy type's reason codes list. The list is available in GET
                        /timeoff/policy-types/{policyType}/reason-codes
                  x-readme-ref-name: SubmitTimeoffRequestSpecificHoursOnRange
            examples:
              SubmitTimeoffRequestDays:
                summary: Time off request in days
                value:
                  requestRangeType: days
                  policyType: Holiday
                  startDate: '2024-05-29'
                  startDatePortion: all_day
                  endDate: '2024-06-03'
                  endDatePortion: morning
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
              SubmitTimeoffRequestHours:
                summary: Time off request in hours
                value:
                  requestRangeType: hours
                  policyType: Holiday
                  startDate: '2024-05-29'
                  endDate: '2024-05-29'
                  hours: 4
                  minutes: 30
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
              SubmitTimeoffRequestDiffHoursPerDay:
                summary: Time off request of different hours per day
                value:
                  requestRangeType: differentDayDurations
                  policyType: Holiday
                  startDate: '2024-01-03'
                  endDate: '2024-01-05'
                  durations:
                    - date: '2024-01-03'
                      hours: 0
                      minutes: 15
                    - date: '2024-01-04'
                      hours: 0
                      minutes: 0
                    - date: '2024-01-05'
                      hours: 2
                      minutes: 45
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
              SubmitTimeoffRequestPortionOnRange:
                summary: Time off request of same portion per day
                value:
                  requestRangeType: portionOnRange
                  policyType: Holiday
                  startDate: '2024-05-29'
                  endDate: '2024-06-03'
                  dayPortion: morning
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
              SubmitTimeoffRequestHoursOnRange:
                summary: Time off request of same hours per day
                value:
                  requestRangeType: hoursOnRange
                  policyType: Holiday
                  startDate: '2024-05-29'
                  endDate: '2024-06-03'
                  dailyHours: 7
                  dailyMinutes: 30
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
              SubmitTimeoffRequestSpecificHoursOnRange:
                summary: Time off request of specific hours per day
                value:
                  requestRangeType: specificHoursDayDurations
                  policyType: Holiday
                  startDate: '2024-01-03'
                  endDate: '2024-01-05'
                  localStartTime: '09:30:00'
                  localEndTime: '13:00:00'
                  skipManagerApproval: false
                  approver: '3452152476387906847'
                  description: a much needed holiday
                  reasonCode: 3000
        required: true
      responses:
        '200':
          description: Successfully submitted
          content: {}
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /metadata/objects/position:
    get:
      tags:
        - Workforce Planning
      summary: Get all positions fields
      description: Returns a list of all fields of object type position.<br/>
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /positions/position-budget/metadata:
    get:
      tags:
        - Workforce Planning
      summary: Get all position budget fields
      description: Returns a list of all fields of object type position budget.<br/>
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        '403':
          description: Forbidden. The service user does not have the required permissions.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /positions/position-openings/metadata:
    get:
      tags:
        - Workforce Planning
      summary: Get all positions openings fields
      description: Returns a list of all fields of object type position opening.<br/>
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the field.
                  name:
                    type: string
                    description: Name of the field.
                  description:
                    type: string
                    description: Description of the field.
                  fieldType:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of the field.
                      typeData:
                        type: object
                        properties:
                          listId:
                            type: string
                            description: The ID of the list in the /v1/company/named-lists endpoint.
                  jsonPath:
                    type: object
                    properties:
                      root:
                        type: string
                        description: >-
                          The path to the field json object. The field value and other properties, such as humanReadable
                          value, will be placed inside.
                      rawData:
                        type: string
                        description: The path to the actual field value.
                x-readme-ref-name: ObjectsMetadata
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
  /objects/position/search:
    post:
      tags:
        - Workforce Planning
      summary: Read company positions
      description: >-
        This endpoint returns a list of company positions filtered by the specified attributes. Note that this endpoint
        requires body parameters, which is why it is implemented as a POST request.  <br /><br /> <br /><br />
        **<b>Required permissions</b>** <br />    To access the positions, the service user making the call must have
        the following permissions: <br /> **Features > Workforce planning > Position management > Manage positions**.
        <br />
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fields
                - filters
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    Array of field IDs to fetch for the positions. A list of the supported field IDs can be found in the
                    '200 response' body detailed below. To find out the field ID of a custom field, use the <a
                    href="https://apidocs.hibob.com/reference/get_metadata-objects-position">Get all positions
                    fields</a> metadata endpoint. <br /> The array can contain 1 to 50 field IDs. Any invalid number of
                    fields will get a response of 400 HTTP error.<br />
                  items:
                    type: string
                    example: /position/name
                filters:
                  type: array
                  description: An array of filtering conditions.
                  items:
                    type: object
                    allOf:
                      - required:
                          - fieldId
                          - operator
                          - values
                        properties:
                          fieldId:
                            type: string
                            description: >-
                              The field id to filter by.<br /> Supported fields: “/position/status”, "/position/name",
                              "/position/hasOpenRequests" , "position/id".<br />Any other path will get a response of
                              400 HTTP error.
                            example: /position/status
                          operator:
                            type: string
                            example: equals
                            description: >-
                              Supported operators: “equals”, "notEqual".<br />Any other operator will get a response of
                              400 HTTP error.
                          values:
                            type: array
                            description: List of values to compare.<br />Empty list will result in 400 HTTP error.
                            items:
                              type: string
                              example: vacant
                        x-readme-ref-name: FilterInstruction
                includeHumanReadable:
                  type: boolean
                  description: Whether to include the additional "humanReadable" entry in the response.
                  default: false
              x-readme-ref-name: GetPositionsRequest
        required: true
      responses:
        '200':
          description: 'The positions returned in the response body. '
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    /position/fte:
                      type: object
                      description: The position's full time equivalent (FTE%).
                      properties:
                        humanReadable:
                          type: string
                          example: '5'
                        value:
                          type: number
                          example: 5
                    /position/effectiveDate:
                      type: object
                      description: The date this position's budget becomes effective.
                      properties:
                        humanReadable:
                          type: string
                          example: '2023-06-23'
                        value:
                          type: string
                          example: '2023-06-23'
                    /position/endEffectiveDate:
                      type: object
                      description: The date this position's budget stops being effective.
                      properties:
                        humanReadable:
                          type: string
                          example: '2023-06-23'
                        value:
                          type: string
                          example: '2023-06-23'
                    /position/employmentType:
                      type: object
                      description: >-
                        The position's employment type. Possible values: "Permanent", "Temporary", "Apprentice",
                        "Contractor"
                      properties:
                        humanReadable:
                          type: string
                          example: Permanent
                        value:
                          type: string
                          example: Permanent
                    /position/status:
                      type: object
                      description: >-
                        The position's status. Possible values and their human-readable values: "vacant" ("Vacant"),
                        "starting" ("Filled soon"), "filled" ("Filled"), "departing" ("Vacant soon"), "cancelled"
                        ("Cancelled")
                      properties:
                        humanReadable:
                          type: string
                          example: Vacant
                        value:
                          type: string
                          example: vacant
                    /position/actualStartDate:
                      type: object
                      description: The employee's assignment date for this position.
                      properties:
                        humanReadable:
                          type: string
                          example: 23/06/2023
                        value:
                          type: string
                          example: '2023-06-23'
                    /position/reason:
                      type: object
                      description: Reason for changing or creating this position.
                      properties:
                        humanReadable:
                          type: string
                        value:
                          type: string
                    /position/positionType:
                      type: object
                      description: The position's type.
                      properties:
                        humanReadable:
                          type: string
                          example: R&D
                        value:
                          type: string
                          example: '256179722'
                    /position/filledBy:
                      type: object
                      description: The current assigned employee for this position.
                      properties:
                        humanReadable:
                          type: string
                          example: Audrey Darby
                        value:
                          type: string
                          example: '3006749430876471221'
                    /position/job:
                      type: object
                      description: >-
                        The ID of the job level associated with this position. If you're using the new Job Catalog 2.0
                        (either in new installations or after migrating from the old catalog), this field will contain
                        the ID of the job profile and match the value in `/position/jobProfile`. <br> **Importnat
                        Note**: This field will be deprecated in the future. We recommend switching to
                        `/position/jobProfile` instead.
                      properties:
                        humanReadable:
                          type: string
                          example: Sales person  Level 1
                        value:
                          type: number
                          example: 128822
                    /position/jobProfile:
                      type: object
                      description: >-
                        The ID of the job profile assigned to this position. Job profiles are available only if you're
                        using the new Job Catalog 2.0, either by default or after migrating from the old catalog. Use
                        the Job Catalog API to retrieve job profile details.
                      properties:
                        humanReadable:
                          type: string
                          example: Track 1 (1) Product manager (J-7760164138)
                        value:
                          type: number
                          example: 124599
                    /position/recruitmentStatus:
                      type: object
                      description: >-
                        The position's recruitment status. Possible values and their human-readable values: "open"
                        ("Open"), "onHold" ("On Hold", "closed" ("Closed")
                      properties:
                        humanReadable:
                          type: string
                          example: Open
                        value:
                          type: string
                          example: open
                    /position/name:
                      type: object
                      description: The unique ID of this position.
                      properties:
                        humanReadable:
                          type: string
                          example: P-2706B
                        value:
                          type: string
                          example: P-2706B
                    /position/department:
                      type: object
                      description: >-
                        The position's department. Possible values depend on the values of the department list. You can
                        fetch the department list values using the <a
                        href="https://apidocs.hibob.com/reference/metadata">metadata endpoints</a>.
                      properties:
                        humanReadable:
                          type: string
                          example: Accountants
                        value:
                          type: string
                          example: '5887485'
                    /position/site:
                      type: object
                      description: >-
                        The position's site.Possible values depend on the values of the site list. You can fetch the
                        site list values using the <a href="https://apidocs.hibob.com/reference/metadata">metadata
                        endpoints</a>.
                      properties:
                        humanReadable:
                          type: string
                          example: Hong Kong
                        value:
                          type: number
                          example: 2220765
                    /position/expectedStartDate:
                      type: object
                      description: The expected date this position should be filled.
                      properties:
                        humanReadable:
                          type: string
                          example: 17/01/2023
                        value:
                          type: string
                          example: '2023-01-17'
                    /position/managerPositionId:
                      type: object
                      description: The manager's position backend-id.
                      properties:
                        humanReadable:
                          type: string
                          example: Accountants  Sales person  Level 1  P-2706B · Hong Kong · Audrey Darby
                        value:
                          type: number
                          example: 257321
                    /position/managerPositionFilledBy:
                      type: object
                      description: The backend-id of the current assigned manager for this position.
                      properties:
                        humanReadable:
                          type: string
                          example: Accountants  Sales person  Level 1  P-2706B · Hong Kong · Audrey Darby
                        value:
                          type: number
                          example: 257321
                    /position/hasOpenRequests:
                      type: object
                      description: Whether this position has pending edit requests.
                      properties:
                        humanReadable:
                          type: string
                          example: 'Yes'
                        value:
                          type: boolean
                          example: 'true'
                    /position/modificationDate:
                      type: object
                      description: The date when this position was last modified.
                      properties:
                        humanReadable:
                          type: string
                          example: 17/01/2023
                        value:
                          type: string
                          example: '2023-01-17'
                    /position/id:
                      type: object
                      description: The id of the position in the backend.
                      properties:
                        humanReadable:
                          type: string
                          example: '12345'
                        value:
                          type: number
                          example: 12345
                    /position/calculatedRecruitmentStatus:
                      type: object
                      description: >-
                        The recruitment status of the position, calculated by the recruitment status of its openings.
                        Possible values and their human-readable values: "open" ("Open"),  "onHold" ("On hold"),
                        "closed" ("Closed")
                      properties:
                        humanReadable:
                          type: string
                          example: Open
                        value:
                          type: string
                          example: open
                    /position/calculatedExpectedStartDate:
                      type: object
                      description: The expected start date of the position, calculated by the expected start date of its openings.
                      properties:
                        humanReadable:
                          type: string
                          example: 17/01/2023
                        value:
                          type: string
                          example: '2023-01-17'
                    /position/calculatedActualStartDate:
                      type: object
                      description: The actual start date of the position, calculated by the actual start date of its openings.
                      properties:
                        humanReadable:
                          type: string
                          example: 17/01/2023
                        value:
                          type: string
                          example: '2023-01-17'
                    /position/budget:
                      type: string
                      description: >-
                        The backend identifier of the budget (cost) associated with this position. This field is
                        included in the response only for positions with a defined budget. If no budget is defined, this
                        field will not be returned. Use the budget ID to retrieve the budget amount and details through
                        the 'Get Position Budgets' endpoint.
                      properties:
                        humanReadable:
                          type: string
                          example: '1234'
                        value:
                          type: number
                          example: 1234
                x-readme-ref-name: PositionEntries
        '400':
          description: Bad request. The request contains incorrect parameters or syntax errors. Please review the request body.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /positions/position-budget/search:
    post:
      tags:
        - Workforce Planning
      summary: Read company positions budgets
      description: >-
        This endpoint returns a list of company positions budgets filtered by the specified attributes. Note that this
        endpoint requires body parameters, which is why it is implemented as a POST request.  <br /><br /> The required
        body parameters are: <br /> - **Fields**: Specify the fields you want to retrieve. A list of available fields
        can be found in the 200 response body detailed below.<br /> - **Filters**: Define the filtering conditions. You
        can filter by the fields defined in the filter section.<br /> - **Pagination**: This endpoint uses cursor-based
        pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a><br /> <br /><br />
        **<b>Required permissions</b>** <br />    To access the positions, the service user making the call must have
        the following permissions: <br /> **Features > Workforce planning > Position management > Manage positions**.
        <br />
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fields
                - filters
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    Array of field ids to fetch for the positions budgets.<br /> Minimum 1 up to 50 fields. Any invalid
                    number of fields will get a response of 400 HTTP error.<br /> You can include only the field ids
                    listed in the '200' response below.
                  items:
                    type: string
                    example: /positionBudget/id
                filters:
                  type: array
                  items:
                    type: object
                    allOf:
                      - required:
                          - fieldId
                          - operator
                          - values
                        properties:
                          fieldId:
                            type: string
                            description: >-
                              The field id to filter by.<br /> Supported fields: <br />“/positionBudget/id” <br />Any
                              other path will get a response of 400 HTTP error.
                            example: /positionBudget/id
                          operator:
                            type: string
                            example: equals
                            description: >-
                              Supported operators: “equals”, "notEqual".<br />Any other operator will get a response of
                              400 HTTP error.
                          values:
                            type: array
                            description: List of values to compare.<br />Empty list will result in 400 HTTP error.
                            items:
                              type: string
                              example: '12345'
                        x-readme-ref-name: PositionBudgetFilterInstruction
                includeHumanReadable:
                  type: boolean
                  description: Whether to include the additional "humanReadable" entry in the response.
                  default: false
                pagination:
                  type: object
                  description: Optional pagination parameters.
                  properties:
                    limit:
                      description: The number of results per page. Defaults to 100 if not supplied.
                      type: number
                      minimum: 1
                      maximum: 100
                      default: 100
                    cursor:
                      description: >-
                        A marker representing the first item on the next page to read. Should not be provided in the
                        first call. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
                        target=”_blank”>Pagination in Bob's API</a>.
                      type: string
                      default: null
                      example: null
              x-readme-ref-name: GetPositionsBudgetsRequest
        required: true
      responses:
        '200':
          description: >-
            The budgets returned in the response body. You can use the fields in the `response body` to see the
            available fields for filtering the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  positionBudgetEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /positionBudget/expectedBaseSalaryCurrencyValue:
                            type: object
                            description: The expected base salary related to this budget.
                            properties:
                              humanReadable:
                                type: string
                                example: 12345$
                              value:
                                type: object
                                properties:
                                  value:
                                    type: number
                                    example: 12345
                                  currency:
                                    type: string
                                    example: USD
                          /positionBudget/expectedVariablePayCurrencyValue:
                            type: object
                            description: The expected variable pay related to this budget.
                            properties:
                              humanReadable:
                                type: string
                                example: 12345$
                              value:
                                type: object
                                properties:
                                  value:
                                    type: number
                                    example: 12345
                                  currency:
                                    type: string
                                    example: USD
                          /positionBudget/salaryPayPeriod:
                            type: object
                            description: >-
                              The salary pay period related to this budget. Possible values - Annual, Annual13,
                              Annual14, Hourly, Daily, Weekly, Monthly, Monthly13, Monthly14, Quarterly
                            properties:
                              humanReadable:
                                type: string
                                example: Weekly
                              value:
                                type: string
                                example: Weekly
                          /positionBudget/variablePayPeriod:
                            type: object
                            description: >-
                              The variable pay period related to this budget. Possible values - Annual, Annual13,
                              Annual14, Hourly, Daily, Weekly, Monthly, Monthly13, Monthly14, Quarterly
                            properties:
                              humanReadable:
                                type: string
                                example: Weekly
                              value:
                                type: string
                                example: Weekly
                          /positionBudget/Currency:
                            type: object
                            description: The currency defined to this budget.
                            properties:
                              humanReadable:
                                type: string
                                example: $
                              value:
                                type: string
                                example: USD
                          /positionBudget/totalPositionCostCurrencyValue:
                            type: object
                            description: The total position cost related to this budget.
                            properties:
                              humanReadable:
                                type: string
                                example: 12345$
                              value:
                                type: object
                                properties:
                                  value:
                                    type: number
                                    example: 12345
                                  currency:
                                    type: string
                                    example: USD
                          /positionBudget/convertedTotalCostCurrencyValue:
                            type: object
                            description: The total position cost converted to company currency related to this budget.
                            properties:
                              humanReadable:
                                type: string
                                example: 12345$
                              value:
                                type: object
                                properties:
                                  value:
                                    type: number
                                    example: 12345
                                  currency:
                                    type: string
                                    example: USD
                          /positionBudget/proRatedCostCurrencyValue:
                            type: object
                            description: >-
                              A calculated field that represents the total cost of a position, converted to the
                              company’s base currency. The value is pro rated based on the portion of time within the
                              current fiscal year when the position is active, using the position's effectiveDate and
                              optional endEffectiveDate.
                            properties:
                              humanReadable:
                                type: string
                                example: 12345$
                              value:
                                type: object
                                properties:
                                  value:
                                    type: number
                                    example: 12345
                                  currency:
                                    type: string
                                    example: USD
                          /positionBudget/updateEffectiveDate:
                            type: object
                            description: The date this budget becomes effective.
                            properties:
                              humanReadable:
                                type: string
                                example: 23/06/2023
                              value:
                                type: string
                                example: 23/06/2023
                          /positionBudget/id:
                            type: object
                            description: The id of the budget.
                            properties:
                              humanReadable:
                                type: string
                                example: '12345'
                              value:
                                type: number
                                example: 12345
                      x-readme-ref-name: PositionBudgetEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: PositionBudgetResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
  /positions/position-openings/search:
    post:
      tags:
        - Workforce Planning
      summary: Read company positions openings
      description: >-
        This endpoint returns a list of company positions openings filtered by the specified attributes. Note that this
        endpoint requires body parameters, which is why it is implemented as a POST request.  <br /><br /> The required
        body parameters are: <br /> - **Fields**: Specify the fields you want to retrieve. A list of available fields
        can be found in the 200 response body detailed below.<br /> - **Filters**: Define the filtering conditions. You
        can filter by the fields defined in the filter section.<br /> - **Pagination**: This endpoint uses cursor-based
        pagination to handle large number of table entries. To learn more, see <a
        href="https://apidocs.hibob.com/docs/pagination" target=”_blank”>Pagination in Bob's API</a><br /> <br /><br />
        **<b>Required permissions</b>** <br />    To access the positions, the service user making the call must have
        the following permissions: <br /> **Features > Workforce planning > Position management > Manage positions**.
        <br />
      requestBody:
        content:
          application/json:
            schema:
              required:
                - fields
                - filters
              type: object
              properties:
                fields:
                  type: array
                  description: >-
                    Array of field ids to fetch for the positions openings.<br /> Minimum 1 up to 50 fields. Any invalid
                    number of fields will get a response of 400 HTTP error.<br /> You can include only the field ids
                    listed in the '200' response below.
                  items:
                    type: string
                    example: /positionOpening/positionOpeningName
                filters:
                  type: array
                  items:
                    type: object
                    allOf:
                      - required:
                          - fieldId
                          - operator
                          - values
                        properties:
                          fieldId:
                            type: string
                            description: >-
                              The field id to filter by.<br /> Supported fields: <br />“/positionOpening/status”
                              (possible values: "vacant", "starting", "filled", "departing") <br
                              />"/positionOpening/positionOpeningName". <br />Any other path will get a response of 400
                              HTTP error.
                            example: /positionOpening/status
                          operator:
                            type: string
                            example: equals
                            description: >-
                              Supported operators: “equals”, "notEqual".<br />Any other operator will get a response of
                              400 HTTP error.
                          values:
                            type: array
                            description: List of values to compare.<br />Empty list will result in 400 HTTP error.
                            items:
                              type: string
                              example: vacant
                        x-readme-ref-name: PositionOpeningFilterInstruction
                includeHumanReadable:
                  type: boolean
                  description: Whether to include the additional "humanReadable" entry in the response.
                  default: false
                pagination:
                  type: object
                  description: Optional pagination parameters.
                  properties:
                    limit:
                      description: The number of results per page. Defaults to 100 if not supplied.
                      type: number
                      minimum: 1
                      maximum: 100
                      default: 100
                    cursor:
                      description: >-
                        A marker representing the first item on the next page to read. Should not be provided in the
                        first call. To learn more, see <a href="https://apidocs.hibob.com/docs/pagination"
                        target=”_blank”>Pagination in Bob's API</a>.
                      type: string
                      default: null
                      example: null
              x-readme-ref-name: GetPositionsOpeningsRequest
        required: true
      responses:
        '200':
          description: >-
            The positions returned in the response body. You can use the fields in the `response body` to see the
            available fields for filtering the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  positionOpeningEntries:
                    type: array
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          /positionOpening/updateEffectiveDate:
                            type: object
                            description: The date this position opening becomes effective.
                            properties:
                              humanReadable:
                                type: string
                                example: 23/06/2023
                              value:
                                type: string
                                example: '2023-06-23'
                          /positionOpening/status:
                            type: object
                            description: >-
                              The position opening's status. Possible values and their human-readable values: "vacant"
                              ("Vacant"), "starting" ("Filled soon"), "filled" ("Filled"), "departing" ("Vacant soon")
                            properties:
                              humanReadable:
                                type: string
                                example: Vacant
                              value:
                                type: string
                                example: vacant
                          /positionOpening/actualStartDate:
                            type: object
                            description: The employee's assignment date for this position opening.
                            properties:
                              humanReadable:
                                type: string
                                example: 23/06/2023
                              value:
                                type: string
                                example: '2023-06-23'
                          /positionOpening/filledBy:
                            type: object
                            description: The current assigned employee for this position opening.
                            properties:
                              humanReadable:
                                type: string
                                example: Audrey Darby
                              value:
                                type: string
                                example: '3006749430876471221'
                          /positionOpening/recruitmentStatus:
                            type: object
                            description: >-
                              The recruitment status of the position opening. Possible values and their human-readable
                              values: "open" ("Open"),  "onHold" ("On hold"), "closed" ("Closed")
                            properties:
                              humanReadable:
                                type: string
                                example: Open
                              value:
                                type: string
                                example: open
                          /positionOpening/positionOpeningName:
                            type: object
                            description: The unique ID of this position opening.
                            properties:
                              humanReadable:
                                type: string
                                example: O-2706B
                              value:
                                type: string
                                example: O-2706B
                          /positionOpening/expectedStartDate:
                            type: object
                            description: The expected date this position opening should be filled.
                            properties:
                              humanReadable:
                                type: string
                                example: 17/01/2023
                              value:
                                type: string
                                example: '2023-01-17'
                          /positionOpening/positionId:
                            type: object
                            description: The unique ID of the position which the position opening is associate with.
                            properties:
                              humanReadable:
                                type: string
                                example: Creative  job 1  Level 1  P-1234567 · New York (Demo) · TBH
                              value:
                                type: boolean
                                example: '1234'
                      x-readme-ref-name: PositionOpeningEntries
                  response_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        description: Cursor for the next call, or null if there are no more results.
                        example: null
                x-readme-ref-name: PositionOpeningsResponse
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: The unique identifier of the error.
                  error:
                    type: string
                    description: A human readable error message.
                x-readme-ref-name: Error
      security:
        - Basic: []
      x-codegen-request-body-name: body
components:
  securitySchemes:
    Basic:
      type: http
      scheme: basic
